{"version":3,"file":"router.min.js","sources":["../node_modules/@uirouter/core/lib-esm/common/hof.js","../node_modules/@uirouter/core/lib-esm/common/predicates.js","../node_modules/@uirouter/core/lib-esm/common/coreservices.js","../node_modules/@uirouter/core/lib-esm/common/common.js","../node_modules/@uirouter/core/lib-esm/transition/rejectFactory.js","../node_modules/@uirouter/core/lib-esm/common/glob.js","../node_modules/@uirouter/core/lib-esm/common/queue.js","../node_modules/@uirouter/core/lib-esm/common/strings.js","../node_modules/@uirouter/core/lib-esm/common/trace.js","../node_modules/@uirouter/core/lib-esm/params/paramType.js","../node_modules/@uirouter/core/lib-esm/params/param.js","../node_modules/@uirouter/core/lib-esm/params/paramTypes.js","../node_modules/@uirouter/core/lib-esm/params/stateParams.js","../node_modules/@uirouter/core/lib-esm/path/pathNode.js","../node_modules/@uirouter/core/lib-esm/state/targetState.js","../node_modules/@uirouter/core/lib-esm/path/pathUtils.js","../node_modules/@uirouter/core/lib-esm/resolve/interface.js","../node_modules/@uirouter/core/lib-esm/resolve/resolvable.js","../node_modules/@uirouter/core/lib-esm/resolve/resolveContext.js","../node_modules/@uirouter/core/lib-esm/state/stateBuilder.js","../node_modules/@uirouter/core/lib-esm/transition/interface.js","../node_modules/@uirouter/core/lib-esm/state/stateObject.js","../node_modules/@uirouter/core/lib-esm/state/stateMatcher.js","../node_modules/@uirouter/core/lib-esm/state/stateQueueManager.js","../node_modules/@uirouter/core/lib-esm/state/stateRegistry.js","../node_modules/@uirouter/core/lib-esm/transition/transitionHook.js","../node_modules/@uirouter/core/lib-esm/transition/hookRegistry.js","../node_modules/@uirouter/core/lib-esm/transition/hookBuilder.js","../node_modules/@uirouter/core/lib-esm/transition/transition.js","../node_modules/@uirouter/core/lib-esm/url/urlMatcher.js","../node_modules/@uirouter/core/lib-esm/url/urlMatcherFactory.js","../node_modules/@uirouter/core/lib-esm/url/urlRule.js","../node_modules/@uirouter/core/lib-esm/url/urlRouter.js","../node_modules/@uirouter/core/lib-esm/url/urlRules.js","../node_modules/@uirouter/core/lib-esm/view/view.js","../node_modules/@uirouter/core/lib-esm/globals.js","../node_modules/@uirouter/core/lib-esm/url/urlConfig.js","../node_modules/@uirouter/core/lib-esm/url/urlService.js","../node_modules/@uirouter/core/lib-esm/router.js","../node_modules/@uirouter/core/lib-esm/hooks/coreResolvables.js","../node_modules/@uirouter/core/lib-esm/hooks/redirectTo.js","../node_modules/@uirouter/core/lib-esm/hooks/onEnterExitRetain.js","../node_modules/@uirouter/core/lib-esm/hooks/resolve.js","../node_modules/@uirouter/core/lib-esm/hooks/views.js","../node_modules/@uirouter/core/lib-esm/hooks/updateGlobals.js","../node_modules/@uirouter/core/lib-esm/hooks/url.js","../node_modules/@uirouter/core/lib-esm/hooks/lazyLoad.js","../node_modules/@uirouter/core/lib-esm/transition/transitionEventType.js","../node_modules/@uirouter/core/lib-esm/hooks/ignoredTransition.js","../node_modules/@uirouter/core/lib-esm/hooks/invalidTransition.js","../node_modules/@uirouter/core/lib-esm/transition/transitionService.js","../node_modules/@uirouter/core/lib-esm/state/stateService.js","../node_modules/@uirouter/core/lib-esm/vanilla/q.js","../node_modules/@uirouter/core/lib-esm/vanilla/injector.js","../node_modules/@uirouter/core/lib-esm/vanilla/utils.js","../node_modules/@uirouter/core/lib-esm/vanilla/baseLocationService.js","../node_modules/@uirouter/core/lib-esm/vanilla/hashLocationService.js","../node_modules/@uirouter/core/lib-esm/vanilla/memoryLocationService.js","../node_modules/@uirouter/core/lib-esm/vanilla/pushStateLocationService.js","../node_modules/@uirouter/core/lib-esm/vanilla/browserLocationConfig.js","../node_modules/@uirouter/core/lib-esm/vanilla/plugins.js","../src/router/site-router.js"],"sourcesContent":["/**\n * Higher order functions\n *\n * These utility functions are exported, but are subject to change without notice.\n *\n * @module common_hof\n */ /** */\n/**\n * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n *\n * Given a function with N parameters, returns a new function that supports partial application.\n * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n * accept more parameters until all N parameters have been supplied.\n *\n *\n * This contrived example uses a partially applied function as an predicate, which returns true\n * if an object is found in both arrays.\n * @example\n * ```\n * // returns true if an object is in both of the two arrays\n * function inBoth(array1, array2, object) {\n *   return array1.indexOf(object) !== -1 &&\n *          array2.indexOf(object) !== 1;\n * }\n * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n * let foos = [obj1, obj3]\n * let bars = [obj3, obj4, obj5]\n *\n * // A curried \"copy\" of inBoth\n * let curriedInBoth = curry(inBoth);\n * // Partially apply both the array1 and array2\n * let inFoosAndBars = curriedInBoth(foos, bars);\n *\n * // Supply the final argument; since all arguments are\n * // supplied, the original inBoth function is then called.\n * let obj1InBoth = inFoosAndBars(obj1); // false\n *\n * // Use the inFoosAndBars as a predicate.\n * // Filter, on each iteration, supplies the final argument\n * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n *\n * ```\n *\n * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n *\n * @param fn\n * @returns {*|function(): (*|any)}\n */\nexport function curry(fn) {\n    var initial_args = [].slice.apply(arguments, [1]);\n    var func_args_length = fn.length;\n    function curried(args) {\n        if (args.length >= func_args_length)\n            return fn.apply(null, args);\n        return function () {\n            return curried(args.concat([].slice.apply(arguments)));\n        };\n    }\n    return curried(initial_args);\n}\n/**\n * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n * given: f(x), g(x), h(x)\n * let composed = compose(f,g,h)\n * then, composed is: f(g(h(x)))\n */\nexport function compose() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n        var i = start, result = args[start].apply(this, arguments);\n        while (i--)\n            result = args[i].call(this, result);\n        return result;\n    };\n}\n/**\n * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n * given: f(x), g(x), h(x)\n * let piped = pipe(f,g,h);\n * then, piped is: h(g(f(x)))\n */\nexport function pipe() {\n    var funcs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        funcs[_i] = arguments[_i];\n    }\n    return compose.apply(null, [].slice.call(arguments).reverse());\n}\n/**\n * Given a property name, returns a function that returns that property from an object\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = prop(\"name\");\n * getName(obj) === \"blarg\"\n */\nexport var prop = function (name) { return function (obj) { return obj && obj[name]; }; };\n/**\n * Given a property name and a value, returns a function that returns a boolean based on whether\n * the passed object has a property that matches the value\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = propEq(\"name\", \"blarg\");\n * getName(obj) === true\n */\nexport var propEq = curry(function (name, _val, obj) { return obj && obj[name] === _val; });\n/**\n * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n * let getName = prop(\"nestedObj.name\");\n * getName(obj) === \"blarg\"\n * let propNotFound = prop(\"this.property.doesnt.exist\");\n * propNotFound(obj) === undefined\n */\nexport var parse = function (name) { return pipe.apply(null, name.split('.').map(prop)); };\n/**\n * Given a function that returns a truthy or falsey value, returns a\n * function that returns the opposite (falsey or truthy) value given the same inputs\n */\nexport var not = function (fn) { return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return !fn.apply(null, args);\n}; };\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if both functions return truthy for the given arguments\n */\nexport function and(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) && fn2.apply(null, args);\n    };\n}\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if at least one of the functions returns truthy for the given arguments\n */\nexport function or(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) || fn2.apply(null, args);\n    };\n}\n/**\n * Check if all the elements of an array match a predicate function\n *\n * @param fn1 a predicate function `fn1`\n * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n */\nexport var all = function (fn1) { return function (arr) { return arr.reduce(function (b, x) { return b && !!fn1(x); }, true); }; };\n// tslint:disable-next-line:variable-name\nexport var any = function (fn1) { return function (arr) { return arr.reduce(function (b, x) { return b || !!fn1(x); }, false); }; };\n/** Given a class, returns a Predicate function that returns true if the object is of that class */\nexport var is = function (ctor) { return function (obj) {\n    return (obj != null && obj.constructor === ctor) || obj instanceof ctor;\n}; };\n/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\nexport var eq = function (value) { return function (other) { return value === other; }; };\n/** Given a value, returns a function which returns the value */\nexport var val = function (v) { return function () { return v; }; };\nexport function invoke(fnName, args) {\n    return function (obj) { return obj[fnName].apply(obj, args); };\n}\n/**\n * Sorta like Pattern Matching (a functional programming conditional construct)\n *\n * See http://c2.com/cgi/wiki?PatternMatching\n *\n * This is a conditional construct which allows a series of predicates and output functions\n * to be checked and then applied.  Each predicate receives the input.  If the predicate\n * returns truthy, then its matching output function (mapping function) is provided with\n * the input and, then the result is returned.\n *\n * Each combination (2-tuple) of predicate + output function should be placed in an array\n * of size 2: [ predicate, mapFn ]\n *\n * These 2-tuples should be put in an outer array.\n *\n * @example\n * ```\n *\n * // Here's a 2-tuple where the first element is the isString predicate\n * // and the second element is a function that returns a description of the input\n * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n *\n * // Second tuple: predicate \"isNumber\", mapfn returns a description\n * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n *\n * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n *\n * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n *\n * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n *\n * console.log(descriptionOf(undefined)); // 'notdefined'\n * console.log(descriptionOf(55)); // '(55) That's a number!'\n * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n * ```\n *\n * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n * with a Predicate and a mapping/output function\n * @returns {function(any): *}\n */\nexport function pattern(struct) {\n    return function (x) {\n        for (var i = 0; i < struct.length; i++) {\n            if (struct[i][0](x))\n                return struct[i][1](x);\n        }\n    };\n}\n//# sourceMappingURL=hof.js.map","/** Predicates\n *\n * These predicates return true/false based on the input.\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_predicates\n */ /** */\nimport { and, not, pipe, prop, or } from './hof';\nvar toStr = Object.prototype.toString;\nvar tis = function (t) { return function (x) { return typeof x === t; }; };\nexport var isUndefined = tis('undefined');\nexport var isDefined = not(isUndefined);\nexport var isNull = function (o) { return o === null; };\nexport var isNullOrUndefined = or(isNull, isUndefined);\nexport var isFunction = tis('function');\nexport var isNumber = tis('number');\nexport var isString = tis('string');\nexport var isObject = function (x) { return x !== null && typeof x === 'object'; };\nexport var isArray = Array.isArray;\nexport var isDate = (function (x) { return toStr.call(x) === '[object Date]'; });\nexport var isRegExp = (function (x) { return toStr.call(x) === '[object RegExp]'; });\n/**\n * Predicate which checks if a value is injectable\n *\n * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n * where all the elements in the array are Strings, except the last one, which is a Function\n */\nexport function isInjectable(val) {\n    if (isArray(val) && val.length) {\n        var head = val.slice(0, -1), tail = val.slice(-1);\n        return !(head.filter(not(isString)).length || tail.filter(not(isFunction)).length);\n    }\n    return isFunction(val);\n}\n/**\n * Predicate which checks if a value looks like a Promise\n *\n * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n */\nexport var isPromise = and(isObject, pipe(prop('then'), isFunction));\n//# sourceMappingURL=predicates.js.map","var noImpl = function (fnname) { return function () {\n    throw new Error(\"No implementation for \" + fnname + \". The framework specific code did not implement this method.\");\n}; };\nexport var makeStub = function (service, methods) {\n    return methods.reduce(function (acc, key) { return ((acc[key] = noImpl(service + \".\" + key + \"()\")), acc); }, {});\n};\nvar services = {\n    $q: undefined,\n    $injector: undefined,\n};\nexport { services };\n//# sourceMappingURL=coreservices.js.map","/**\n * Random utility functions used in the UI-Router code\n *\n * These functions are exported, but are subject to change without notice.\n *\n * @preferred @publicapi @module common\n */ /** */\nimport { isFunction, isString, isArray, isRegExp, isDate } from './predicates';\nimport { all, any, prop, curry, not } from './hof';\nimport { services } from './coreservices';\nexport var root = (typeof self === 'object' && self.self === self && self) ||\n    (typeof global === 'object' && global.global === global && global) ||\n    this;\nvar angular = root.angular || {};\nexport var fromJson = angular.fromJson || JSON.parse.bind(JSON);\nexport var toJson = angular.toJson || JSON.stringify.bind(JSON);\nexport var forEach = angular.forEach || _forEach;\nexport var extend = Object.assign || _extend;\nexport var equals = angular.equals || _equals;\nexport function identity(x) {\n    return x;\n}\nexport function noop() { }\n/**\n * Builds proxy functions on the `to` object which pass through to the `from` object.\n *\n * For each key in `fnNames`, creates a proxy function on the `to` object.\n * The proxy function calls the real function on the `from` object.\n *\n *\n * #### Example:\n * This example creates an new class instance whose functions are prebound to the new'd object.\n * ```js\n * class Foo {\n *   constructor(data) {\n *     // Binds all functions from Foo.prototype to 'this',\n *     // then copies them to 'this'\n *     bindFunctions(Foo.prototype, this, this);\n *     this.data = data;\n *   }\n *\n *   log() {\n *     console.log(this.data);\n *   }\n * }\n *\n * let myFoo = new Foo([1,2,3]);\n * var logit = myFoo.log;\n * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n * ```\n *\n * #### Example:\n * This example creates a bound version of a service function, and copies it to another object\n * ```\n *\n * var SomeService = {\n *   this.data = [3, 4, 5];\n *   this.log = function() {\n *     console.log(this.data);\n *   }\n * }\n *\n * // Constructor fn\n * function OtherThing() {\n *   // Binds all functions from SomeService to SomeService,\n *   // then copies them to 'this'\n *   bindFunctions(SomeService, this, SomeService);\n * }\n *\n * let myOtherThing = new OtherThing();\n * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n * ```\n *\n * @param source A function that returns the source object which contains the original functions to be bound\n * @param target A function that returns the target object which will receive the bound functions\n * @param bind A function that returns the object which the functions will be bound to\n * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n * @param latebind If true, the binding of the function is delayed until the first time it's invoked\n */\nexport function createProxyFunctions(source, target, bind, fnNames, latebind) {\n    if (latebind === void 0) { latebind = false; }\n    var bindFunction = function (fnName) { return source()[fnName].bind(bind()); };\n    var makeLateRebindFn = function (fnName) {\n        return function lateRebindFunction() {\n            target[fnName] = bindFunction(fnName);\n            return target[fnName].apply(null, arguments);\n        };\n    };\n    fnNames = fnNames || Object.keys(source());\n    return fnNames.reduce(function (acc, name) {\n        acc[name] = latebind ? makeLateRebindFn(name) : bindFunction(name);\n        return acc;\n    }, target);\n}\n/**\n * prototypal inheritance helper.\n * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n */\nexport var inherit = function (parent, extra) { return extend(Object.create(parent), extra); };\n/** Given an array, returns true if the object is found in the array, (using indexOf) */\nexport var inArray = curry(_inArray);\nexport function _inArray(array, obj) {\n    return array.indexOf(obj) !== -1;\n}\n/**\n * Given an array, and an item, if the item is found in the array, it removes it (in-place).\n * The same array is returned\n */\nexport var removeFrom = curry(_removeFrom);\nexport function _removeFrom(array, obj) {\n    var idx = array.indexOf(obj);\n    if (idx >= 0)\n        array.splice(idx, 1);\n    return array;\n}\n/** pushes a values to an array and returns the value */\nexport var pushTo = curry(_pushTo);\nexport function _pushTo(arr, val) {\n    return arr.push(val), val;\n}\n/** Given an array of (deregistration) functions, calls all functions and removes each one from the source array */\nexport var deregAll = function (functions) {\n    return functions.slice().forEach(function (fn) {\n        typeof fn === 'function' && fn();\n        removeFrom(functions, fn);\n    });\n};\n/**\n * Applies a set of defaults to an options object.  The options object is filtered\n * to only those properties of the objects in the defaultsList.\n * Earlier objects in the defaultsList take precedence when applying defaults.\n */\nexport function defaults(opts) {\n    var defaultsList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defaultsList[_i - 1] = arguments[_i];\n    }\n    var defaultVals = extend.apply(void 0, [{}].concat(defaultsList.reverse()));\n    return extend(defaultVals, pick(opts || {}, Object.keys(defaultVals)));\n}\n/** Reduce function that merges each element of the list into a single object, using extend */\nexport var mergeR = function (memo, item) { return extend(memo, item); };\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nexport function ancestors(first, second) {\n    var path = [];\n    // tslint:disable-next-line:forin\n    for (var n in first.path) {\n        if (first.path[n] !== second.path[n])\n            break;\n        path.push(first.path[n]);\n    }\n    return path;\n}\n/**\n * Return a copy of the object only containing the whitelisted properties.\n *\n * #### Example:\n * ```\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = pick(foo, ['a', 'b']); // { a: 1, b: 2 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the whitelisted property names\n */\nexport function pick(obj, propNames) {\n    var objCopy = {};\n    for (var _prop in obj) {\n        if (propNames.indexOf(_prop) !== -1) {\n            objCopy[_prop] = obj[_prop];\n        }\n    }\n    return objCopy;\n}\n/**\n * Return a copy of the object omitting the blacklisted properties.\n *\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = omit(foo, ['a', 'b']); // { c: 3 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the blacklisted property names\n */\nexport function omit(obj, propNames) {\n    return Object.keys(obj)\n        .filter(not(inArray(propNames)))\n        .reduce(function (acc, key) { return ((acc[key] = obj[key]), acc); }, {});\n}\n/**\n * Maps an array, or object to a property (by name)\n */\nexport function pluck(collection, propName) {\n    return map(collection, prop(propName));\n}\n/** Filters an Array or an Object's properties based on a predicate */\nexport function filter(collection, callback) {\n    var arr = isArray(collection), result = arr ? [] : {};\n    var accept = arr ? function (x) { return result.push(x); } : function (x, key) { return (result[key] = x); };\n    forEach(collection, function (item, i) {\n        if (callback(item, i))\n            accept(item, i);\n    });\n    return result;\n}\n/** Finds an object from an array, or a property of an object, that matches a predicate */\nexport function find(collection, callback) {\n    var result;\n    forEach(collection, function (item, i) {\n        if (result)\n            return;\n        if (callback(item, i))\n            result = item;\n    });\n    return result;\n}\n/** Given an object, returns a new object, where each property is transformed by the callback function */\nexport var mapObj = map;\n/** Maps an array or object properties using a callback function */\nexport function map(collection, callback, target) {\n    target = target || (isArray(collection) ? [] : {});\n    forEach(collection, function (item, i) { return (target[i] = callback(item, i)); });\n    return target;\n}\n/**\n * Given an object, return its enumerable property values\n *\n * @example\n * ```\n *\n * let foo = { a: 1, b: 2, c: 3 }\n * let vals = values(foo); // [ 1, 2, 3 ]\n * ```\n */\nexport var values = function (obj) { return Object.keys(obj).map(function (key) { return obj[key]; }); };\n/**\n * Reduce function that returns true if all of the values are truthy.\n *\n * @example\n * ```\n *\n * let vals = [ 1, true, {}, \"hello world\"];\n * vals.reduce(allTrueR, true); // true\n *\n * vals.push(0);\n * vals.reduce(allTrueR, true); // false\n * ```\n */\nexport var allTrueR = function (memo, elem) { return memo && elem; };\n/**\n * Reduce function that returns true if any of the values are truthy.\n *\n *  * @example\n * ```\n *\n * let vals = [ 0, null, undefined ];\n * vals.reduce(anyTrueR, true); // false\n *\n * vals.push(\"hello world\");\n * vals.reduce(anyTrueR, true); // true\n * ```\n */\nexport var anyTrueR = function (memo, elem) { return memo || elem; };\n/**\n * Reduce function which un-nests a single level of arrays\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport var unnestR = function (memo, elem) { return memo.concat(elem); };\n/**\n * Reduce function which recursively un-nests all arrays\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport var flattenR = function (memo, elem) {\n    return isArray(elem) ? memo.concat(elem.reduce(flattenR, [])) : pushR(memo, elem);\n};\n/**\n * Reduce function that pushes an object to an array, then returns the array.\n * Mostly just for [[flattenR]] and [[uniqR]]\n */\nexport function pushR(arr, obj) {\n    arr.push(obj);\n    return arr;\n}\n/** Reduce function that filters out duplicates */\nexport var uniqR = function (acc, token) { return (inArray(acc, token) ? acc : pushR(acc, token)); };\n/**\n * Return a new array with a single level of arrays unnested.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport var unnest = function (arr) { return arr.reduce(unnestR, []); };\n/**\n * Return a completely flattened version of an array.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport var flatten = function (arr) { return arr.reduce(flattenR, []); };\n/**\n * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n * @example\n * ```\n *\n * let isNumber = (obj) => typeof(obj) === 'number';\n * let allNumbers = [ 1, 2, 3, 4, 5 ];\n * allNumbers.filter(assertPredicate(isNumber)); //OK\n *\n * let oneString = [ 1, 2, 3, 4, \"5\" ];\n * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n * ```\n */\nexport var assertPredicate = assertFn;\n/**\n * Given a .map function, builds a .map function which throws an error if any mapped elements do not pass a truthyness test.\n * @example\n * ```\n *\n * var data = { foo: 1, bar: 2 };\n *\n * let keys = [ 'foo', 'bar' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // values is [1, 2]\n *\n * let keys = [ 'foo', 'bar', 'baz' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // throws Error(\"Key not found\")\n * ```\n */\nexport var assertMap = assertFn;\nexport function assertFn(predicateOrMap, errMsg) {\n    if (errMsg === void 0) { errMsg = 'assert failure'; }\n    return function (obj) {\n        var result = predicateOrMap(obj);\n        if (!result) {\n            throw new Error(isFunction(errMsg) ? errMsg(obj) : errMsg);\n        }\n        return result;\n    };\n}\n/**\n * Like _.pairs: Given an object, returns an array of key/value pairs\n *\n * @example\n * ```\n *\n * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n * ```\n */\nexport var pairs = function (obj) { return Object.keys(obj).map(function (key) { return [key, obj[key]]; }); };\n/**\n * Given two or more parallel arrays, returns an array of tuples where\n * each tuple is composed of [ a[i], b[i], ... z[i] ]\n *\n * @example\n * ```\n *\n * let foo = [ 0, 2, 4, 6 ];\n * let bar = [ 1, 3, 5, 7 ];\n * let baz = [ 10, 30, 50, 70 ];\n * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n * ```\n */\nexport function arrayTuples() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 0)\n        return [];\n    var maxArrayLen = args.reduce(function (min, arr) { return Math.min(arr.length, min); }, 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n    var result = [];\n    var _loop_1 = function (i) {\n        // This is a hot function\n        // Unroll when there are 1-4 arguments\n        switch (args.length) {\n            case 1:\n                result.push([args[0][i]]);\n                break;\n            case 2:\n                result.push([args[0][i], args[1][i]]);\n                break;\n            case 3:\n                result.push([args[0][i], args[1][i], args[2][i]]);\n                break;\n            case 4:\n                result.push([args[0][i], args[1][i], args[2][i], args[3][i]]);\n                break;\n            default:\n                result.push(args.map(function (array) { return array[i]; }));\n                break;\n        }\n    };\n    for (var i = 0; i < maxArrayLen; i++) {\n        _loop_1(i);\n    }\n    return result;\n}\n/**\n * Reduce function which builds an object from an array of [key, value] pairs.\n *\n * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n *\n * Each keyValueTuple should be an array with values [ key: string, value: any ]\n *\n * @example\n * ```\n *\n * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n *\n * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n *\n * // Or, more simply:\n * var pairsToObj = pairs.reduce(applyPairs, {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n * ```\n */\nexport function applyPairs(memo, keyValTuple) {\n    var key, value;\n    if (isArray(keyValTuple))\n        key = keyValTuple[0], value = keyValTuple[1];\n    if (!isString(key))\n        throw new Error('invalid parameters to applyPairs');\n    memo[key] = value;\n    return memo;\n}\n/** Get the last element of an array */\nexport function tail(arr) {\n    return (arr.length && arr[arr.length - 1]) || undefined;\n}\n/**\n * shallow copy from src to dest\n */\nexport function copy(src, dest) {\n    if (dest)\n        Object.keys(dest).forEach(function (key) { return delete dest[key]; });\n    if (!dest)\n        dest = {};\n    return extend(dest, src);\n}\n/** Naive forEach implementation works with Objects or Arrays */\nfunction _forEach(obj, cb, _this) {\n    if (isArray(obj))\n        return obj.forEach(cb, _this);\n    Object.keys(obj).forEach(function (key) { return cb(obj[key], key); });\n}\nexport function _extend(toObj) {\n    for (var i = 1; i < arguments.length; i++) {\n        var obj = arguments[i];\n        if (!obj)\n            continue;\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; j++) {\n            toObj[keys[j]] = obj[keys[j]];\n        }\n    }\n    return toObj;\n}\nfunction _equals(o1, o2) {\n    if (o1 === o2)\n        return true;\n    if (o1 === null || o2 === null)\n        return false;\n    if (o1 !== o1 && o2 !== o2)\n        return true; // NaN === NaN\n    var t1 = typeof o1, t2 = typeof o2;\n    if (t1 !== t2 || t1 !== 'object')\n        return false;\n    var tup = [o1, o2];\n    if (all(isArray)(tup))\n        return _arraysEq(o1, o2);\n    if (all(isDate)(tup))\n        return o1.getTime() === o2.getTime();\n    if (all(isRegExp)(tup))\n        return o1.toString() === o2.toString();\n    if (all(isFunction)(tup))\n        return true; // meh\n    var predicates = [isFunction, isArray, isDate, isRegExp];\n    if (predicates.map(any).reduce(function (b, fn) { return b || !!fn(tup); }, false))\n        return false;\n    var keys = {};\n    // tslint:disable-next-line:forin\n    for (var key in o1) {\n        if (!_equals(o1[key], o2[key]))\n            return false;\n        keys[key] = true;\n    }\n    for (var key in o2) {\n        if (!keys[key])\n            return false;\n    }\n    return true;\n}\nfunction _arraysEq(a1, a2) {\n    if (a1.length !== a2.length)\n        return false;\n    return arrayTuples(a1, a2).reduce(function (b, t) { return b && _equals(t[0], t[1]); }, true);\n}\n// issue #2676\nexport var silenceUncaughtInPromise = function (promise) { return promise.catch(function (e) { return 0; }) && promise; };\nexport var silentRejection = function (error) { return silenceUncaughtInPromise(services.$q.reject(error)); };\n//# sourceMappingURL=common.js.map","/** @publicapi @module transition */ /** */\n'use strict';\nimport { extend, silentRejection } from '../common/common';\nimport { stringify } from '../common/strings';\nimport { is } from '../common/hof';\nvar RejectType;\n(function (RejectType) {\n    /**\n     * A new transition superseded this one.\n     *\n     * While this transition was running, a new transition started.\n     * This transition is cancelled because it was superseded by new transition.\n     */\n    RejectType[RejectType[\"SUPERSEDED\"] = 2] = \"SUPERSEDED\";\n    /**\n     * The transition was aborted\n     *\n     * The transition was aborted by a hook which returned `false`\n     */\n    RejectType[RejectType[\"ABORTED\"] = 3] = \"ABORTED\";\n    /**\n     * The transition was invalid\n     *\n     * The transition was never started because it was invalid\n     */\n    RejectType[RejectType[\"INVALID\"] = 4] = \"INVALID\";\n    /**\n     * The transition was ignored\n     *\n     * The transition was ignored because it would have no effect.\n     *\n     * Either:\n     *\n     * - The transition is targeting the current state and parameter values\n     * - The transition is targeting the same state and parameter values as the currently running transition.\n     */\n    RejectType[RejectType[\"IGNORED\"] = 5] = \"IGNORED\";\n    /**\n     * The transition errored.\n     *\n     * This generally means a hook threw an error or returned a rejected promise\n     */\n    RejectType[RejectType[\"ERROR\"] = 6] = \"ERROR\";\n})(RejectType || (RejectType = {}));\nexport { RejectType };\n/** @hidden */\nvar id = 0;\nvar Rejection = /** @class */ (function () {\n    function Rejection(type, message, detail) {\n        /** @hidden */\n        this.$id = id++;\n        this.type = type;\n        this.message = message;\n        this.detail = detail;\n    }\n    /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n    Rejection.isRejectionPromise = function (obj) {\n        return obj && typeof obj.then === 'function' && is(Rejection)(obj._transitionRejection);\n    };\n    /** Returns a Rejection due to transition superseded */\n    Rejection.superseded = function (detail, options) {\n        var message = 'The transition has been superseded by a different transition';\n        var rejection = new Rejection(RejectType.SUPERSEDED, message, detail);\n        if (options && options.redirected) {\n            rejection.redirected = true;\n        }\n        return rejection;\n    };\n    /** Returns a Rejection due to redirected transition */\n    Rejection.redirected = function (detail) {\n        return Rejection.superseded(detail, { redirected: true });\n    };\n    /** Returns a Rejection due to invalid transition */\n    Rejection.invalid = function (detail) {\n        var message = 'This transition is invalid';\n        return new Rejection(RejectType.INVALID, message, detail);\n    };\n    /** Returns a Rejection due to ignored transition */\n    Rejection.ignored = function (detail) {\n        var message = 'The transition was ignored';\n        return new Rejection(RejectType.IGNORED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.aborted = function (detail) {\n        var message = 'The transition has been aborted';\n        return new Rejection(RejectType.ABORTED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.errored = function (detail) {\n        var message = 'The transition errored';\n        return new Rejection(RejectType.ERROR, message, detail);\n    };\n    /**\n     * Returns a Rejection\n     *\n     * Normalizes a value as a Rejection.\n     * If the value is already a Rejection, returns it.\n     * Otherwise, wraps and returns the value as a Rejection (Rejection type: ERROR).\n     *\n     * @returns `detail` if it is already a `Rejection`, else returns an ERROR Rejection.\n     */\n    Rejection.normalize = function (detail) {\n        return is(Rejection)(detail) ? detail : Rejection.errored(detail);\n    };\n    Rejection.prototype.toString = function () {\n        var detailString = function (d) { return (d && d.toString !== Object.prototype.toString ? d.toString() : stringify(d)); };\n        var detail = detailString(this.detail);\n        var _a = this, $id = _a.$id, type = _a.type, message = _a.message;\n        return \"Transition Rejection($id: \" + $id + \" type: \" + type + \", message: \" + message + \", detail: \" + detail + \")\";\n    };\n    Rejection.prototype.toPromise = function () {\n        return extend(silentRejection(this), { _transitionRejection: this });\n    };\n    return Rejection;\n}());\nexport { Rejection };\n//# sourceMappingURL=rejectFactory.js.map","/** @publicapi @module core */\n/**\n * Matches state names using glob-like pattern strings.\n *\n * Globs can be used in specific APIs including:\n *\n * - [[StateService.is]]\n * - [[StateService.includes]]\n * - The first argument to Hook Registration functions like [[TransitionService.onStart]]\n *    - [[HookMatchCriteria]] and [[HookMatchCriterion]]\n *\n * A `Glob` string is a pattern which matches state names.\n * Nested state names are split into segments (separated by a dot) when processing.\n * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n *\n * Globs work according to the following rules:\n *\n * ### Exact match:\n *\n * The glob `'A.B'` matches the state named exactly `'A.B'`.\n *\n * | Glob        |Matches states named|Does not match state named|\n * |:------------|:--------------------|:---------------------|\n * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n *\n * ### Single star (`*`)\n *\n * A single star (`*`) is a wildcard that matches exactly one segment.\n *\n * | Glob        |Matches states named  |Does not match state named |\n * |:------------|:---------------------|:--------------------------|\n * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n *\n * ### Double star (`**`)\n *\n * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n *\n * | Glob        |Matches states named                           |Does not match state named         |\n * |:------------|:----------------------------------------------|:----------------------------------|\n * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n *\n */\nvar Glob = /** @class */ (function () {\n    function Glob(text) {\n        this.text = text;\n        this.glob = text.split('.');\n        var regexpString = this.text\n            .split('.')\n            .map(function (seg) {\n            if (seg === '**')\n                return '(?:|(?:\\\\.[^.]*)*)';\n            if (seg === '*')\n                return '\\\\.[^.]*';\n            return '\\\\.' + seg;\n        })\n            .join('');\n        this.regexp = new RegExp('^' + regexpString + '$');\n    }\n    /** Returns true if the string has glob-like characters in it */\n    Glob.is = function (text) {\n        return !!/[!,*]+/.exec(text);\n    };\n    /** Returns a glob from the string, or null if the string isn't Glob-like */\n    Glob.fromString = function (text) {\n        return Glob.is(text) ? new Glob(text) : null;\n    };\n    Glob.prototype.matches = function (name) {\n        return this.regexp.test('.' + name);\n    };\n    return Glob;\n}());\nexport { Glob };\n//# sourceMappingURL=glob.js.map","/** @publicapi @module common */ /** */\nimport { pushTo } from './common';\nvar Queue = /** @class */ (function () {\n    function Queue(_items, _limit) {\n        if (_items === void 0) { _items = []; }\n        if (_limit === void 0) { _limit = null; }\n        this._items = _items;\n        this._limit = _limit;\n        this._evictListeners = [];\n        this.onEvict = pushTo(this._evictListeners);\n    }\n    Queue.prototype.enqueue = function (item) {\n        var items = this._items;\n        items.push(item);\n        if (this._limit && items.length > this._limit)\n            this.evict();\n        return item;\n    };\n    Queue.prototype.evict = function () {\n        var item = this._items.shift();\n        this._evictListeners.forEach(function (fn) { return fn(item); });\n        return item;\n    };\n    Queue.prototype.dequeue = function () {\n        if (this.size())\n            return this._items.splice(0, 1)[0];\n    };\n    Queue.prototype.clear = function () {\n        var current = this._items;\n        this._items = [];\n        return current;\n    };\n    Queue.prototype.size = function () {\n        return this._items.length;\n    };\n    Queue.prototype.remove = function (item) {\n        var idx = this._items.indexOf(item);\n        return idx > -1 && this._items.splice(idx, 1)[0];\n    };\n    Queue.prototype.peekTail = function () {\n        return this._items[this._items.length - 1];\n    };\n    Queue.prototype.peekHead = function () {\n        if (this.size())\n            return this._items[0];\n    };\n    return Queue;\n}());\nexport { Queue };\n//# sourceMappingURL=queue.js.map","/**\n * Functions that manipulate strings\n *\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_strings\n */ /** */\nimport { isArray, isFunction, isInjectable, isNull, isObject, isPromise, isString, isUndefined } from './predicates';\nimport { Rejection } from '../transition/rejectFactory';\nimport { identity, pushR, tail } from './common';\nimport { pattern, val } from './hof';\n/**\n * Returns a string shortened to a maximum length\n *\n * If the string is already less than the `max` length, return the string.\n * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n *\n * @param max the maximum length of the string to return\n * @param str the input string\n */\nexport function maxLength(max, str) {\n    if (str.length <= max)\n        return str;\n    return str.substr(0, max - 3) + '...';\n}\n/**\n * Returns a string, with spaces added to the end, up to a desired str length\n *\n * If the string is already longer than the desired length, return the string.\n * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n *\n * @param length the desired length of the string to return\n * @param str the input string\n */\nexport function padString(length, str) {\n    while (str.length < length)\n        str += ' ';\n    return str;\n}\nexport function kebobString(camelCase) {\n    return camelCase\n        .replace(/^([A-Z])/, function ($1) { return $1.toLowerCase(); }) // replace first char\n        .replace(/([A-Z])/g, function ($1) { return '-' + $1.toLowerCase(); }); // replace rest\n}\nexport function functionToString(fn) {\n    var fnStr = fnToString(fn);\n    var namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n    var toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n    var fnName = fn['name'] || '';\n    if (fnName && toStr.match(/function \\(/)) {\n        return 'function ' + fnName + toStr.substr(9);\n    }\n    return toStr;\n}\nexport function fnToString(fn) {\n    var _fn = isArray(fn) ? fn.slice(-1)[0] : fn;\n    return (_fn && _fn.toString()) || 'undefined';\n}\nvar isRejection = Rejection.isRejectionPromise;\nvar hasToString = function (obj) {\n    return isObject(obj) && !isArray(obj) && obj.constructor !== Object && isFunction(obj.toString);\n};\nvar stringifyPattern = pattern([\n    [isUndefined, val('undefined')],\n    [isNull, val('null')],\n    [isPromise, val('[Promise]')],\n    [isRejection, function (x) { return x._transitionRejection.toString(); }],\n    [hasToString, function (x) { return x.toString(); }],\n    [isInjectable, functionToString],\n    [val(true), identity],\n]);\nexport function stringify(o) {\n    var seen = [];\n    function format(value) {\n        if (isObject(value)) {\n            if (seen.indexOf(value) !== -1)\n                return '[circular ref]';\n            seen.push(value);\n        }\n        return stringifyPattern(value);\n    }\n    if (isUndefined(o)) {\n        // Workaround for IE & Edge Spec incompatibility where replacer function would not be called when JSON.stringify\n        // is given `undefined` as value. To work around that, we simply detect `undefined` and bail out early by\n        // manually stringifying it.\n        return format(o);\n    }\n    return JSON.stringify(o, function (key, value) { return format(value); }).replace(/\\\\\"/g, '\"');\n}\n/** Returns a function that splits a string on a character or substring */\nexport var beforeAfterSubstr = function (char) { return function (str) {\n    if (!str)\n        return ['', ''];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, ''];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\nexport var hostRegex = new RegExp('^(?:[a-z]+:)?//[^/]+/');\nexport var stripLastPathElement = function (str) { return str.replace(/\\/[^/]*$/, ''); };\nexport var splitHash = beforeAfterSubstr('#');\nexport var splitQuery = beforeAfterSubstr('?');\nexport var splitEqual = beforeAfterSubstr('=');\nexport var trimHashVal = function (str) { return (str ? str.replace(/^#/, '') : ''); };\n/**\n * Splits on a delimiter, but returns the delimiters in the array\n *\n * #### Example:\n * ```js\n * var splitOnSlashes = splitOnDelim('/');\n * splitOnSlashes(\"/foo\"); // [\"/\", \"foo\"]\n * splitOnSlashes(\"/foo/\"); // [\"/\", \"foo\", \"/\"]\n * ```\n */\nexport function splitOnDelim(delim) {\n    var re = new RegExp('(' + delim + ')', 'g');\n    return function (str) { return str.split(re).filter(identity); };\n}\n/**\n * Reduce fn that joins neighboring strings\n *\n * Given an array of strings, returns a new array\n * where all neighboring strings have been joined.\n *\n * #### Example:\n * ```js\n * let arr = [\"foo\", \"bar\", 1, \"baz\", \"\", \"qux\" ];\n * arr.reduce(joinNeighborsR, []) // [\"foobar\", 1, \"bazqux\" ]\n * ```\n */\nexport function joinNeighborsR(acc, x) {\n    if (isString(tail(acc)) && isString(x))\n        return acc.slice(0, -1).concat(tail(acc) + x);\n    return pushR(acc, x);\n}\n//# sourceMappingURL=strings.js.map","/**\n * # Transition tracing (debug)\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"@uirouter/core\").trace;\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"@uirouter/core\"].trace;\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @publicapi @module trace\n */\n/* tslint:disable:no-console */\nimport { parse } from '../common/hof';\nimport { isFunction, isNumber } from '../common/predicates';\nimport { stringify, functionToString, maxLength, padString } from './strings';\n/** @hidden */\nfunction uiViewString(uiview) {\n    if (!uiview)\n        return 'ui-view (defunct)';\n    var state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n    return \"[ui-view#\" + uiview.id + \" \" + uiview.$type + \":\" + uiview.fqn + \" (\" + uiview.name + \"@\" + state + \")]\";\n}\n/** @hidden */\nvar viewConfigString = function (viewConfig) {\n    var view = viewConfig.viewDecl;\n    var state = view.$context.name || '(root)';\n    return \"[View#\" + viewConfig.$id + \" from '\" + state + \"' state]: target ui-view: '\" + view.$uiViewName + \"@\" + view.$uiViewContextAnchor + \"'\";\n};\n/** @hidden */\nfunction normalizedCat(input) {\n    return isNumber(input) ? Category[input] : Category[Category[input]];\n}\n/** @hidden */\nvar consoleLog = Function.prototype.bind.call(console.log, console);\n/** @hidden */\nvar consoletable = isFunction(console.table) ? console.table.bind(console) : consoleLog.bind(console);\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\nvar Category;\n(function (Category) {\n    Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n    Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n    Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n    Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n    Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n})(Category || (Category = {}));\nexport { Category };\n/** @hidden */\nvar _tid = parse('$id');\n/** @hidden */\nvar _rid = parse('router.$id');\n/** @hidden */\nvar transLbl = function (trans) { return \"Transition #\" + _tid(trans) + \"-\" + _rid(trans); };\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nvar Trace = /** @class */ (function () {\n    /** @hidden */\n    function Trace() {\n        /** @hidden */\n        this._enabled = {};\n        this.approximateDigests = 0;\n    }\n    /** @hidden */\n    Trace.prototype._set = function (enabled, categories) {\n        var _this = this;\n        if (!categories.length) {\n            categories = Object.keys(Category)\n                .map(function (k) { return parseInt(k, 10); })\n                .filter(function (k) { return !isNaN(k); })\n                .map(function (key) { return Category[key]; });\n        }\n        categories.map(normalizedCat).forEach(function (category) { return (_this._enabled[category] = enabled); });\n    };\n    Trace.prototype.enable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(true, categories);\n    };\n    Trace.prototype.disable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(false, categories);\n    };\n    /**\n     * Retrieves the enabled stateus of a [[Category]]\n     *\n     * ```js\n     * trace.enabled(\"VIEWCONFIG\"); // true or false\n     * ```\n     *\n     * @returns boolean true if the category is enabled\n     */\n    Trace.prototype.enabled = function (category) {\n        return !!this._enabled[normalizedCat(category)];\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionStart = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Started  -> \" + stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionIgnored = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Ignored  <> \" + stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookInvocation = function (step, trans, options) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        var event = parse('traceData.hookType')(options) || 'internal', context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown', name = functionToString(step.registeredHook.callback);\n        console.log(transLbl(trans) + \":   Hook -> \" + event + \" context: \" + context + \", \" + maxLength(200, name));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookResult = function (hookResult, trans, transitionOptions) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        console.log(transLbl(trans) + \":   <- Hook returned: \" + maxLength(200, stringify(hookResult)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvePath = function (path, when, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":         Resolving \" + path + \" (\" + when + \")\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":               <- Resolved  \" + resolvable + \" to: \" + maxLength(200, stringify(resolvable.data)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceError = function (reason, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Rejected \" + stringify(trans) + \", reason: \" + reason);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceSuccess = function (finalState, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Success  \" + stringify(trans) + \", final state: \" + finalState.name);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n        if (extra === void 0) { extra = ''; }\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        console.log(\"ui-view: \" + padString(30, event) + \" \" + uiViewString(viewData) + extra);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent('Updating', viewData, \" with ViewConfig from context='\" + context + \"'\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewFill = function (viewData, html) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent('Fill', viewData, \" with: \" + maxLength(200, html));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewSync = function (pairs) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        var uivheader = 'uiview component fqn';\n        var cfgheader = 'view config state (view name)';\n        var mapping = pairs\n            .map(function (_a) {\n            var uiView = _a.uiView, viewConfig = _a.viewConfig;\n            var _b;\n            var uiv = uiView && uiView.fqn;\n            var cfg = viewConfig && viewConfig.viewDecl.$context.name + \": (\" + viewConfig.viewDecl.$name + \")\";\n            return _b = {}, _b[uivheader] = uiv, _b[cfgheader] = cfg, _b;\n        })\n            .sort(function (a, b) { return (a[uivheader] || '').localeCompare(b[uivheader] || ''); });\n        consoletable(mapping);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n    };\n    return Trace;\n}());\nexport { Trace };\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5);\n * ```\n */\nvar trace = new Trace();\nexport { trace };\n//# sourceMappingURL=trace.js.map","/** @publicapi @module params */ /** */\nimport { extend, filter, map } from '../common/common';\nimport { isArray, isDefined } from '../common/predicates';\n/**\n * An internal class which implements [[ParamTypeDefinition]].\n *\n * A [[ParamTypeDefinition]] is a plain javascript object used to register custom parameter types.\n * When a param type definition is registered, an instance of this class is created internally.\n *\n * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n *\n * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n *\n * #### Example:\n * ```js\n * var paramTypeDef = {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n *\n * var paramType = new ParamType(paramTypeDef);\n * ```\n * @internalapi\n */\nvar ParamType = /** @class */ (function () {\n    /**\n     * @param def  A configuration object which contains the custom type definition.  The object's\n     *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n     * @returns a new ParamType object\n     */\n    function ParamType(def) {\n        /** @inheritdoc */\n        this.pattern = /.*/;\n        /** @inheritdoc */\n        this.inherit = true;\n        extend(this, def);\n    }\n    // consider these four methods to be \"abstract methods\" that should be overridden\n    /** @inheritdoc */\n    ParamType.prototype.is = function (val, key) {\n        return true;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.encode = function (val, key) {\n        return val;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.decode = function (val, key) {\n        return val;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.equals = function (a, b) {\n        // tslint:disable-next-line:triple-equals\n        return a == b;\n    };\n    ParamType.prototype.$subPattern = function () {\n        var sub = this.pattern.toString();\n        return sub.substr(1, sub.length - 2);\n    };\n    ParamType.prototype.toString = function () {\n        return \"{ParamType:\" + this.name + \"}\";\n    };\n    /** Given an encoded string, or a decoded object, returns a decoded object */\n    ParamType.prototype.$normalize = function (val) {\n        return this.is(val) ? val : this.decode(val);\n    };\n    /**\n     * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n     * e.g.:\n     * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n     * - url: \"/path?queryParam=1&queryParam=2\n     * - $stateParams.queryParam will be [1, 2]\n     * if `mode` is \"auto\", then\n     * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n     * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n     */\n    ParamType.prototype.$asArray = function (mode, isSearch) {\n        if (!mode)\n            return this;\n        if (mode === 'auto' && !isSearch)\n            throw new Error(\"'auto' array mode is for query parameters only\");\n        return new ArrayType(this, mode);\n    };\n    return ParamType;\n}());\nexport { ParamType };\n/**\n * Wraps up a `ParamType` object to handle array values.\n * @internalapi\n */\nfunction ArrayType(type, mode) {\n    var _this = this;\n    // Wrap non-array value as array\n    function arrayWrap(val) {\n        return isArray(val) ? val : isDefined(val) ? [val] : [];\n    }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n        switch (val.length) {\n            case 0:\n                return undefined;\n            case 1:\n                return mode === 'auto' ? val[0] : val;\n            default:\n                return val;\n        }\n    }\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n        return function handleArray(val) {\n            if (isArray(val) && val.length === 0)\n                return val;\n            var arr = arrayWrap(val);\n            var result = map(arr, callback);\n            return allTruthyMode === true ? filter(result, function (x) { return !x; }).length === 0 : arrayUnwrap(result);\n        };\n    }\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n        return function handleArray(val1, val2) {\n            var left = arrayWrap(val1), right = arrayWrap(val2);\n            if (left.length !== right.length)\n                return false;\n            for (var i = 0; i < left.length; i++) {\n                if (!callback(left[i], right[i]))\n                    return false;\n            }\n            return true;\n        };\n    }\n    ['encode', 'decode', 'equals', '$normalize'].forEach(function (name) {\n        var paramTypeFn = type[name].bind(type);\n        var wrapperFn = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n        _this[name] = wrapperFn(paramTypeFn);\n    });\n    extend(this, {\n        dynamic: type.dynamic,\n        name: type.name,\n        pattern: type.pattern,\n        inherit: type.inherit,\n        raw: type.raw,\n        is: arrayHandler(type.is.bind(type), true),\n        $arrayMode: mode,\n    });\n}\n//# sourceMappingURL=paramType.js.map","/** @publicapi @module params */ /** */\nimport { extend, filter, map, allTrueR, find } from '../common/common';\nimport { prop } from '../common/hof';\nimport { isInjectable, isDefined, isString, isArray, isUndefined } from '../common/predicates';\nimport { services } from '../common/coreservices';\nimport { ParamType } from './paramType';\n/** @hidden */\nvar hasOwn = Object.prototype.hasOwnProperty;\n/** @hidden */\nvar isShorthand = function (cfg) {\n    return ['value', 'type', 'squash', 'array', 'dynamic'].filter(hasOwn.bind(cfg || {})).length === 0;\n};\n/** @internalapi */\nvar DefType;\n(function (DefType) {\n    DefType[DefType[\"PATH\"] = 0] = \"PATH\";\n    DefType[DefType[\"SEARCH\"] = 1] = \"SEARCH\";\n    DefType[DefType[\"CONFIG\"] = 2] = \"CONFIG\";\n})(DefType || (DefType = {}));\nexport { DefType };\n/** @internalapi */\nfunction getParamDeclaration(paramName, location, state) {\n    var noReloadOnSearch = (state.reloadOnSearch === false && location === DefType.SEARCH) || undefined;\n    var dynamic = find([state.dynamic, noReloadOnSearch], isDefined);\n    var defaultConfig = isDefined(dynamic) ? { dynamic: dynamic } : {};\n    var paramConfig = unwrapShorthand(state && state.params && state.params[paramName]);\n    return extend(defaultConfig, paramConfig);\n}\n/** @hidden */\nfunction unwrapShorthand(cfg) {\n    cfg = isShorthand(cfg) ? { value: cfg } : cfg;\n    getStaticDefaultValue['__cacheable'] = true;\n    function getStaticDefaultValue() {\n        return cfg.value;\n    }\n    var $$fn = isInjectable(cfg.value) ? cfg.value : getStaticDefaultValue;\n    return extend(cfg, { $$fn: $$fn });\n}\n/** @hidden */\nfunction getType(cfg, urlType, location, id, paramTypes) {\n    if (cfg.type && urlType && urlType.name !== 'string')\n        throw new Error(\"Param '\" + id + \"' has two type configurations.\");\n    if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type))\n        return paramTypes.type(cfg.type);\n    if (urlType)\n        return urlType;\n    if (!cfg.type) {\n        var type = location === DefType.CONFIG\n            ? 'any'\n            : location === DefType.PATH\n                ? 'path'\n                : location === DefType.SEARCH\n                    ? 'query'\n                    : 'string';\n        return paramTypes.type(type);\n    }\n    return cfg.type instanceof ParamType ? cfg.type : paramTypes.type(cfg.type);\n}\n/**\n * @internalapi\n * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n */\nfunction getSquashPolicy(config, isOptional, defaultPolicy) {\n    var squash = config.squash;\n    if (!isOptional || squash === false)\n        return false;\n    if (!isDefined(squash) || squash == null)\n        return defaultPolicy;\n    if (squash === true || isString(squash))\n        return squash;\n    throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n}\n/** @internalapi */\nfunction getReplace(config, arrayMode, isOptional, squash) {\n    var defaultPolicy = [\n        { from: '', to: isOptional || arrayMode ? undefined : '' },\n        { from: null, to: isOptional || arrayMode ? undefined : '' },\n    ];\n    var replace = isArray(config.replace) ? config.replace : [];\n    if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n    var configuredKeys = map(replace, prop('from'));\n    return filter(defaultPolicy, function (item) { return configuredKeys.indexOf(item.from) === -1; }).concat(replace);\n}\n/** @internalapi */\nvar Param = /** @class */ (function () {\n    function Param(id, type, location, urlConfig, state) {\n        var config = getParamDeclaration(id, location, state);\n        type = getType(config, type, location, id, urlConfig.paramTypes);\n        var arrayMode = getArrayMode();\n        type = arrayMode ? type.$asArray(arrayMode, location === DefType.SEARCH) : type;\n        var isOptional = config.value !== undefined || location === DefType.SEARCH;\n        var dynamic = isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n        var raw = isDefined(config.raw) ? !!config.raw : !!type.raw;\n        var squash = getSquashPolicy(config, isOptional, urlConfig.defaultSquashPolicy());\n        var replace = getReplace(config, arrayMode, isOptional, squash);\n        var inherit = isDefined(config.inherit) ? !!config.inherit : !!type.inherit;\n        // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n        function getArrayMode() {\n            var arrayDefaults = { array: location === DefType.SEARCH ? 'auto' : false };\n            var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n            return extend(arrayDefaults, arrayParamNomenclature, config).array;\n        }\n        extend(this, { id: id, type: type, location: location, isOptional: isOptional, dynamic: dynamic, raw: raw, squash: squash, replace: replace, inherit: inherit, array: arrayMode, config: config });\n    }\n    Param.values = function (params, values) {\n        if (values === void 0) { values = {}; }\n        var paramValues = {};\n        for (var _i = 0, params_1 = params; _i < params_1.length; _i++) {\n            var param = params_1[_i];\n            paramValues[param.id] = param.value(values[param.id]);\n        }\n        return paramValues;\n    };\n    /**\n     * Finds [[Param]] objects which have different param values\n     *\n     * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n     *\n     * @param params: The list of Param objects to filter\n     * @param values1: The first set of parameter values\n     * @param values2: the second set of parameter values\n     *\n     * @returns any Param objects whose values were different between values1 and values2\n     */\n    Param.changed = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return params.filter(function (param) { return !param.type.equals(values1[param.id], values2[param.id]); });\n    };\n    /**\n     * Checks if two param value objects are equal (for a set of [[Param]] objects)\n     *\n     * @param params The list of [[Param]] objects to check\n     * @param values1 The first set of param values\n     * @param values2 The second set of param values\n     *\n     * @returns true if the param values in values1 and values2 are equal\n     */\n    Param.equals = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return Param.changed(params, values1, values2).length === 0;\n    };\n    /** Returns true if a the parameter values are valid, according to the Param definitions */\n    Param.validates = function (params, values) {\n        if (values === void 0) { values = {}; }\n        return params.map(function (param) { return param.validates(values[param.id]); }).reduce(allTrueR, true);\n    };\n    Param.prototype.isDefaultValue = function (value) {\n        return this.isOptional && this.type.equals(this.value(), value);\n    };\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    Param.prototype.value = function (value) {\n        var _this = this;\n        /**\n         * [Internal] Get the default value of a parameter, which may be an injectable function.\n         */\n        var getDefaultValue = function () {\n            if (_this._defaultValueCache)\n                return _this._defaultValueCache.defaultValue;\n            if (!services.$injector)\n                throw new Error('Injectable functions cannot be called at configuration time');\n            var defaultValue = services.$injector.invoke(_this.config.$$fn);\n            if (defaultValue !== null && defaultValue !== undefined && !_this.type.is(defaultValue))\n                throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + _this.id + \"' is not an instance of ParamType (\" + _this.type.name + \")\");\n            if (_this.config.$$fn['__cacheable']) {\n                _this._defaultValueCache = { defaultValue: defaultValue };\n            }\n            return defaultValue;\n        };\n        var replaceSpecialValues = function (val) {\n            for (var _i = 0, _a = _this.replace; _i < _a.length; _i++) {\n                var tuple = _a[_i];\n                if (tuple.from === val)\n                    return tuple.to;\n            }\n            return val;\n        };\n        value = replaceSpecialValues(value);\n        return isUndefined(value) ? getDefaultValue() : this.type.$normalize(value);\n    };\n    Param.prototype.isSearch = function () {\n        return this.location === DefType.SEARCH;\n    };\n    Param.prototype.validates = function (value) {\n        // There was no parameter value, but the param is optional\n        if ((isUndefined(value) || value === null) && this.isOptional)\n            return true;\n        // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n        var normalized = this.type.$normalize(value);\n        if (!this.type.is(normalized))\n            return false;\n        // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n        var encoded = this.type.encode(normalized);\n        return !(isString(encoded) && !this.type.pattern.exec(encoded));\n    };\n    Param.prototype.toString = function () {\n        return \"{Param:\" + this.id + \" \" + this.type + \" squash: '\" + this.squash + \"' optional: \" + this.isOptional + \"}\";\n    };\n    return Param;\n}());\nexport { Param };\n//# sourceMappingURL=param.js.map","/** @publicapi @module params */ /** */\nimport { fromJson, toJson, identity, equals, inherit, map, extend, pick } from '../common/common';\nimport { isDefined, isNullOrUndefined } from '../common/predicates';\nimport { is } from '../common/hof';\nimport { services } from '../common/coreservices';\nimport { ParamType } from './paramType';\n/**\n * A registry for parameter types.\n *\n * This registry manages the built-in (and custom) parameter types.\n *\n * The built-in parameter types are:\n *\n * - [[string]]\n * - [[path]]\n * - [[query]]\n * - [[hash]]\n * - [[int]]\n * - [[bool]]\n * - [[date]]\n * - [[json]]\n * - [[any]]\n *\n * To register custom parameter types, use [[UrlConfig.type]], i.e.,\n *\n * ```js\n * router.urlService.config.type(customType)\n * ```\n */\nvar ParamTypes = /** @class */ (function () {\n    /** @internalapi */\n    function ParamTypes() {\n        /** @hidden */\n        this.enqueue = true;\n        /** @hidden */\n        this.typeQueue = [];\n        /** @internalapi */\n        this.defaultTypes = pick(ParamTypes.prototype, [\n            'hash',\n            'string',\n            'query',\n            'path',\n            'int',\n            'bool',\n            'date',\n            'json',\n            'any',\n        ]);\n        // Register default types. Store them in the prototype of this.types.\n        var makeType = function (definition, name) { return new ParamType(extend({ name: name }, definition)); };\n        this.types = inherit(map(this.defaultTypes, makeType), {});\n    }\n    /** @internalapi */\n    ParamTypes.prototype.dispose = function () {\n        this.types = {};\n    };\n    /**\n     * Registers a parameter type\n     *\n     * End users should call [[UrlMatcherFactory.type]], which delegates to this method.\n     */\n    ParamTypes.prototype.type = function (name, definition, definitionFn) {\n        if (!isDefined(definition))\n            return this.types[name];\n        if (this.types.hasOwnProperty(name))\n            throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n        this.types[name] = new ParamType(extend({ name: name }, definition));\n        if (definitionFn) {\n            this.typeQueue.push({ name: name, def: definitionFn });\n            if (!this.enqueue)\n                this._flushTypeQueue();\n        }\n        return this;\n    };\n    /** @internalapi */\n    ParamTypes.prototype._flushTypeQueue = function () {\n        while (this.typeQueue.length) {\n            var type = this.typeQueue.shift();\n            if (type.pattern)\n                throw new Error(\"You cannot override a type's .pattern at runtime.\");\n            extend(this.types[type.name], services.$injector.invoke(type.def));\n        }\n    };\n    return ParamTypes;\n}());\nexport { ParamTypes };\n/** @hidden */\nfunction initDefaultTypes() {\n    var makeDefaultType = function (def) {\n        var valToString = function (val) { return (val != null ? val.toString() : val); };\n        var defaultTypeBase = {\n            encode: valToString,\n            decode: valToString,\n            is: is(String),\n            pattern: /.*/,\n            // tslint:disable-next-line:triple-equals\n            equals: function (a, b) { return a == b; },\n        };\n        return extend({}, defaultTypeBase, def);\n    };\n    // Default Parameter Type Definitions\n    extend(ParamTypes.prototype, {\n        string: makeDefaultType({}),\n        path: makeDefaultType({\n            pattern: /[^/]*/,\n        }),\n        query: makeDefaultType({}),\n        hash: makeDefaultType({\n            inherit: false,\n        }),\n        int: makeDefaultType({\n            decode: function (val) { return parseInt(val, 10); },\n            is: function (val) {\n                return !isNullOrUndefined(val) && this.decode(val.toString()) === val;\n            },\n            pattern: /-?\\d+/,\n        }),\n        bool: makeDefaultType({\n            encode: function (val) { return (val && 1) || 0; },\n            decode: function (val) { return parseInt(val, 10) !== 0; },\n            is: is(Boolean),\n            pattern: /0|1/,\n        }),\n        date: makeDefaultType({\n            encode: function (val) {\n                return !this.is(val)\n                    ? undefined\n                    : [val.getFullYear(), ('0' + (val.getMonth() + 1)).slice(-2), ('0' + val.getDate()).slice(-2)].join('-');\n            },\n            decode: function (val) {\n                if (this.is(val))\n                    return val;\n                var match = this.capture.exec(val);\n                return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n            },\n            is: function (val) { return val instanceof Date && !isNaN(val.valueOf()); },\n            equals: function (l, r) {\n                return ['getFullYear', 'getMonth', 'getDate'].reduce(function (acc, fn) { return acc && l[fn]() === r[fn](); }, true);\n            },\n            pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n            capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/,\n        }),\n        json: makeDefaultType({\n            encode: toJson,\n            decode: fromJson,\n            is: is(Object),\n            equals: equals,\n            pattern: /[^/]*/,\n        }),\n        // does not encode/decode\n        any: makeDefaultType({\n            encode: identity,\n            decode: identity,\n            is: function () { return true; },\n            equals: equals,\n        }),\n    });\n}\ninitDefaultTypes();\n//# sourceMappingURL=paramTypes.js.map","/** @publicapi @module params */ /** */\nimport { extend, ancestors } from '../common/common';\n/** @internalapi */\nvar StateParams = /** @class */ (function () {\n    function StateParams(params) {\n        if (params === void 0) { params = {}; }\n        extend(this, params);\n    }\n    /**\n     * Merges a set of parameters with all parameters inherited between the common parents of the\n     * current state and a given destination state.\n     *\n     * @param {Object} newParams The set of parameters which will be composited with inherited params.\n     * @param {Object} $current Internal definition of object representing the current state.\n     * @param {Object} $to Internal definition of object representing state to transition to.\n     */\n    StateParams.prototype.$inherit = function (newParams, $current, $to) {\n        var parentParams;\n        var parents = ancestors($current, $to), inherited = {}, inheritList = [];\n        for (var i in parents) {\n            if (!parents[i] || !parents[i].params)\n                continue;\n            parentParams = Object.keys(parents[i].params);\n            if (!parentParams.length)\n                continue;\n            for (var j in parentParams) {\n                if (inheritList.indexOf(parentParams[j]) >= 0)\n                    continue;\n                inheritList.push(parentParams[j]);\n                inherited[parentParams[j]] = this[parentParams[j]];\n            }\n        }\n        return extend({}, inherited, newParams);\n    };\n    return StateParams;\n}());\nexport { StateParams };\n//# sourceMappingURL=stateParams.js.map","/** @internalapi @module path */ /** */\nimport { extend, applyPairs, find } from '../common/common';\nimport { propEq } from '../common/hof';\nimport { Param } from '../params/param';\n/**\n * A node in a [[TreeChanges]] path\n *\n * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n * Each PathNode corresponds to a state being entered, exited, or retained.\n * The stateful information includes parameter values and resolve data.\n */\nvar PathNode = /** @class */ (function () {\n    function PathNode(stateOrNode) {\n        if (stateOrNode instanceof PathNode) {\n            var node = stateOrNode;\n            this.state = node.state;\n            this.paramSchema = node.paramSchema.slice();\n            this.paramValues = extend({}, node.paramValues);\n            this.resolvables = node.resolvables.slice();\n            this.views = node.views && node.views.slice();\n        }\n        else {\n            var state = stateOrNode;\n            this.state = state;\n            this.paramSchema = state.parameters({ inherit: false });\n            this.paramValues = {};\n            this.resolvables = state.resolvables.map(function (res) { return res.clone(); });\n        }\n    }\n    PathNode.prototype.clone = function () {\n        return new PathNode(this);\n    };\n    /** Sets [[paramValues]] for the node, from the values of an object hash */\n    PathNode.prototype.applyRawParams = function (params) {\n        var getParamVal = function (paramDef) { return [paramDef.id, paramDef.value(params[paramDef.id])]; };\n        this.paramValues = this.paramSchema.reduce(function (memo, pDef) { return applyPairs(memo, getParamVal(pDef)); }, {});\n        return this;\n    };\n    /** Gets a specific [[Param]] metadata that belongs to the node */\n    PathNode.prototype.parameter = function (name) {\n        return find(this.paramSchema, propEq('id', name));\n    };\n    /**\n     * @returns true if the state and parameter values for another PathNode are\n     * equal to the state and param values for this PathNode\n     */\n    PathNode.prototype.equals = function (node, paramsFn) {\n        var diff = this.diff(node, paramsFn);\n        return diff && diff.length === 0;\n    };\n    /**\n     * Finds Params with different parameter values on another PathNode.\n     *\n     * Given another node (of the same state), finds the parameter values which differ.\n     * Returns the [[Param]] (schema objects) whose parameter values differ.\n     *\n     * Given another node for a different state, returns `false`\n     *\n     * @param node The node to compare to\n     * @param paramsFn A function that returns which parameters should be compared.\n     * @returns The [[Param]]s which differ, or null if the two nodes are for different states\n     */\n    PathNode.prototype.diff = function (node, paramsFn) {\n        if (this.state !== node.state)\n            return false;\n        var params = paramsFn ? paramsFn(this) : this.paramSchema;\n        return Param.changed(params, this.paramValues, node.paramValues);\n    };\n    /**\n     * Returns a clone of the PathNode\n     * @deprecated use instance method `node.clone()`\n     */\n    PathNode.clone = function (node) { return node.clone(); };\n    return PathNode;\n}());\nexport { PathNode };\n//# sourceMappingURL=pathNode.js.map","/** @publicapi @module state */ /** */\nimport { isString } from '../common/predicates';\nimport { stringify } from '../common/strings';\nimport { extend } from '../common';\n/**\n * Encapsulate the target (destination) state/params/options of a [[Transition]].\n *\n * This class is frequently used to redirect a transition to a new destination.\n *\n * See:\n *\n * - [[HookResult]]\n * - [[TransitionHookFn]]\n * - [[TransitionService.onStart]]\n *\n * To create a `TargetState`, use [[StateService.target]].\n *\n * ---\n *\n * This class wraps:\n *\n * 1) an identifier for a state\n * 2) a set of parameters\n * 3) and transition options\n * 4) the registered state object (the [[StateDeclaration]])\n *\n * Many UI-Router APIs such as [[StateService.go]] take a [[StateOrName]] argument which can\n * either be a *state object* (a [[StateDeclaration]] or [[StateObject]]) or a *state name* (a string).\n * The `TargetState` class normalizes those options.\n *\n * A `TargetState` may be valid (the state being targeted exists in the registry)\n * or invalid (the state being targeted is not registered).\n */\nvar TargetState = /** @class */ (function () {\n    /**\n     * The TargetState constructor\n     *\n     * Note: Do not construct a `TargetState` manually.\n     * To create a `TargetState`, use the [[StateService.target]] factory method.\n     *\n     * @param _stateRegistry The StateRegistry to use to look up the _definition\n     * @param _identifier An identifier for a state.\n     *    Either a fully-qualified state name, or the object used to define the state.\n     * @param _params Parameters for the target state\n     * @param _options Transition options.\n     *\n     * @internalapi\n     */\n    function TargetState(_stateRegistry, _identifier, _params, _options) {\n        this._stateRegistry = _stateRegistry;\n        this._identifier = _identifier;\n        this._identifier = _identifier;\n        this._params = extend({}, _params || {});\n        this._options = extend({}, _options || {});\n        this._definition = _stateRegistry.matcher.find(_identifier, this._options.relative);\n    }\n    /** The name of the state this object targets */\n    TargetState.prototype.name = function () {\n        return (this._definition && this._definition.name) || this._identifier;\n    };\n    /** The identifier used when creating this TargetState */\n    TargetState.prototype.identifier = function () {\n        return this._identifier;\n    };\n    /** The target parameter values */\n    TargetState.prototype.params = function () {\n        return this._params;\n    };\n    /** The internal state object (if it was found) */\n    TargetState.prototype.$state = function () {\n        return this._definition;\n    };\n    /** The internal state declaration (if it was found) */\n    TargetState.prototype.state = function () {\n        return this._definition && this._definition.self;\n    };\n    /** The target options */\n    TargetState.prototype.options = function () {\n        return this._options;\n    };\n    /** True if the target state was found */\n    TargetState.prototype.exists = function () {\n        return !!(this._definition && this._definition.self);\n    };\n    /** True if the object is valid */\n    TargetState.prototype.valid = function () {\n        return !this.error();\n    };\n    /** If the object is invalid, returns the reason why */\n    TargetState.prototype.error = function () {\n        var base = this.options().relative;\n        if (!this._definition && !!base) {\n            var stateName = base.name ? base.name : base;\n            return \"Could not resolve '\" + this.name() + \"' from state '\" + stateName + \"'\";\n        }\n        if (!this._definition)\n            return \"No such state '\" + this.name() + \"'\";\n        if (!this._definition.self)\n            return \"State '\" + this.name() + \"' has an invalid definition\";\n    };\n    TargetState.prototype.toString = function () {\n        return \"'\" + this.name() + \"'\" + stringify(this.params());\n    };\n    /**\n     * Returns a copy of this TargetState which targets a different state.\n     * The new TargetState has the same parameter values and transition options.\n     *\n     * @param state The new state that should be targeted\n     */\n    TargetState.prototype.withState = function (state) {\n        return new TargetState(this._stateRegistry, state, this._params, this._options);\n    };\n    /**\n     * Returns a copy of this TargetState, using the specified parameter values.\n     *\n     * @param params the new parameter values to use\n     * @param replace When false (default) the new parameter values will be merged with the current values.\n     *                When true the parameter values will be used instead of the current values.\n     */\n    TargetState.prototype.withParams = function (params, replace) {\n        if (replace === void 0) { replace = false; }\n        var newParams = replace ? params : extend({}, this._params, params);\n        return new TargetState(this._stateRegistry, this._identifier, newParams, this._options);\n    };\n    /**\n     * Returns a copy of this TargetState, using the specified Transition Options.\n     *\n     * @param options the new options to use\n     * @param replace When false (default) the new options will be merged with the current options.\n     *                When true the options will be used instead of the current options.\n     */\n    TargetState.prototype.withOptions = function (options, replace) {\n        if (replace === void 0) { replace = false; }\n        var newOpts = replace ? options : extend({}, this._options, options);\n        return new TargetState(this._stateRegistry, this._identifier, this._params, newOpts);\n    };\n    /** Returns true if the object has a state property that might be a state or state name */\n    TargetState.isDef = function (obj) { return obj && obj.state && (isString(obj.state) || isString(obj.state.name)); };\n    return TargetState;\n}());\nexport { TargetState };\n//# sourceMappingURL=targetState.js.map","/** @internalapi @module path */ /** */\nimport { extend, find, pick, omit, tail, mergeR, values, unnestR, inArray, arrayTuples, } from '../common/common';\nimport { prop, propEq } from '../common/hof';\nimport { TargetState } from '../state/targetState';\nimport { PathNode } from './pathNode';\n/**\n * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n */\nvar PathUtils = /** @class */ (function () {\n    function PathUtils() {\n    }\n    /** Given a PathNode[], create an TargetState */\n    PathUtils.makeTargetState = function (registry, path) {\n        var state = tail(path).state;\n        return new TargetState(registry, state, path.map(prop('paramValues')).reduce(mergeR, {}), {});\n    };\n    PathUtils.buildPath = function (targetState) {\n        var toParams = targetState.params();\n        return targetState.$state().path.map(function (state) { return new PathNode(state).applyRawParams(toParams); });\n    };\n    /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n    PathUtils.buildToPath = function (fromPath, targetState) {\n        var toPath = PathUtils.buildPath(targetState);\n        if (targetState.options().inherit) {\n            return PathUtils.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n        }\n        return toPath;\n    };\n    /**\n     * Creates ViewConfig objects and adds to nodes.\n     *\n     * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n     */\n    PathUtils.applyViewConfigs = function ($view, path, states) {\n        // Only apply the viewConfigs to the nodes for the given states\n        path\n            .filter(function (node) { return inArray(states, node.state); })\n            .forEach(function (node) {\n            var viewDecls = values(node.state.views || {});\n            var subPath = PathUtils.subPath(path, function (n) { return n === node; });\n            var viewConfigs = viewDecls.map(function (view) { return $view.createViewConfig(subPath, view); });\n            node.views = viewConfigs.reduce(unnestR, []);\n        });\n    };\n    /**\n     * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n     *\n     * For a parameter in a node to be inherited from the from path:\n     * - The toPath's node must have a matching node in the fromPath (by state).\n     * - The parameter name must not be found in the toKeys parameter array.\n     *\n     * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n     * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n     * it is not inherited from the fromPath.\n     */\n    PathUtils.inheritParams = function (fromPath, toPath, toKeys) {\n        if (toKeys === void 0) { toKeys = []; }\n        function nodeParamVals(path, state) {\n            var node = find(path, propEq('state', state));\n            return extend({}, node && node.paramValues);\n        }\n        var noInherit = fromPath\n            .map(function (node) { return node.paramSchema; })\n            .reduce(unnestR, [])\n            .filter(function (param) { return !param.inherit; })\n            .map(prop('id'));\n        /**\n         * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n         * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n         */\n        function makeInheritedParamsNode(toNode) {\n            // All param values for the node (may include default key/vals, when key was not found in toParams)\n            var toParamVals = extend({}, toNode && toNode.paramValues);\n            // limited to only those keys found in toParams\n            var incomingParamVals = pick(toParamVals, toKeys);\n            toParamVals = omit(toParamVals, toKeys);\n            var fromParamVals = omit(nodeParamVals(fromPath, toNode.state) || {}, noInherit);\n            // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n            var ownParamVals = extend(toParamVals, fromParamVals, incomingParamVals);\n            return new PathNode(toNode.state).applyRawParams(ownParamVals);\n        }\n        // The param keys specified by the incoming toParams\n        return toPath.map(makeInheritedParamsNode);\n    };\n    /**\n     * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n     */\n    PathUtils.treeChanges = function (fromPath, toPath, reloadState) {\n        var max = Math.min(fromPath.length, toPath.length);\n        var keep = 0;\n        var nodesMatch = function (node1, node2) { return node1.equals(node2, PathUtils.nonDynamicParams); };\n        while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n            keep++;\n        }\n        /** Given a retained node, return a new node which uses the to node's param values */\n        function applyToParams(retainedNode, idx) {\n            var cloned = retainedNode.clone();\n            cloned.paramValues = toPath[idx].paramValues;\n            return cloned;\n        }\n        var from, retained, exiting, entering, to;\n        from = fromPath;\n        retained = from.slice(0, keep);\n        exiting = from.slice(keep);\n        // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n        var retainedWithToParams = retained.map(applyToParams);\n        entering = toPath.slice(keep);\n        to = retainedWithToParams.concat(entering);\n        return { from: from, to: to, retained: retained, retainedWithToParams: retainedWithToParams, exiting: exiting, entering: entering };\n    };\n    /**\n     * Returns a new path which is: the subpath of the first path which matches the second path.\n     *\n     * The new path starts from root and contains any nodes that match the nodes in the second path.\n     * It stops before the first non-matching node.\n     *\n     * Nodes are compared using their state property and their parameter values.\n     * If a `paramsFn` is provided, only the [[Param]] returned by the function will be considered when comparing nodes.\n     *\n     * @param pathA the first path\n     * @param pathB the second path\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     *\n     * @returns an array of PathNodes from the first path which match the nodes in the second path\n     */\n    PathUtils.matching = function (pathA, pathB, paramsFn) {\n        var done = false;\n        var tuples = arrayTuples(pathA, pathB);\n        return tuples.reduce(function (matching, _a) {\n            var nodeA = _a[0], nodeB = _a[1];\n            done = done || !nodeA.equals(nodeB, paramsFn);\n            return done ? matching : matching.concat(nodeA);\n        }, []);\n    };\n    /**\n     * Returns true if two paths are identical.\n     *\n     * @param pathA\n     * @param pathB\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     * @returns true if the the states and parameter values for both paths are identical\n     */\n    PathUtils.equals = function (pathA, pathB, paramsFn) {\n        return pathA.length === pathB.length && PathUtils.matching(pathA, pathB, paramsFn).length === pathA.length;\n    };\n    /**\n     * Return a subpath of a path, which stops at the first matching node\n     *\n     * Given an array of nodes, returns a subset of the array starting from the first node,\n     * stopping when the first node matches the predicate.\n     *\n     * @param path a path of [[PathNode]]s\n     * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n     * @returns a subpath up to the matching node, or undefined if no match is found\n     */\n    PathUtils.subPath = function (path, predicate) {\n        var node = find(path, predicate);\n        var elementIdx = path.indexOf(node);\n        return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n    };\n    PathUtils.nonDynamicParams = function (node) {\n        return node.state.parameters({ inherit: false }).filter(function (param) { return !param.dynamic; });\n    };\n    /** Gets the raw parameter values from a path */\n    PathUtils.paramValues = function (path) { return path.reduce(function (acc, node) { return extend(acc, node.paramValues); }, {}); };\n    return PathUtils;\n}());\nexport { PathUtils };\n//# sourceMappingURL=pathUtils.js.map","/** @internalapi */\nexport var resolvePolicies = {\n    when: {\n        LAZY: 'LAZY',\n        EAGER: 'EAGER',\n    },\n    async: {\n        WAIT: 'WAIT',\n        NOWAIT: 'NOWAIT',\n        RXWAIT: 'RXWAIT',\n    },\n};\n//# sourceMappingURL=interface.js.map","/** @publicapi @module resolve */ /** */\nimport { extend, identity } from '../common/common';\nimport { services } from '../common/coreservices';\nimport { trace } from '../common/trace';\nimport { stringify } from '../common/strings';\nimport { isFunction, isObject } from '../common/predicates';\nimport { isNullOrUndefined } from '../common/predicates';\n// TODO: explicitly make this user configurable\nexport var defaultResolvePolicy = {\n    when: 'LAZY',\n    async: 'WAIT',\n};\n/**\n * The basic building block for the resolve system.\n *\n * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n * and the unwrapped-when-complete (.data) result of the resolveFn.\n *\n * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n * resolveFn) and returns the resulting promise.\n *\n * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n * parameter to those fns.\n */\nvar Resolvable = /** @class */ (function () {\n    function Resolvable(arg1, resolveFn, deps, policy, data) {\n        this.resolved = false;\n        this.promise = undefined;\n        if (arg1 instanceof Resolvable) {\n            extend(this, arg1);\n        }\n        else if (isFunction(resolveFn)) {\n            if (isNullOrUndefined(arg1))\n                throw new Error('new Resolvable(): token argument is required');\n            if (!isFunction(resolveFn))\n                throw new Error('new Resolvable(): resolveFn argument must be a function');\n            this.token = arg1;\n            this.policy = policy;\n            this.resolveFn = resolveFn;\n            this.deps = deps || [];\n            this.data = data;\n            this.resolved = data !== undefined;\n            this.promise = this.resolved ? services.$q.when(this.data) : undefined;\n        }\n        else if (isObject(arg1) && arg1.token && (arg1.hasOwnProperty('resolveFn') || arg1.hasOwnProperty('data'))) {\n            var literal = arg1;\n            return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n        }\n    }\n    Resolvable.prototype.getPolicy = function (state) {\n        var thisPolicy = this.policy || {};\n        var statePolicy = (state && state.resolvePolicy) || {};\n        return {\n            when: thisPolicy.when || statePolicy.when || defaultResolvePolicy.when,\n            async: thisPolicy.async || statePolicy.async || defaultResolvePolicy.async,\n        };\n    };\n    /**\n     * Asynchronously resolve this Resolvable's data\n     *\n     * Given a ResolveContext that this Resolvable is found in:\n     * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n     * and update the Resolvable's state\n     */\n    Resolvable.prototype.resolve = function (resolveContext, trans) {\n        var _this = this;\n        var $q = services.$q;\n        // Gets all dependencies from ResolveContext and wait for them to be resolved\n        var getResolvableDependencies = function () {\n            return $q.all(resolveContext.getDependencies(_this).map(function (resolvable) { return resolvable.get(resolveContext, trans); }));\n        };\n        // Invokes the resolve function passing the resolved dependencies as arguments\n        var invokeResolveFn = function (resolvedDeps) { return _this.resolveFn.apply(null, resolvedDeps); };\n        /**\n         * For RXWAIT policy:\n         *\n         * Given an observable returned from a resolve function:\n         * - enables .cache() mode (this allows multicast subscribers)\n         * - then calls toPromise() (this triggers subscribe() and thus fetches)\n         * - Waits for the promise, then return the cached observable (not the first emitted value).\n         */\n        var waitForRx = function (observable$) {\n            var cached = observable$.cache(1);\n            return cached\n                .take(1)\n                .toPromise()\n                .then(function () { return cached; });\n        };\n        // If the resolve policy is RXWAIT, wait for the observable to emit something. otherwise pass through.\n        var node = resolveContext.findNode(this);\n        var state = node && node.state;\n        var maybeWaitForRx = this.getPolicy(state).async === 'RXWAIT' ? waitForRx : identity;\n        // After the final value has been resolved, update the state of the Resolvable\n        var applyResolvedValue = function (resolvedValue) {\n            _this.data = resolvedValue;\n            _this.resolved = true;\n            _this.resolveFn = null;\n            trace.traceResolvableResolved(_this, trans);\n            return _this.data;\n        };\n        // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n        return (this.promise = $q\n            .when()\n            .then(getResolvableDependencies)\n            .then(invokeResolveFn)\n            .then(maybeWaitForRx)\n            .then(applyResolvedValue));\n    };\n    /**\n     * Gets a promise for this Resolvable's data.\n     *\n     * Fetches the data and returns a promise.\n     * Returns the existing promise if it has already been fetched once.\n     */\n    Resolvable.prototype.get = function (resolveContext, trans) {\n        return this.promise || this.resolve(resolveContext, trans);\n    };\n    Resolvable.prototype.toString = function () {\n        return \"Resolvable(token: \" + stringify(this.token) + \", requires: [\" + this.deps.map(stringify) + \"])\";\n    };\n    Resolvable.prototype.clone = function () {\n        return new Resolvable(this);\n    };\n    Resolvable.fromData = function (token, data) { return new Resolvable(token, function () { return data; }, null, null, data); };\n    return Resolvable;\n}());\nexport { Resolvable };\n//# sourceMappingURL=resolvable.js.map","/** @publicapi @module resolve */ /** */\nimport { find, tail, uniqR, unnestR, inArray } from '../common/common';\nimport { propEq, not } from '../common/hof';\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { resolvePolicies } from './interface';\nimport { Resolvable } from './resolvable';\nimport { PathUtils } from '../path/pathUtils';\nimport { stringify } from '../common/strings';\nimport { isUndefined } from '../common';\nvar whens = resolvePolicies.when;\nvar ALL_WHENS = [whens.EAGER, whens.LAZY];\nvar EAGER_WHENS = [whens.EAGER];\n// tslint:disable-next-line:no-inferrable-types\nexport var NATIVE_INJECTOR_TOKEN = 'Native Injector';\n/**\n * Encapsulates Dependency Injection for a path of nodes\n *\n * UI-Router states are organized as a tree.\n * A nested state has a path of ancestors to the root of the tree.\n * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n *\n * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n */\nvar ResolveContext = /** @class */ (function () {\n    function ResolveContext(_path) {\n        this._path = _path;\n    }\n    /** Gets all the tokens found in the resolve context, de-duplicated */\n    ResolveContext.prototype.getTokens = function () {\n        return this._path.reduce(function (acc, node) { return acc.concat(node.resolvables.map(function (r) { return r.token; })); }, []).reduce(uniqR, []);\n    };\n    /**\n     * Gets the Resolvable that matches the token\n     *\n     * Gets the last Resolvable that matches the token in this context, or undefined.\n     * Throws an error if it doesn't exist in the ResolveContext\n     */\n    ResolveContext.prototype.getResolvable = function (token) {\n        var matching = this._path\n            .map(function (node) { return node.resolvables; })\n            .reduce(unnestR, [])\n            .filter(function (r) { return r.token === token; });\n        return tail(matching);\n    };\n    /** Returns the [[ResolvePolicy]] for the given [[Resolvable]] */\n    ResolveContext.prototype.getPolicy = function (resolvable) {\n        var node = this.findNode(resolvable);\n        return resolvable.getPolicy(node.state);\n    };\n    /**\n     * Returns a ResolveContext that includes a portion of this one\n     *\n     * Given a state, this method creates a new ResolveContext from this one.\n     * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n     *\n     * #### Why\n     *\n     * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n     * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n     * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n     * This method is used to create a narrower context when injecting ancestor nodes.\n     *\n     * @example\n     * `let ABCD = new ResolveContext([A, B, C, D]);`\n     *\n     * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n     * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n     * However, `B` should only be able to access resolvables from `A`, `B`.\n     *\n     * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n     * `let AB = ABCD.subcontext(a)`\n     */\n    ResolveContext.prototype.subContext = function (state) {\n        return new ResolveContext(PathUtils.subPath(this._path, function (node) { return node.state === state; }));\n    };\n    /**\n     * Adds Resolvables to the node that matches the state\n     *\n     * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n     * The resolvable is added to the node matching the `state` parameter.\n     *\n     * These new resolvables are not automatically fetched.\n     * The calling code should either fetch them, fetch something that depends on them,\n     * or rely on [[resolvePath]] being called when some state is being entered.\n     *\n     * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n     *\n     * @param newResolvables the new Resolvables\n     * @param state Used to find the node to put the resolvable on\n     */\n    ResolveContext.prototype.addResolvables = function (newResolvables, state) {\n        var node = find(this._path, propEq('state', state));\n        var keys = newResolvables.map(function (r) { return r.token; });\n        node.resolvables = node.resolvables.filter(function (r) { return keys.indexOf(r.token) === -1; }).concat(newResolvables);\n    };\n    /**\n     * Returns a promise for an array of resolved path Element promises\n     *\n     * @param when\n     * @param trans\n     * @returns {Promise<any>|any}\n     */\n    ResolveContext.prototype.resolvePath = function (when, trans) {\n        var _this = this;\n        if (when === void 0) { when = 'LAZY'; }\n        // This option determines which 'when' policy Resolvables we are about to fetch.\n        var whenOption = inArray(ALL_WHENS, when) ? when : 'LAZY';\n        // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n        // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n        var matchedWhens = whenOption === resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n        // get the subpath to the state argument, if provided\n        trace.traceResolvePath(this._path, when, trans);\n        var matchesPolicy = function (acceptedVals, whenOrAsync) { return function (resolvable) {\n            return inArray(acceptedVals, _this.getPolicy(resolvable)[whenOrAsync]);\n        }; };\n        // Trigger all the (matching) Resolvables in the path\n        // Reduce all the \"WAIT\" Resolvables into an array\n        var promises = this._path.reduce(function (acc, node) {\n            var nodeResolvables = node.resolvables.filter(matchesPolicy(matchedWhens, 'when'));\n            var nowait = nodeResolvables.filter(matchesPolicy(['NOWAIT'], 'async'));\n            var wait = nodeResolvables.filter(not(matchesPolicy(['NOWAIT'], 'async')));\n            // For the matching Resolvables, start their async fetch process.\n            var subContext = _this.subContext(node.state);\n            var getResult = function (r) {\n                return r\n                    .get(subContext, trans)\n                    // Return a tuple that includes the Resolvable's token\n                    .then(function (value) { return ({ token: r.token, value: value }); });\n            };\n            nowait.forEach(getResult);\n            return acc.concat(wait.map(getResult));\n        }, []);\n        // Wait for all the \"WAIT\" resolvables\n        return services.$q.all(promises);\n    };\n    ResolveContext.prototype.injector = function () {\n        return this._injector || (this._injector = new UIInjectorImpl(this));\n    };\n    ResolveContext.prototype.findNode = function (resolvable) {\n        return find(this._path, function (node) { return inArray(node.resolvables, resolvable); });\n    };\n    /**\n     * Gets the async dependencies of a Resolvable\n     *\n     * Given a Resolvable, returns its dependencies as a Resolvable[]\n     */\n    ResolveContext.prototype.getDependencies = function (resolvable) {\n        var _this = this;\n        var node = this.findNode(resolvable);\n        // Find which other resolvables are \"visible\" to the `resolvable` argument\n        // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n        var subPath = PathUtils.subPath(this._path, function (x) { return x === node; }) || this._path;\n        var availableResolvables = subPath\n            .reduce(function (acc, _node) { return acc.concat(_node.resolvables); }, []) // all of subpath's resolvables\n            .filter(function (res) { return res !== resolvable; }); // filter out the `resolvable` argument\n        var getDependency = function (token) {\n            var matching = availableResolvables.filter(function (r) { return r.token === token; });\n            if (matching.length)\n                return tail(matching);\n            var fromInjector = _this.injector().getNative(token);\n            if (isUndefined(fromInjector)) {\n                throw new Error('Could not find Dependency Injection token: ' + stringify(token));\n            }\n            return new Resolvable(token, function () { return fromInjector; }, [], fromInjector);\n        };\n        return resolvable.deps.map(getDependency);\n    };\n    return ResolveContext;\n}());\nexport { ResolveContext };\n/** @internalapi */\nvar UIInjectorImpl = /** @class */ (function () {\n    function UIInjectorImpl(context) {\n        this.context = context;\n        this.native = this.get(NATIVE_INJECTOR_TOKEN) || services.$injector;\n    }\n    UIInjectorImpl.prototype.get = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable) {\n            if (this.context.getPolicy(resolvable).async === 'NOWAIT') {\n                return resolvable.get(this.context);\n            }\n            if (!resolvable.resolved) {\n                throw new Error('Resolvable async .get() not complete:' + stringify(resolvable.token));\n            }\n            return resolvable.data;\n        }\n        return this.getNative(token);\n    };\n    UIInjectorImpl.prototype.getAsync = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable)\n            return resolvable.get(this.context);\n        return services.$q.when(this.native.get(token));\n    };\n    UIInjectorImpl.prototype.getNative = function (token) {\n        return this.native && this.native.get(token);\n    };\n    return UIInjectorImpl;\n}());\n//# sourceMappingURL=resolveContext.js.map","/** @publicapi @module state */ /** */\nimport { applyPairs, extend, identity, inherit, mapObj, noop, omit, tail, values, copy } from '../common/common';\nimport { isArray, isDefined, isFunction, isString } from '../common/predicates';\nimport { stringify } from '../common/strings';\nimport { is, pattern, pipe, prop, val } from '../common/hof';\nimport { Resolvable } from '../resolve/resolvable';\nimport { services } from '../common/coreservices';\nvar parseUrl = function (url) {\n    if (!isString(url))\n        return false;\n    var root = url.charAt(0) === '^';\n    return { val: root ? url.substring(1) : url, root: root };\n};\nfunction nameBuilder(state) {\n    return state.name;\n}\nfunction selfBuilder(state) {\n    state.self.$$state = function () { return state; };\n    return state.self;\n}\nfunction dataBuilder(state) {\n    if (state.parent && state.parent.data) {\n        state.data = state.self.data = inherit(state.parent.data, state.data);\n    }\n    return state.data;\n}\nvar getUrlBuilder = function ($urlMatcherFactoryProvider, root) {\n    return function urlBuilder(stateObject) {\n        var stateDec = stateObject.self;\n        // For future states, i.e., states whose name ends with `.**`,\n        // match anything that starts with the url prefix\n        if (stateDec && stateDec.url && stateDec.name && stateDec.name.match(/\\.\\*\\*$/)) {\n            var newStateDec = {};\n            copy(stateDec, newStateDec);\n            newStateDec.url += '{remainder:any}'; // match any path (.*)\n            stateDec = newStateDec;\n        }\n        var parent = stateObject.parent;\n        var parsed = parseUrl(stateDec.url);\n        var url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, { state: stateDec });\n        if (!url)\n            return null;\n        if (!$urlMatcherFactoryProvider.isMatcher(url))\n            throw new Error(\"Invalid url '\" + url + \"' in state '\" + stateObject + \"'\");\n        return parsed && parsed.root ? url : ((parent && parent.navigable) || root()).url.append(url);\n    };\n};\nvar getNavigableBuilder = function (isRoot) {\n    return function navigableBuilder(state) {\n        return !isRoot(state) && state.url ? state : state.parent ? state.parent.navigable : null;\n    };\n};\nvar getParamsBuilder = function (paramFactory) {\n    return function paramsBuilder(state) {\n        var makeConfigParam = function (config, id) { return paramFactory.fromConfig(id, null, state.self); };\n        var urlParams = (state.url && state.url.parameters({ inherit: false })) || [];\n        var nonUrlParams = values(mapObj(omit(state.params || {}, urlParams.map(prop('id'))), makeConfigParam));\n        return urlParams\n            .concat(nonUrlParams)\n            .map(function (p) { return [p.id, p]; })\n            .reduce(applyPairs, {});\n    };\n};\nfunction pathBuilder(state) {\n    return state.parent ? state.parent.path.concat(state) : /*root*/ [state];\n}\nfunction includesBuilder(state) {\n    var includes = state.parent ? extend({}, state.parent.includes) : {};\n    includes[state.name] = true;\n    return includes;\n}\n/**\n * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * validates the `resolve` property and converts it to a [[Resolvable]] array.\n *\n * resolve: input value can be:\n *\n * {\n *   // analyzed but not injected\n *   myFooResolve: function() { return \"myFooData\"; },\n *\n *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n *\n *   // Array split; \"DependencyName\" dep as string\n *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n *\n *   // Array split; DependencyType dep as token (compared using ===)\n *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n *\n *   // val.$inject used as deps\n *   // where:\n *   //     corgeResolve.$inject = [\"DependencyName\"];\n *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n *   // then \"DependencyName\" dep as string\n *   myCorgeResolve: corgeResolve,\n *\n *  // inject service by name\n *  // When a string is found, desugar creating a resolve that injects the named service\n *   myGraultResolve: \"SomeService\"\n * }\n *\n * or:\n *\n * [\n *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n * ]\n */\nexport function resolvablesBuilder(state) {\n    /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n    var objects2Tuples = function (resolveObj, resolvePolicies) {\n        return Object.keys(resolveObj || {}).map(function (token) { return ({\n            token: token,\n            val: resolveObj[token],\n            deps: undefined,\n            policy: resolvePolicies[token],\n        }); });\n    };\n    /** fetch DI annotations from a function or ng1-style array */\n    var annotate = function (fn) {\n        var $injector = services.$injector;\n        // ng1 doesn't have an $injector until runtime.\n        // If the $injector doesn't exist, use \"deferred\" literal as a\n        // marker indicating they should be annotated when runtime starts\n        return fn['$inject'] || ($injector && $injector.annotate(fn, $injector.strictDi)) || 'deferred';\n    };\n    /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n    var isResolveLiteral = function (obj) { return !!(obj.token && obj.resolveFn); };\n    /** true if the object looks like a provide literal, or a ng2 Provider */\n    var isLikeNg2Provider = function (obj) {\n        return !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass));\n    };\n    /** true if the object looks like a tuple from obj2Tuples */\n    var isTupleFromObj = function (obj) {\n        return !!(obj && obj.val && (isString(obj.val) || isArray(obj.val) || isFunction(obj.val)));\n    };\n    /** extracts the token from a Provider or provide literal */\n    var getToken = function (p) { return p.provide || p.token; };\n    // prettier-ignore: Given a literal resolve or provider object, returns a Resolvable\n    var literal2Resolvable = pattern([\n        [prop('resolveFn'), function (p) { return new Resolvable(getToken(p), p.resolveFn, p.deps, p.policy); }],\n        [prop('useFactory'), function (p) { return new Resolvable(getToken(p), p.useFactory, p.deps || p.dependencies, p.policy); }],\n        [prop('useClass'), function (p) { return new Resolvable(getToken(p), function () { return new p.useClass(); }, [], p.policy); }],\n        [prop('useValue'), function (p) { return new Resolvable(getToken(p), function () { return p.useValue; }, [], p.policy, p.useValue); }],\n        [prop('useExisting'), function (p) { return new Resolvable(getToken(p), identity, [p.useExisting], p.policy); }],\n    ]);\n    // prettier-ignore\n    var tuple2Resolvable = pattern([\n        [pipe(prop('val'), isString), function (tuple) { return new Resolvable(tuple.token, identity, [tuple.val], tuple.policy); }],\n        [pipe(prop('val'), isArray), function (tuple) { return new Resolvable(tuple.token, tail(tuple.val), tuple.val.slice(0, -1), tuple.policy); }],\n        [pipe(prop('val'), isFunction), function (tuple) { return new Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy); }],\n    ]);\n    // prettier-ignore\n    var item2Resolvable = pattern([\n        [is(Resolvable), function (r) { return r; }],\n        [isResolveLiteral, literal2Resolvable],\n        [isLikeNg2Provider, literal2Resolvable],\n        [isTupleFromObj, tuple2Resolvable],\n        [val(true), function (obj) { throw new Error('Invalid resolve value: ' + stringify(obj)); },],\n    ]);\n    // If resolveBlock is already an array, use it as-is.\n    // Otherwise, assume it's an object and convert to an Array of tuples\n    var decl = state.resolve;\n    var items = isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n    return items.map(item2Resolvable);\n}\n/**\n * @internalapi A internal global service\n *\n * StateBuilder is a factory for the internal [[StateObject]] objects.\n *\n * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n * [[StateObject]] object, which has an API and is used internally.\n *\n * Custom properties or API may be added to the internal [[StateObject]] object by registering a decorator function\n * using the [[builder]] method.\n */\nvar StateBuilder = /** @class */ (function () {\n    function StateBuilder(matcher, urlMatcherFactory) {\n        this.matcher = matcher;\n        var self = this;\n        var root = function () { return matcher.find(''); };\n        var isRoot = function (state) { return state.name === ''; };\n        function parentBuilder(state) {\n            if (isRoot(state))\n                return null;\n            return matcher.find(self.parentName(state)) || root();\n        }\n        this.builders = {\n            name: [nameBuilder],\n            self: [selfBuilder],\n            parent: [parentBuilder],\n            data: [dataBuilder],\n            // Build a URLMatcher if necessary, either via a relative or absolute URL\n            url: [getUrlBuilder(urlMatcherFactory, root)],\n            // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n            navigable: [getNavigableBuilder(isRoot)],\n            params: [getParamsBuilder(urlMatcherFactory.paramFactory)],\n            // Each framework-specific ui-router implementation should define its own `views` builder\n            // e.g., src/ng1/statebuilders/views.ts\n            views: [],\n            // Keep a full path from the root down to this state as this is needed for state activation.\n            path: [pathBuilder],\n            // Speed up $state.includes() as it's used a lot\n            includes: [includesBuilder],\n            resolvables: [resolvablesBuilder],\n        };\n    }\n    /**\n     * Registers a [[BuilderFunction]] for a specific [[StateObject]] property (e.g., `parent`, `url`, or `path`).\n     * More than one BuilderFunction can be registered for a given property.\n     *\n     * The BuilderFunction(s) will be used to define the property on any subsequently built [[StateObject]] objects.\n     *\n     * @param name The name of the State property being registered for.\n     * @param fn The BuilderFunction which will be used to build the State property\n     * @returns a function which deregisters the BuilderFunction\n     */\n    StateBuilder.prototype.builder = function (name, fn) {\n        var builders = this.builders;\n        var array = builders[name] || [];\n        // Backwards compat: if only one builder exists, return it, else return whole arary.\n        if (isString(name) && !isDefined(fn))\n            return array.length > 1 ? array : array[0];\n        if (!isString(name) || !isFunction(fn))\n            return;\n        builders[name] = array;\n        builders[name].push(fn);\n        return function () { return builders[name].splice(builders[name].indexOf(fn, 1)) && null; };\n    };\n    /**\n     * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n     * properties and API built.\n     *\n     * @param state an uninitialized State object\n     * @returns the built State object\n     */\n    StateBuilder.prototype.build = function (state) {\n        var _a = this, matcher = _a.matcher, builders = _a.builders;\n        var parent = this.parentName(state);\n        if (parent && !matcher.find(parent, undefined, false)) {\n            return null;\n        }\n        for (var key in builders) {\n            if (!builders.hasOwnProperty(key))\n                continue;\n            var chain = builders[key].reduce(function (parentFn, step) { return function (_state) { return step(_state, parentFn); }; }, noop);\n            state[key] = chain(state);\n        }\n        return state;\n    };\n    StateBuilder.prototype.parentName = function (state) {\n        // name = 'foo.bar.baz.**'\n        var name = state.name || '';\n        // segments = ['foo', 'bar', 'baz', '.**']\n        var segments = name.split('.');\n        // segments = ['foo', 'bar', 'baz']\n        var lastSegment = segments.pop();\n        // segments = ['foo', 'bar'] (ignore .** segment for future states)\n        if (lastSegment === '**')\n            segments.pop();\n        if (segments.length) {\n            if (state.parent) {\n                throw new Error(\"States that specify the 'parent:' property should not have a '.' in their name (\" + name + \")\");\n            }\n            // 'foo.bar'\n            return segments.join('.');\n        }\n        if (!state.parent)\n            return '';\n        return isString(state.parent) ? state.parent : state.parent.name;\n    };\n    StateBuilder.prototype.name = function (state) {\n        var name = state.name;\n        if (name.indexOf('.') !== -1 || !state.parent)\n            return name;\n        var parentName = isString(state.parent) ? state.parent : state.parent.name;\n        return parentName ? parentName + '.' + name : name;\n    };\n    return StateBuilder;\n}());\nexport { StateBuilder };\n//# sourceMappingURL=stateBuilder.js.map","var TransitionHookPhase;\n(function (TransitionHookPhase) {\n    TransitionHookPhase[TransitionHookPhase[\"CREATE\"] = 0] = \"CREATE\";\n    TransitionHookPhase[TransitionHookPhase[\"BEFORE\"] = 1] = \"BEFORE\";\n    TransitionHookPhase[TransitionHookPhase[\"RUN\"] = 2] = \"RUN\";\n    TransitionHookPhase[TransitionHookPhase[\"SUCCESS\"] = 3] = \"SUCCESS\";\n    TransitionHookPhase[TransitionHookPhase[\"ERROR\"] = 4] = \"ERROR\";\n})(TransitionHookPhase || (TransitionHookPhase = {}));\nvar TransitionHookScope;\n(function (TransitionHookScope) {\n    TransitionHookScope[TransitionHookScope[\"TRANSITION\"] = 0] = \"TRANSITION\";\n    TransitionHookScope[TransitionHookScope[\"STATE\"] = 1] = \"STATE\";\n})(TransitionHookScope || (TransitionHookScope = {}));\nexport { TransitionHookPhase, TransitionHookScope };\n//# sourceMappingURL=interface.js.map","import { defaults, values, find, inherit } from '../common/common';\nimport { propEq } from '../common/hof';\nimport { Glob } from '../common/glob';\nimport { isObject, isFunction } from '../common/predicates';\n/**\n * Internal representation of a UI-Router state.\n *\n * Instances of this class are created when a [[StateDeclaration]] is registered with the [[StateRegistry]].\n *\n * A registered [[StateDeclaration]] is augmented with a getter ([[StateDeclaration.$$state]]) which returns the corresponding [[StateObject]] object.\n *\n * This class prototypally inherits from the corresponding [[StateDeclaration]].\n * Each of its own properties (i.e., `hasOwnProperty`) are built using builders from the [[StateBuilder]].\n */\nvar StateObject = /** @class */ (function () {\n    /** @deprecated use State.create() */\n    function StateObject(config) {\n        return StateObject.create(config || {});\n    }\n    /**\n     * Create a state object to put the private/internal implementation details onto.\n     * The object's prototype chain looks like:\n     * (Internal State Object) -> (Copy of State.prototype) -> (State Declaration object) -> (State Declaration's prototype...)\n     *\n     * @param stateDecl the user-supplied State Declaration\n     * @returns {StateObject} an internal State object\n     */\n    StateObject.create = function (stateDecl) {\n        stateDecl = StateObject.isStateClass(stateDecl) ? new stateDecl() : stateDecl;\n        var state = inherit(inherit(stateDecl, StateObject.prototype));\n        stateDecl.$$state = function () { return state; };\n        state.self = stateDecl;\n        state.__stateObjectCache = {\n            nameGlob: Glob.fromString(state.name),\n        };\n        return state;\n    };\n    /**\n     * Returns true if the provided parameter is the same state.\n     *\n     * Compares the identity of the state against the passed value, which is either an object\n     * reference to the actual `State` instance, the original definition object passed to\n     * `$stateProvider.state()`, or the fully-qualified name.\n     *\n     * @param ref Can be one of (a) a `State` instance, (b) an object that was passed\n     *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n     * @returns Returns `true` if `ref` matches the current `State` instance.\n     */\n    StateObject.prototype.is = function (ref) {\n        return this === ref || this.self === ref || this.fqn() === ref;\n    };\n    /**\n     * @deprecated this does not properly handle dot notation\n     * @returns Returns a dot-separated name of the state.\n     */\n    StateObject.prototype.fqn = function () {\n        if (!this.parent || !(this.parent instanceof this.constructor))\n            return this.name;\n        var name = this.parent.fqn();\n        return name ? name + '.' + this.name : this.name;\n    };\n    /**\n     * Returns the root node of this state's tree.\n     *\n     * @returns The root of this state's tree.\n     */\n    StateObject.prototype.root = function () {\n        return (this.parent && this.parent.root()) || this;\n    };\n    /**\n     * Gets the state's `Param` objects\n     *\n     * Gets the list of [[Param]] objects owned by the state.\n     * If `opts.inherit` is true, it also includes the ancestor states' [[Param]] objects.\n     * If `opts.matchingKeys` exists, returns only `Param`s whose `id` is a key on the `matchingKeys` object\n     *\n     * @param opts options\n     */\n    StateObject.prototype.parameters = function (opts) {\n        opts = defaults(opts, { inherit: true, matchingKeys: null });\n        var inherited = (opts.inherit && this.parent && this.parent.parameters()) || [];\n        return inherited\n            .concat(values(this.params))\n            .filter(function (param) { return !opts.matchingKeys || opts.matchingKeys.hasOwnProperty(param.id); });\n    };\n    /**\n     * Returns a single [[Param]] that is owned by the state\n     *\n     * If `opts.inherit` is true, it also searches the ancestor states` [[Param]]s.\n     * @param id the name of the [[Param]] to return\n     * @param opts options\n     */\n    StateObject.prototype.parameter = function (id, opts) {\n        if (opts === void 0) { opts = {}; }\n        return ((this.url && this.url.parameter(id, opts)) ||\n            find(values(this.params), propEq('id', id)) ||\n            (opts.inherit && this.parent && this.parent.parameter(id)));\n    };\n    StateObject.prototype.toString = function () {\n        return this.fqn();\n    };\n    /** Predicate which returns true if the object is an class with @State() decorator */\n    StateObject.isStateClass = function (stateDecl) {\n        return isFunction(stateDecl) && stateDecl['__uiRouterState'] === true;\n    };\n    /** Predicate which returns true if the object is an internal [[StateObject]] object */\n    StateObject.isState = function (obj) { return isObject(obj['__stateObjectCache']); };\n    return StateObject;\n}());\nexport { StateObject };\n//# sourceMappingURL=stateObject.js.map","/** @publicapi @module state */ /** */\nimport { isString } from '../common/predicates';\nimport { values } from '../common/common';\nvar StateMatcher = /** @class */ (function () {\n    function StateMatcher(_states) {\n        this._states = _states;\n    }\n    StateMatcher.prototype.isRelative = function (stateName) {\n        stateName = stateName || '';\n        return stateName.indexOf('.') === 0 || stateName.indexOf('^') === 0;\n    };\n    StateMatcher.prototype.find = function (stateOrName, base, matchGlob) {\n        if (matchGlob === void 0) { matchGlob = true; }\n        if (!stateOrName && stateOrName !== '')\n            return undefined;\n        var isStr = isString(stateOrName);\n        var name = isStr ? stateOrName : stateOrName.name;\n        if (this.isRelative(name))\n            name = this.resolvePath(name, base);\n        var state = this._states[name];\n        if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n            return state;\n        }\n        else if (isStr && matchGlob) {\n            var _states = values(this._states);\n            var matches = _states.filter(function (_state) { return _state.__stateObjectCache.nameGlob && _state.__stateObjectCache.nameGlob.matches(name); });\n            if (matches.length > 1) {\n                // tslint:disable-next-line:no-console\n                console.log(\"stateMatcher.find: Found multiple matches for \" + name + \" using glob: \", matches.map(function (match) { return match.name; }));\n            }\n            return matches[0];\n        }\n        return undefined;\n    };\n    StateMatcher.prototype.resolvePath = function (name, base) {\n        if (!base)\n            throw new Error(\"No reference point given for path '\" + name + \"'\");\n        var baseState = this.find(base);\n        var splitName = name.split('.');\n        var pathLength = splitName.length;\n        var i = 0, current = baseState;\n        for (; i < pathLength; i++) {\n            if (splitName[i] === '' && i === 0) {\n                current = baseState;\n                continue;\n            }\n            if (splitName[i] === '^') {\n                if (!current.parent)\n                    throw new Error(\"Path '\" + name + \"' not valid for state '\" + baseState.name + \"'\");\n                current = current.parent;\n                continue;\n            }\n            break;\n        }\n        var relName = splitName.slice(i).join('.');\n        return current.name + (current.name && relName ? '.' : '') + relName;\n    };\n    return StateMatcher;\n}());\nexport { StateMatcher };\n//# sourceMappingURL=stateMatcher.js.map","/** @publicapi @module state */ /** */\nimport { inArray, isString, prop } from '../common';\nimport { StateObject } from './stateObject';\n/** @internalapi */\nvar StateQueueManager = /** @class */ (function () {\n    function StateQueueManager(router, states, builder, listeners) {\n        this.router = router;\n        this.states = states;\n        this.builder = builder;\n        this.listeners = listeners;\n        this.queue = [];\n    }\n    /** @internalapi */\n    StateQueueManager.prototype.dispose = function () {\n        this.queue = [];\n    };\n    StateQueueManager.prototype.register = function (stateDecl) {\n        var queue = this.queue;\n        var state = StateObject.create(stateDecl);\n        var name = state.name;\n        if (!isString(name))\n            throw new Error('State must have a valid name');\n        if (this.states.hasOwnProperty(name) || inArray(queue.map(prop('name')), name))\n            throw new Error(\"State '\" + name + \"' is already defined\");\n        queue.push(state);\n        this.flush();\n        return state;\n    };\n    StateQueueManager.prototype.flush = function () {\n        var _this = this;\n        var _a = this, queue = _a.queue, states = _a.states, builder = _a.builder;\n        var registered = [], // states that got registered\n        orphans = [], // states that don't yet have a parent registered\n        previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n        var getState = function (name) { return _this.states.hasOwnProperty(name) && _this.states[name]; };\n        var notifyListeners = function () {\n            if (registered.length) {\n                _this.listeners.forEach(function (listener) { return listener('registered', registered.map(function (s) { return s.self; })); });\n            }\n        };\n        while (queue.length > 0) {\n            var state = queue.shift();\n            var name_1 = state.name;\n            var result = builder.build(state);\n            var orphanIdx = orphans.indexOf(state);\n            if (result) {\n                var existingState = getState(name_1);\n                if (existingState && existingState.name === name_1) {\n                    throw new Error(\"State '\" + name_1 + \"' is already defined\");\n                }\n                var existingFutureState = getState(name_1 + '.**');\n                if (existingFutureState) {\n                    // Remove future state of the same name\n                    this.router.stateRegistry.deregister(existingFutureState);\n                }\n                states[name_1] = state;\n                this.attachRoute(state);\n                if (orphanIdx >= 0)\n                    orphans.splice(orphanIdx, 1);\n                registered.push(state);\n                continue;\n            }\n            var prev = previousQueueLength[name_1];\n            previousQueueLength[name_1] = queue.length;\n            if (orphanIdx >= 0 && prev === queue.length) {\n                // Wait until two consecutive iterations where no additional states were dequeued successfully.\n                // throw new Error(`Cannot register orphaned state '${name}'`);\n                queue.push(state);\n                notifyListeners();\n                return states;\n            }\n            else if (orphanIdx < 0) {\n                orphans.push(state);\n            }\n            queue.push(state);\n        }\n        notifyListeners();\n        return states;\n    };\n    StateQueueManager.prototype.attachRoute = function (state) {\n        if (state.abstract || !state.url)\n            return;\n        var rulesApi = this.router.urlService.rules;\n        rulesApi.rule(rulesApi.urlRuleFactory.create(state));\n    };\n    return StateQueueManager;\n}());\nexport { StateQueueManager };\n//# sourceMappingURL=stateQueueManager.js.map","/** @publicapi @module state */ /** */\nimport { StateMatcher } from './stateMatcher';\nimport { StateBuilder } from './stateBuilder';\nimport { StateQueueManager } from './stateQueueManager';\nimport { removeFrom } from '../common/common';\nimport { propEq } from '../common/hof';\nvar StateRegistry = /** @class */ (function () {\n    /** @internalapi */\n    function StateRegistry(router) {\n        this.router = router;\n        this.states = {};\n        this.listeners = [];\n        this.matcher = new StateMatcher(this.states);\n        this.builder = new StateBuilder(this.matcher, router.urlMatcherFactory);\n        this.stateQueue = new StateQueueManager(router, this.states, this.builder, this.listeners);\n        this._registerRoot();\n    }\n    /** @internalapi */\n    StateRegistry.prototype._registerRoot = function () {\n        var rootStateDef = {\n            name: '',\n            url: '^',\n            views: null,\n            params: {\n                '#': { value: null, type: 'hash', dynamic: true },\n            },\n            abstract: true,\n        };\n        var _root = (this._root = this.stateQueue.register(rootStateDef));\n        _root.navigable = null;\n    };\n    /** @internalapi */\n    StateRegistry.prototype.dispose = function () {\n        var _this = this;\n        this.stateQueue.dispose();\n        this.listeners = [];\n        this.get().forEach(function (state) { return _this.get(state) && _this.deregister(state); });\n    };\n    /**\n     * Listen for a State Registry events\n     *\n     * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n     *\n     * #### Example:\n     * ```js\n     * let allStates = registry.get();\n     *\n     * // Later, invoke deregisterFn() to remove the listener\n     * let deregisterFn = registry.onStatesChanged((event, states) => {\n     *   switch(event) {\n     *     case: 'registered':\n     *       states.forEach(state => allStates.push(state));\n     *       break;\n     *     case: 'deregistered':\n     *       states.forEach(state => {\n     *         let idx = allStates.indexOf(state);\n     *         if (idx !== -1) allStates.splice(idx, 1);\n     *       });\n     *       break;\n     *   }\n     * });\n     * ```\n     *\n     * @param listener a callback function invoked when the registered states changes.\n     *        The function receives two parameters, `event` and `state`.\n     *        See [[StateRegistryListener]]\n     * @return a function that deregisters the listener\n     */\n    StateRegistry.prototype.onStatesChanged = function (listener) {\n        this.listeners.push(listener);\n        return function deregisterListener() {\n            removeFrom(this.listeners)(listener);\n        }.bind(this);\n    };\n    /**\n     * Gets the implicit root state\n     *\n     * Gets the root of the state tree.\n     * The root state is implicitly created by UI-Router.\n     * Note: this returns the internal [[StateObject]] representation, not a [[StateDeclaration]]\n     *\n     * @return the root [[StateObject]]\n     */\n    StateRegistry.prototype.root = function () {\n        return this._root;\n    };\n    /**\n     * Adds a state to the registry\n     *\n     * Registers a [[StateDeclaration]] or queues it for registration.\n     *\n     * Note: a state will be queued if the state's parent isn't yet registered.\n     *\n     * @param stateDefinition the definition of the state to register.\n     * @returns the internal [[StateObject]] object.\n     *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n     *          If the state was only queued, then the object is not fully built.\n     */\n    StateRegistry.prototype.register = function (stateDefinition) {\n        return this.stateQueue.register(stateDefinition);\n    };\n    /** @hidden */\n    StateRegistry.prototype._deregisterTree = function (state) {\n        var _this = this;\n        var all = this.get().map(function (s) { return s.$$state(); });\n        var getChildren = function (states) {\n            var _children = all.filter(function (s) { return states.indexOf(s.parent) !== -1; });\n            return _children.length === 0 ? _children : _children.concat(getChildren(_children));\n        };\n        var children = getChildren([state]);\n        var deregistered = [state].concat(children).reverse();\n        deregistered.forEach(function (_state) {\n            var rulesApi = _this.router.urlService.rules;\n            // Remove URL rule\n            rulesApi\n                .rules()\n                .filter(propEq('state', _state))\n                .forEach(function (rule) { return rulesApi.removeRule(rule); });\n            // Remove state from registry\n            delete _this.states[_state.name];\n        });\n        return deregistered;\n    };\n    /**\n     * Removes a state from the registry\n     *\n     * This removes a state from the registry.\n     * If the state has children, they are are also removed from the registry.\n     *\n     * @param stateOrName the state's name or object representation\n     * @returns {StateObject[]} a list of removed states\n     */\n    StateRegistry.prototype.deregister = function (stateOrName) {\n        var _state = this.get(stateOrName);\n        if (!_state)\n            throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n        var deregisteredStates = this._deregisterTree(_state.$$state());\n        this.listeners.forEach(function (listener) { return listener('deregistered', deregisteredStates.map(function (s) { return s.self; })); });\n        return deregisteredStates;\n    };\n    StateRegistry.prototype.get = function (stateOrName, base) {\n        var _this = this;\n        if (arguments.length === 0)\n            return Object.keys(this.states).map(function (name) { return _this.states[name].self; });\n        var found = this.matcher.find(stateOrName, base);\n        return (found && found.self) || null;\n    };\n    StateRegistry.prototype.decorator = function (name, func) {\n        return this.builder.builder(name, func);\n    };\n    return StateRegistry;\n}());\nexport { StateRegistry };\n//# sourceMappingURL=stateRegistry.js.map","/** @publicapi @module transition */ /** */\nimport { TransitionHookPhase } from './interface';\nimport { defaults, noop, silentRejection } from '../common/common';\nimport { fnToString, maxLength } from '../common/strings';\nimport { isPromise } from '../common/predicates';\nimport { is, parse } from '../common/hof';\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { Rejection } from './rejectFactory';\nimport { TargetState } from '../state/targetState';\nvar defaultOptions = {\n    current: noop,\n    transition: null,\n    traceData: {},\n    bind: null,\n};\n/** @hidden */\nvar TransitionHook = /** @class */ (function () {\n    function TransitionHook(transition, stateContext, registeredHook, options) {\n        var _this = this;\n        this.transition = transition;\n        this.stateContext = stateContext;\n        this.registeredHook = registeredHook;\n        this.options = options;\n        this.isSuperseded = function () { return _this.type.hookPhase === TransitionHookPhase.RUN && !_this.options.transition.isActive(); };\n        this.options = defaults(options, defaultOptions);\n        this.type = registeredHook.eventType;\n    }\n    /**\n     * Chains together an array of TransitionHooks.\n     *\n     * Given a list of [[TransitionHook]] objects, chains them together.\n     * Each hook is invoked after the previous one completes.\n     *\n     * #### Example:\n     * ```js\n     * var hooks: TransitionHook[] = getHooks();\n     * let promise: Promise<any> = TransitionHook.chain(hooks);\n     *\n     * promise.then(handleSuccess, handleError);\n     * ```\n     *\n     * @param hooks the list of hooks to chain together\n     * @param waitFor if provided, the chain is `.then()`'ed off this promise\n     * @returns a `Promise` for sequentially invoking the hooks (in order)\n     */\n    TransitionHook.chain = function (hooks, waitFor) {\n        // Chain the next hook off the previous\n        var createHookChainR = function (prev, nextHook) { return prev.then(function () { return nextHook.invokeHook(); }); };\n        return hooks.reduce(createHookChainR, waitFor || services.$q.when());\n    };\n    /**\n     * Invokes all the provided TransitionHooks, in order.\n     * Each hook's return value is checked.\n     * If any hook returns a promise, then the rest of the hooks are chained off that promise, and the promise is returned.\n     * If no hook returns a promise, then all hooks are processed synchronously.\n     *\n     * @param hooks the list of TransitionHooks to invoke\n     * @param doneCallback a callback that is invoked after all the hooks have successfully completed\n     *\n     * @returns a promise for the async result, or the result of the callback\n     */\n    TransitionHook.invokeHooks = function (hooks, doneCallback) {\n        for (var idx = 0; idx < hooks.length; idx++) {\n            var hookResult = hooks[idx].invokeHook();\n            if (isPromise(hookResult)) {\n                var remainingHooks = hooks.slice(idx + 1);\n                return TransitionHook.chain(remainingHooks, hookResult).then(doneCallback);\n            }\n        }\n        return doneCallback();\n    };\n    /**\n     * Run all TransitionHooks, ignoring their return value.\n     */\n    TransitionHook.runAllHooks = function (hooks) {\n        hooks.forEach(function (hook) { return hook.invokeHook(); });\n    };\n    TransitionHook.prototype.logError = function (err) {\n        this.transition.router.stateService.defaultErrorHandler()(err);\n    };\n    TransitionHook.prototype.invokeHook = function () {\n        var _this = this;\n        var hook = this.registeredHook;\n        if (hook._deregistered)\n            return;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        var options = this.options;\n        trace.traceHookInvocation(this, this.transition, options);\n        var invokeCallback = function () { return hook.callback.call(options.bind, _this.transition, _this.stateContext); };\n        var normalizeErr = function (err) { return Rejection.normalize(err).toPromise(); };\n        var handleError = function (err) { return hook.eventType.getErrorHandler(_this)(err); };\n        var handleResult = function (result) { return hook.eventType.getResultHandler(_this)(result); };\n        try {\n            var result = invokeCallback();\n            if (!this.type.synchronous && isPromise(result)) {\n                return result.catch(normalizeErr).then(handleResult, handleError);\n            }\n            else {\n                return handleResult(result);\n            }\n        }\n        catch (err) {\n            // If callback throws (synchronously)\n            return handleError(Rejection.normalize(err));\n        }\n        finally {\n            if (hook.invokeLimit && ++hook.invokeCount >= hook.invokeLimit) {\n                hook.deregister();\n            }\n        }\n    };\n    /**\n     * This method handles the return value of a Transition Hook.\n     *\n     * A hook can return false (cancel), a TargetState (redirect),\n     * or a promise (which may later resolve to false or a redirect)\n     *\n     * This also handles \"transition superseded\" -- when a new transition\n     * was started while the hook was still running\n     */\n    TransitionHook.prototype.handleHookResult = function (result) {\n        var _this = this;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        // Hook returned a promise\n        if (isPromise(result)) {\n            // Wait for the promise, then reprocess with the resulting value\n            return result.then(function (val) { return _this.handleHookResult(val); });\n        }\n        trace.traceHookResult(result, this.transition, this.options);\n        // Hook returned false\n        if (result === false) {\n            // Abort this Transition\n            return Rejection.aborted('Hook aborted transition').toPromise();\n        }\n        var isTargetState = is(TargetState);\n        // hook returned a TargetState\n        if (isTargetState(result)) {\n            // Halt the current Transition and redirect (a new Transition) to the TargetState.\n            return Rejection.redirected(result).toPromise();\n        }\n    };\n    /**\n     * Return a Rejection promise if the transition is no longer current due\n     * to a stopped router (disposed), or a new transition has started and superseded this one.\n     */\n    TransitionHook.prototype.getNotCurrentRejection = function () {\n        var router = this.transition.router;\n        // The router is stopped\n        if (router._disposed) {\n            return Rejection.aborted(\"UIRouter instance #\" + router.$id + \" has been stopped (disposed)\").toPromise();\n        }\n        if (this.transition._aborted) {\n            return Rejection.aborted().toPromise();\n        }\n        // This transition is no longer current.\n        // Another transition started while this hook was still running.\n        if (this.isSuperseded()) {\n            // Abort this transition\n            return Rejection.superseded(this.options.current()).toPromise();\n        }\n    };\n    TransitionHook.prototype.toString = function () {\n        var _a = this, options = _a.options, registeredHook = _a.registeredHook;\n        var event = parse('traceData.hookType')(options) || 'internal', context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown', name = fnToString(registeredHook.callback);\n        return event + \" context: \" + context + \", \" + maxLength(200, name);\n    };\n    /**\n     * These GetResultHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetResultHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.HANDLE_RESULT = function (hook) { return function (result) {\n        return hook.handleHookResult(result);\n    }; };\n    /**\n     * If the result is a promise rejection, log it.\n     * Otherwise, ignore the result.\n     */\n    TransitionHook.LOG_REJECTED_RESULT = function (hook) { return function (result) {\n        isPromise(result) && result.catch(function (err) { return hook.logError(Rejection.normalize(err)); });\n        return undefined;\n    }; };\n    /**\n     * These GetErrorHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetErrorHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.LOG_ERROR = function (hook) { return function (error) { return hook.logError(error); }; };\n    TransitionHook.REJECT_ERROR = function (hook) { return function (error) { return silentRejection(error); }; };\n    TransitionHook.THROW_ERROR = function (hook) { return function (error) {\n        throw error;\n    }; };\n    return TransitionHook;\n}());\nexport { TransitionHook };\n//# sourceMappingURL=transitionHook.js.map","/** @publicapi @module transition */ /** */\nimport { isString, isFunction, Glob, extend, removeFrom, tail, values, identity, mapObj } from '../common';\nimport { // has or is using\nTransitionHookScope, } from './interface';\n/**\n * Determines if the given state matches the matchCriteria\n *\n * @hidden\n *\n * @param state a State Object to test against\n * @param criterion\n * - If a string, matchState uses the string as a glob-matcher against the state name\n * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n *   and returns a positive match if any of the globs match.\n * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n * @returns {boolean}\n */\nexport function matchState(state, criterion, transition) {\n    var toMatch = isString(criterion) ? [criterion] : criterion;\n    function matchGlobs(_state) {\n        var globStrings = toMatch;\n        for (var i = 0; i < globStrings.length; i++) {\n            var glob = new Glob(globStrings[i]);\n            if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    var matchFn = (isFunction(toMatch) ? toMatch : matchGlobs);\n    return !!matchFn(state, transition);\n}\n/**\n * @internalapi\n * The registration data for a registered transition hook\n */\nvar RegisteredHook = /** @class */ (function () {\n    function RegisteredHook(tranSvc, eventType, callback, matchCriteria, removeHookFromRegistry, options) {\n        if (options === void 0) { options = {}; }\n        this.tranSvc = tranSvc;\n        this.eventType = eventType;\n        this.callback = callback;\n        this.matchCriteria = matchCriteria;\n        this.removeHookFromRegistry = removeHookFromRegistry;\n        this.invokeCount = 0;\n        this._deregistered = false;\n        this.priority = options.priority || 0;\n        this.bind = options.bind || null;\n        this.invokeLimit = options.invokeLimit;\n    }\n    /**\n     * Gets the matching [[PathNode]]s\n     *\n     * Given an array of [[PathNode]]s, and a [[HookMatchCriterion]], returns an array containing\n     * the [[PathNode]]s that the criteria matches, or `null` if there were no matching nodes.\n     *\n     * Returning `null` is significant to distinguish between the default\n     * \"match-all criterion value\" of `true` compared to a `() => true` function,\n     * when the nodes is an empty array.\n     *\n     * This is useful to allow a transition match criteria of `entering: true`\n     * to still match a transition, even when `entering === []`.  Contrast that\n     * with `entering: (state) => true` which only matches when a state is actually\n     * being entered.\n     */\n    RegisteredHook.prototype._matchingNodes = function (nodes, criterion, transition) {\n        if (criterion === true)\n            return nodes;\n        var matching = nodes.filter(function (node) { return matchState(node.state, criterion, transition); });\n        return matching.length ? matching : null;\n    };\n    /**\n     * Gets the default match criteria (all `true`)\n     *\n     * Returns an object which has all the criteria match paths as keys and `true` as values, i.e.:\n     *\n     * ```js\n     * {\n     *   to: true,\n     *   from: true,\n     *   entering: true,\n     *   exiting: true,\n     *   retained: true,\n     * }\n     */\n    RegisteredHook.prototype._getDefaultMatchCriteria = function () {\n        return mapObj(this.tranSvc._pluginapi._getPathTypes(), function () { return true; });\n    };\n    /**\n     * Gets matching nodes as [[IMatchingNodes]]\n     *\n     * Create a IMatchingNodes object from the TransitionHookTypes that is roughly equivalent to:\n     *\n     * ```js\n     * let matches: IMatchingNodes = {\n     *   to:       _matchingNodes([tail(treeChanges.to)],   mc.to),\n     *   from:     _matchingNodes([tail(treeChanges.from)], mc.from),\n     *   exiting:  _matchingNodes(treeChanges.exiting,      mc.exiting),\n     *   retained: _matchingNodes(treeChanges.retained,     mc.retained),\n     *   entering: _matchingNodes(treeChanges.entering,     mc.entering),\n     * };\n     * ```\n     */\n    RegisteredHook.prototype._getMatchingNodes = function (treeChanges, transition) {\n        var _this = this;\n        var criteria = extend(this._getDefaultMatchCriteria(), this.matchCriteria);\n        var paths = values(this.tranSvc._pluginapi._getPathTypes());\n        return paths.reduce(function (mn, pathtype) {\n            // STATE scope criteria matches against every node in the path.\n            // TRANSITION scope criteria matches against only the last node in the path\n            var isStateHook = pathtype.scope === TransitionHookScope.STATE;\n            var path = treeChanges[pathtype.name] || [];\n            var nodes = isStateHook ? path : [tail(path)];\n            mn[pathtype.name] = _this._matchingNodes(nodes, criteria[pathtype.name], transition);\n            return mn;\n        }, {});\n    };\n    /**\n     * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n     *\n     * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n     * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n     */\n    RegisteredHook.prototype.matches = function (treeChanges, transition) {\n        var matches = this._getMatchingNodes(treeChanges, transition);\n        // Check if all the criteria matched the TreeChanges object\n        var allMatched = values(matches).every(identity);\n        return allMatched ? matches : null;\n    };\n    RegisteredHook.prototype.deregister = function () {\n        this.removeHookFromRegistry(this);\n        this._deregistered = true;\n    };\n    return RegisteredHook;\n}());\nexport { RegisteredHook };\n/** @hidden Return a registration function of the requested type. */\nexport function makeEvent(registry, transitionService, eventType) {\n    // Create the object which holds the registered transition hooks.\n    var _registeredHooks = (registry._registeredHooks = registry._registeredHooks || {});\n    var hooks = (_registeredHooks[eventType.name] = []);\n    var removeHookFn = removeFrom(hooks);\n    // Create hook registration function on the IHookRegistry for the event\n    registry[eventType.name] = hookRegistrationFn;\n    function hookRegistrationFn(matchObject, callback, options) {\n        if (options === void 0) { options = {}; }\n        var registeredHook = new RegisteredHook(transitionService, eventType, callback, matchObject, removeHookFn, options);\n        hooks.push(registeredHook);\n        return registeredHook.deregister.bind(registeredHook);\n    }\n    return hookRegistrationFn;\n}\n//# sourceMappingURL=hookRegistry.js.map","/** @publicapi @module transition */ /** */\nimport { extend, assertPredicate, unnestR, identity } from '../common/common';\nimport { isArray } from '../common/predicates';\nimport { TransitionHookPhase, TransitionHookScope, } from './interface';\nimport { TransitionHook } from './transitionHook';\n/**\n * This class returns applicable TransitionHooks for a specific Transition instance.\n *\n * Hooks ([[RegisteredHook]]) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n * myTransition.onEnter(...).  The HookBuilder finds matching RegisteredHooks (where the match criteria is\n * determined by the type of hook)\n *\n * The HookBuilder also converts RegisteredHooks objects to TransitionHook objects, which are used to run a Transition.\n *\n * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n * in the Transition class, so we must also provide the Transition's _treeChanges)\n *\n */\nvar HookBuilder = /** @class */ (function () {\n    function HookBuilder(transition) {\n        this.transition = transition;\n    }\n    HookBuilder.prototype.buildHooksForPhase = function (phase) {\n        var _this = this;\n        var $transitions = this.transition.router.transitionService;\n        return $transitions._pluginapi\n            ._getEvents(phase)\n            .map(function (type) { return _this.buildHooks(type); })\n            .reduce(unnestR, [])\n            .filter(identity);\n    };\n    /**\n     * Returns an array of newly built TransitionHook objects.\n     *\n     * - Finds all RegisteredHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n     * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n     * - For each of the [[PathNode]]s, creates a TransitionHook\n     *\n     * @param hookType the type of the hook registration function, e.g., 'onEnter', 'onFinish'.\n     */\n    HookBuilder.prototype.buildHooks = function (hookType) {\n        var transition = this.transition;\n        var treeChanges = transition.treeChanges();\n        // Find all the matching registered hooks for a given hook type\n        var matchingHooks = this.getMatchingHooks(hookType, treeChanges, transition);\n        if (!matchingHooks)\n            return [];\n        var baseHookOptions = {\n            transition: transition,\n            current: transition.options().current,\n        };\n        var makeTransitionHooks = function (hook) {\n            // Fetch the Nodes that caused this hook to match.\n            var matches = hook.matches(treeChanges, transition);\n            // Select the PathNode[] that will be used as TransitionHook context objects\n            var matchingNodes = matches[hookType.criteriaMatchPath.name];\n            // Return an array of HookTuples\n            return matchingNodes.map(function (node) {\n                var _options = extend({\n                    bind: hook.bind,\n                    traceData: { hookType: hookType.name, context: node },\n                }, baseHookOptions);\n                var state = hookType.criteriaMatchPath.scope === TransitionHookScope.STATE ? node.state.self : null;\n                var transitionHook = new TransitionHook(transition, state, hook, _options);\n                return { hook: hook, node: node, transitionHook: transitionHook };\n            });\n        };\n        return matchingHooks\n            .map(makeTransitionHooks)\n            .reduce(unnestR, [])\n            .sort(tupleSort(hookType.reverseSort))\n            .map(function (tuple) { return tuple.transitionHook; });\n    };\n    /**\n     * Finds all RegisteredHooks from:\n     * - The Transition object instance hook registry\n     * - The TransitionService ($transitions) global hook registry\n     *\n     * which matched:\n     * - the eventType\n     * - the matchCriteria (to, from, exiting, retained, entering)\n     *\n     * @returns an array of matched [[RegisteredHook]]s\n     */\n    HookBuilder.prototype.getMatchingHooks = function (hookType, treeChanges, transition) {\n        var isCreate = hookType.hookPhase === TransitionHookPhase.CREATE;\n        // Instance and Global hook registries\n        var $transitions = this.transition.router.transitionService;\n        var registries = isCreate ? [$transitions] : [this.transition, $transitions];\n        return registries\n            .map(function (reg) { return reg.getHooks(hookType.name); }) // Get named hooks from registries\n            .filter(assertPredicate(isArray, \"broken event named: \" + hookType.name)) // Sanity check\n            .reduce(unnestR, []) // Un-nest RegisteredHook[][] to RegisteredHook[] array\n            .filter(function (hook) { return hook.matches(treeChanges, transition); }); // Only those satisfying matchCriteria\n    };\n    return HookBuilder;\n}());\nexport { HookBuilder };\n/**\n * A factory for a sort function for HookTuples.\n *\n * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n * the EventHook priority.\n *\n * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n * @returns a tuple sort function\n */\nfunction tupleSort(reverseDepthSort) {\n    if (reverseDepthSort === void 0) { reverseDepthSort = false; }\n    return function nodeDepthThenPriority(l, r) {\n        var factor = reverseDepthSort ? -1 : 1;\n        var depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n        return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n    };\n}\n//# sourceMappingURL=hookBuilder.js.map","/** @publicapi @module transition */ /** */\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { stringify } from '../common/strings';\nimport { map, find, extend, mergeR, tail, omit, arrayTuples, unnestR, identity, anyTrueR } from '../common/common';\nimport { isObject, isUndefined } from '../common/predicates';\nimport { prop, propEq, val, not, is } from '../common/hof';\nimport { TransitionHookPhase, } from './interface'; // has or is using\nimport { TransitionHook } from './transitionHook';\nimport { matchState, makeEvent } from './hookRegistry';\nimport { HookBuilder } from './hookBuilder';\nimport { PathUtils } from '../path/pathUtils';\nimport { Param } from '../params/param';\nimport { Resolvable } from '../resolve/resolvable';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { Rejection } from './rejectFactory';\nimport { flattenR, uniqR } from '../common';\n/** @hidden */\nvar stateSelf = prop('self');\n/**\n * Represents a transition between two states.\n *\n * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n *\n * This object contains all contextual information about the to/from states, parameters, resolves.\n * It has information about all states being entered and exited as a result of the transition.\n */\nvar Transition = /** @class */ (function () {\n    /**\n     * Creates a new Transition object.\n     *\n     * If the target state is not valid, an error is thrown.\n     *\n     * @internalapi\n     *\n     * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n     *        encapsulates the \"from state\".\n     * @param targetState The target state and parameters being transitioned to (also, the transition options)\n     * @param router The [[UIRouter]] instance\n     */\n    function Transition(fromPath, targetState, router) {\n        var _this = this;\n        /** @hidden */\n        this._deferred = services.$q.defer();\n        /**\n         * This promise is resolved or rejected based on the outcome of the Transition.\n         *\n         * When the transition is successful, the promise is resolved\n         * When the transition is unsuccessful, the promise is rejected with the [[Rejection]] or javascript error\n         */\n        this.promise = this._deferred.promise;\n        /** @hidden Holds the hook registration functions such as those passed to Transition.onStart() */\n        this._registeredHooks = {};\n        /** @hidden */\n        this._hookBuilder = new HookBuilder(this);\n        /** Checks if this transition is currently active/running. */\n        this.isActive = function () { return _this.router.globals.transition === _this; };\n        this.router = router;\n        this._targetState = targetState;\n        if (!targetState.valid()) {\n            throw new Error(targetState.error());\n        }\n        // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n        this._options = extend({ current: val(this) }, targetState.options());\n        this.$id = router.transitionService._transitionCount++;\n        var toPath = PathUtils.buildToPath(fromPath, targetState);\n        this._treeChanges = PathUtils.treeChanges(fromPath, toPath, this._options.reloadState);\n        this.createTransitionHookRegFns();\n        var onCreateHooks = this._hookBuilder.buildHooksForPhase(TransitionHookPhase.CREATE);\n        TransitionHook.invokeHooks(onCreateHooks, function () { return null; });\n        this.applyViewConfigs(router);\n    }\n    /** @hidden */\n    Transition.prototype.onBefore = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onStart = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onExit = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onRetain = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onEnter = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onFinish = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onSuccess = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onError = function (criteria, callback, options) {\n        return;\n    };\n    /** @hidden\n     * Creates the transition-level hook registration functions\n     * (which can then be used to register hooks)\n     */\n    Transition.prototype.createTransitionHookRegFns = function () {\n        var _this = this;\n        this.router.transitionService._pluginapi\n            ._getEvents()\n            .filter(function (type) { return type.hookPhase !== TransitionHookPhase.CREATE; })\n            .forEach(function (type) { return makeEvent(_this, _this.router.transitionService, type); });\n    };\n    /** @internalapi */\n    Transition.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    Transition.prototype.applyViewConfigs = function (router) {\n        var enteringStates = this._treeChanges.entering.map(function (node) { return node.state; });\n        PathUtils.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal from [State] object\n     */\n    Transition.prototype.$from = function () {\n        return tail(this._treeChanges.from).state;\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal to [State] object\n     */\n    Transition.prototype.$to = function () {\n        return tail(this._treeChanges.to).state;\n    };\n    /**\n     * Returns the \"from state\"\n     *\n     * Returns the state that the transition is coming *from*.\n     *\n     * @returns The state declaration object for the Transition's (\"from state\").\n     */\n    Transition.prototype.from = function () {\n        return this.$from().self;\n    };\n    /**\n     * Returns the \"to state\"\n     *\n     * Returns the state that the transition is going *to*.\n     *\n     * @returns The state declaration object for the Transition's target state (\"to state\").\n     */\n    Transition.prototype.to = function () {\n        return this.$to().self;\n    };\n    /**\n     * Gets the Target State\n     *\n     * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]] as a single object.\n     *\n     * @returns the [[TargetState]] of this Transition\n     */\n    Transition.prototype.targetState = function () {\n        return this._targetState;\n    };\n    /**\n     * Determines whether two transitions are equivalent.\n     * @deprecated\n     */\n    Transition.prototype.is = function (compare) {\n        if (compare instanceof Transition) {\n            // TODO: Also compare parameters\n            return this.is({ to: compare.$to().name, from: compare.$from().name });\n        }\n        return !((compare.to && !matchState(this.$to(), compare.to, this)) ||\n            (compare.from && !matchState(this.$from(), compare.from, this)));\n    };\n    Transition.prototype.params = function (pathname) {\n        if (pathname === void 0) { pathname = 'to'; }\n        return Object.freeze(this._treeChanges[pathname].map(prop('paramValues')).reduce(mergeR, {}));\n    };\n    Transition.prototype.paramsChanged = function () {\n        var fromParams = this.params('from');\n        var toParams = this.params('to');\n        // All the parameters declared on both the \"to\" and \"from\" paths\n        var allParamDescriptors = []\n            .concat(this._treeChanges.to)\n            .concat(this._treeChanges.from)\n            .map(function (pathNode) { return pathNode.paramSchema; })\n            .reduce(flattenR, [])\n            .reduce(uniqR, []);\n        var changedParamDescriptors = Param.changed(allParamDescriptors, fromParams, toParams);\n        return changedParamDescriptors.reduce(function (changedValues, descriptor) {\n            changedValues[descriptor.id] = toParams[descriptor.id];\n            return changedValues;\n        }, {});\n    };\n    /**\n     * Creates a [[UIInjector]] Dependency Injector\n     *\n     * Returns a Dependency Injector for the Transition's target state (to state).\n     * The injector provides resolve values which the target state has access to.\n     *\n     * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n     *\n     * #### Example:\n     * ```js\n     * .onEnter({ entering: 'myState' }, trans => {\n     *   var myResolveValue = trans.injector().get('myResolve');\n     *   // Inject a global service from the global/native injector (if it exists)\n     *   var MyService = trans.injector().get('MyService');\n     * })\n     * ```\n     *\n     * In some cases (such as `onBefore`), you may need access to some resolve data but it has not yet been fetched.\n     * You can use [[UIInjector.getAsync]] to get a promise for the data.\n     * #### Example:\n     * ```js\n     * .onBefore({}, trans => {\n     *   return trans.injector().getAsync('myResolve').then(myResolveValue =>\n     *     return myResolveValue !== 'ABORT';\n     *   });\n     * });\n     * ```\n     *\n     * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n     * This can be useful if both a parent state `foo` and a child state `foo.bar` have both defined a resolve such as `data`.\n     * #### Example:\n     * ```js\n     * .onEnter({ to: 'foo.bar' }, trans => {\n     *   // returns result of `foo` state's `myResolve` resolve\n     *   // even though `foo.bar` also has a `myResolve` resolve\n     *   var fooData = trans.injector('foo').get('myResolve');\n     * });\n     * ```\n     *\n     * If you need resolve data from the exiting states, pass `'from'` as `pathName`.\n     * The resolve data from the `from` path will be returned.\n     * #### Example:\n     * ```js\n     * .onExit({ exiting: 'foo.bar' }, trans => {\n     *   // Gets the resolve value of `myResolve` from the state being exited\n     *   var fooData = trans.injector(null, 'from').get('myResolve');\n     * });\n     * ```\n     *\n     *\n     * @param state Limits the resolves provided to only the resolves the provided state has access to.\n     * @param pathName Default: `'to'`: Chooses the path for which to create the injector. Use this to access resolves for `exiting` states.\n     *\n     * @returns a [[UIInjector]]\n     */\n    Transition.prototype.injector = function (state, pathName) {\n        if (pathName === void 0) { pathName = 'to'; }\n        var path = this._treeChanges[pathName];\n        if (state)\n            path = PathUtils.subPath(path, function (node) { return node.state === state || node.state.name === state; });\n        return new ResolveContext(path).injector();\n    };\n    /**\n     * Gets all available resolve tokens (keys)\n     *\n     * This method can be used in conjunction with [[injector]] to inspect the resolve values\n     * available to the Transition.\n     *\n     * This returns all the tokens defined on [[StateDeclaration.resolve]] blocks, for the states\n     * in the Transition's [[TreeChanges.to]] path.\n     *\n     * #### Example:\n     * This example logs all resolve values\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * tokens.forEach(token => console.log(token + \" = \" + trans.injector().get(token)));\n     * ```\n     *\n     * #### Example:\n     * This example creates promises for each resolve value.\n     * This triggers fetches of resolves (if any have not yet been fetched).\n     * When all promises have all settled, it logs the resolve values.\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * let promise = tokens.map(token => trans.injector().getAsync(token));\n     * Promise.all(promises).then(values => console.log(\"Resolved values: \" + values));\n     * ```\n     *\n     * Note: Angular 1 users whould use `$q.all()`\n     *\n     * @param pathname resolve context's path name (e.g., `to` or `from`)\n     *\n     * @returns an array of resolve tokens (keys)\n     */\n    Transition.prototype.getResolveTokens = function (pathname) {\n        if (pathname === void 0) { pathname = 'to'; }\n        return new ResolveContext(this._treeChanges[pathname]).getTokens();\n    };\n    /**\n     * Dynamically adds a new [[Resolvable]] (i.e., [[StateDeclaration.resolve]]) to this transition.\n     *\n     * Allows a transition hook to dynamically add a Resolvable to this Transition.\n     *\n     * Use the [[Transition.injector]] to retrieve the resolved data in subsequent hooks ([[UIInjector.get]]).\n     *\n     * If a `state` argument is provided, the Resolvable is processed when that state is being entered.\n     * If no `state` is provided then the root state is used.\n     * If the given `state` has already been entered, the Resolvable is processed when any child state is entered.\n     * If no child states will be entered, the Resolvable is processed during the `onFinish` phase of the Transition.\n     *\n     * The `state` argument also scopes the resolved data.\n     * The resolved data is available from the injector for that `state` and any children states.\n     *\n     * #### Example:\n     * ```js\n     * transitionService.onBefore({}, transition => {\n     *   transition.addResolvable({\n     *     token: 'myResolve',\n     *     deps: ['MyService'],\n     *     resolveFn: myService => myService.getData()\n     *   });\n     * });\n     * ```\n     *\n     * @param resolvable a [[ResolvableLiteral]] object (or a [[Resolvable]])\n     * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n     */\n    Transition.prototype.addResolvable = function (resolvable, state) {\n        if (state === void 0) { state = ''; }\n        resolvable = is(Resolvable)(resolvable) ? resolvable : new Resolvable(resolvable);\n        var stateName = typeof state === 'string' ? state : state.name;\n        var topath = this._treeChanges.to;\n        var targetNode = find(topath, function (node) { return node.state.name === stateName; });\n        var resolveContext = new ResolveContext(topath);\n        resolveContext.addResolvables([resolvable], targetNode.state);\n    };\n    /**\n     * Gets the transition from which this transition was redirected.\n     *\n     * If the current transition is a redirect, this method returns the transition that was redirected.\n     *\n     * #### Example:\n     * ```js\n     * let transitionA = $state.go('A').transition\n     * transitionA.onStart({}, () => $state.target('B'));\n     * $transitions.onSuccess({ to: 'B' }, (trans) => {\n     *   trans.to().name === 'B'; // true\n     *   trans.redirectedFrom() === transitionA; // true\n     * });\n     * ```\n     *\n     * @returns The previous Transition, or null if this Transition is not the result of a redirection\n     */\n    Transition.prototype.redirectedFrom = function () {\n        return this._options.redirectedFrom || null;\n    };\n    /**\n     * Gets the original transition in a redirect chain\n     *\n     * A transition might belong to a long chain of multiple redirects.\n     * This method walks the [[redirectedFrom]] chain back to the original (first) transition in the chain.\n     *\n     * #### Example:\n     * ```js\n     * // states\n     * registry.register({ name: 'A', redirectTo: 'B' });\n     * registry.register({ name: 'B', redirectTo: 'C' });\n     * registry.register({ name: 'C', redirectTo: 'D' });\n     * registry.register({ name: 'D' });\n     *\n     * let transitionA = $state.go('A').transition\n     *\n     * $transitions.onSuccess({ to: 'D' }, (trans) => {\n     *   trans.to().name === 'D'; // true\n     *   trans.redirectedFrom().to().name === 'C'; // true\n     *   trans.originalTransition() === transitionA; // true\n     *   trans.originalTransition().to().name === 'A'; // true\n     * });\n     * ```\n     *\n     * @returns The original Transition that started a redirect chain\n     */\n    Transition.prototype.originalTransition = function () {\n        var rf = this.redirectedFrom();\n        return (rf && rf.originalTransition()) || this;\n    };\n    /**\n     * Get the transition options\n     *\n     * @returns the options for this Transition.\n     */\n    Transition.prototype.options = function () {\n        return this._options;\n    };\n    /**\n     * Gets the states being entered.\n     *\n     * @returns an array of states that will be entered during this transition.\n     */\n    Transition.prototype.entering = function () {\n        return map(this._treeChanges.entering, prop('state')).map(stateSelf);\n    };\n    /**\n     * Gets the states being exited.\n     *\n     * @returns an array of states that will be exited during this transition.\n     */\n    Transition.prototype.exiting = function () {\n        return map(this._treeChanges.exiting, prop('state'))\n            .map(stateSelf)\n            .reverse();\n    };\n    /**\n     * Gets the states being retained.\n     *\n     * @returns an array of states that are already entered from a previous Transition, that will not be\n     *    exited during this Transition\n     */\n    Transition.prototype.retained = function () {\n        return map(this._treeChanges.retained, prop('state')).map(stateSelf);\n    };\n    /**\n     * Get the [[ViewConfig]]s associated with this Transition\n     *\n     * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n     * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n     *\n     * @param pathname the name of the path to fetch views for:\n     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n     * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n     *\n     * @returns a list of ViewConfig objects for the given path.\n     */\n    Transition.prototype.views = function (pathname, state) {\n        if (pathname === void 0) { pathname = 'entering'; }\n        var path = this._treeChanges[pathname];\n        path = !state ? path : path.filter(propEq('state', state));\n        return path\n            .map(prop('views'))\n            .filter(identity)\n            .reduce(unnestR, []);\n    };\n    Transition.prototype.treeChanges = function (pathname) {\n        return pathname ? this._treeChanges[pathname] : this._treeChanges;\n    };\n    /**\n     * Creates a new transition that is a redirection of the current one.\n     *\n     * This transition can be returned from a [[TransitionService]] hook to\n     * redirect a transition to a new state and/or set of parameters.\n     *\n     * @internalapi\n     *\n     * @returns Returns a new [[Transition]] instance.\n     */\n    Transition.prototype.redirect = function (targetState) {\n        var redirects = 1, trans = this;\n        // tslint:disable-next-line:no-conditional-assignment\n        while ((trans = trans.redirectedFrom()) != null) {\n            if (++redirects > 20)\n                throw new Error(\"Too many consecutive Transition redirects (20+)\");\n        }\n        var redirectOpts = { redirectedFrom: this, source: 'redirect' };\n        // If the original transition was caused by URL sync, then use { location: 'replace' }\n        // on the new transition (unless the target state explicitly specifies location: false).\n        // This causes the original url to be replaced with the url for the redirect target\n        // so the original url disappears from the browser history.\n        if (this.options().source === 'url' && targetState.options().location !== false) {\n            redirectOpts.location = 'replace';\n        }\n        var newOptions = extend({}, this.options(), targetState.options(), redirectOpts);\n        targetState = targetState.withOptions(newOptions, true);\n        var newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n        var originalEnteringNodes = this._treeChanges.entering;\n        var redirectEnteringNodes = newTransition._treeChanges.entering;\n        // --- Re-use resolve data from original transition ---\n        // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n        // (because of the redirect), the resolves fetched by the original transition are still valid in the\n        // redirected transition.\n        //\n        // This allows you to define a redirect on a parent state which depends on an async resolve value.\n        // You can wait for the resolve, then redirect to a child state based on the result.\n        // The redirected transition does not have to re-fetch the resolve.\n        // ---------------------------------------------------------\n        var nodeIsReloading = function (reloadState) { return function (node) {\n            return reloadState && node.state.includes[reloadState.name];\n        }; };\n        // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n        var matchingEnteringNodes = PathUtils.matching(redirectEnteringNodes, originalEnteringNodes, PathUtils.nonDynamicParams).filter(not(nodeIsReloading(targetState.options().reloadState)));\n        // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n        matchingEnteringNodes.forEach(function (node, idx) {\n            node.resolvables = originalEnteringNodes[idx].resolvables;\n        });\n        return newTransition;\n    };\n    /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n    Transition.prototype._changedParams = function () {\n        var tc = this._treeChanges;\n        /** Return undefined if it's not a \"dynamic\" transition, for the following reasons */\n        // If user explicitly wants a reload\n        if (this._options.reload)\n            return undefined;\n        // If any states are exiting or entering\n        if (tc.exiting.length || tc.entering.length)\n            return undefined;\n        // If to/from path lengths differ\n        if (tc.to.length !== tc.from.length)\n            return undefined;\n        // If the to/from paths are different\n        var pathsDiffer = arrayTuples(tc.to, tc.from)\n            .map(function (tuple) { return tuple[0].state !== tuple[1].state; })\n            .reduce(anyTrueR, false);\n        if (pathsDiffer)\n            return undefined;\n        // Find any parameter values that differ\n        var nodeSchemas = tc.to.map(function (node) { return node.paramSchema; });\n        var _a = [tc.to, tc.from].map(function (path) { return path.map(function (x) { return x.paramValues; }); }), toValues = _a[0], fromValues = _a[1];\n        var tuples = arrayTuples(nodeSchemas, toValues, fromValues);\n        return tuples.map(function (_a) {\n            var schema = _a[0], toVals = _a[1], fromVals = _a[2];\n            return Param.changed(schema, toVals, fromVals);\n        }).reduce(unnestR, []);\n    };\n    /**\n     * Returns true if the transition is dynamic.\n     *\n     * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n     *\n     * @returns true if the Transition is dynamic\n     */\n    Transition.prototype.dynamic = function () {\n        var changes = this._changedParams();\n        return !changes ? false : changes.map(function (x) { return x.dynamic; }).reduce(anyTrueR, false);\n    };\n    /**\n     * Returns true if the transition is ignored.\n     *\n     * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n     *\n     * @returns true if the Transition is ignored.\n     */\n    Transition.prototype.ignored = function () {\n        return !!this._ignoredReason();\n    };\n    /** @hidden */\n    Transition.prototype._ignoredReason = function () {\n        var pending = this.router.globals.transition;\n        var reloadState = this._options.reloadState;\n        var same = function (pathA, pathB) {\n            if (pathA.length !== pathB.length)\n                return false;\n            var matching = PathUtils.matching(pathA, pathB);\n            return pathA.length === matching.filter(function (node) { return !reloadState || !node.state.includes[reloadState.name]; }).length;\n        };\n        var newTC = this.treeChanges();\n        var pendTC = pending && pending.treeChanges();\n        if (pendTC && same(pendTC.to, newTC.to) && same(pendTC.exiting, newTC.exiting))\n            return 'SameAsPending';\n        if (newTC.exiting.length === 0 && newTC.entering.length === 0 && same(newTC.from, newTC.to))\n            return 'SameAsCurrent';\n    };\n    /**\n     * Runs the transition\n     *\n     * This method is generally called from the [[StateService.transitionTo]]\n     *\n     * @internalapi\n     *\n     * @returns a promise for a successful transition.\n     */\n    Transition.prototype.run = function () {\n        var _this = this;\n        var runAllHooks = TransitionHook.runAllHooks;\n        // Gets transition hooks array for the given phase\n        var getHooksFor = function (phase) { return _this._hookBuilder.buildHooksForPhase(phase); };\n        // When the chain is complete, then resolve or reject the deferred\n        var transitionSuccess = function () {\n            trace.traceSuccess(_this.$to(), _this);\n            _this.success = true;\n            _this._deferred.resolve(_this.to());\n            runAllHooks(getHooksFor(TransitionHookPhase.SUCCESS));\n        };\n        var transitionError = function (reason) {\n            trace.traceError(reason, _this);\n            _this.success = false;\n            _this._deferred.reject(reason);\n            _this._error = reason;\n            runAllHooks(getHooksFor(TransitionHookPhase.ERROR));\n        };\n        var runTransition = function () {\n            // Wait to build the RUN hook chain until the BEFORE hooks are done\n            // This allows a BEFORE hook to dynamically add additional RUN hooks via the Transition object.\n            var allRunHooks = getHooksFor(TransitionHookPhase.RUN);\n            var done = function () { return services.$q.when(undefined); };\n            return TransitionHook.invokeHooks(allRunHooks, done);\n        };\n        var startTransition = function () {\n            var globals = _this.router.globals;\n            globals.lastStartedTransitionId = _this.$id;\n            globals.transition = _this;\n            globals.transitionHistory.enqueue(_this);\n            trace.traceTransitionStart(_this);\n            return services.$q.when(undefined);\n        };\n        var allBeforeHooks = getHooksFor(TransitionHookPhase.BEFORE);\n        TransitionHook.invokeHooks(allBeforeHooks, startTransition)\n            .then(runTransition)\n            .then(transitionSuccess, transitionError);\n        return this.promise;\n    };\n    /**\n     * Checks if the Transition is valid\n     *\n     * @returns true if the Transition is valid\n     */\n    Transition.prototype.valid = function () {\n        return !this.error() || this.success !== undefined;\n    };\n    /**\n     * Aborts this transition\n     *\n     * Imperative API to abort a Transition.\n     * This only applies to Transitions that are not yet complete.\n     */\n    Transition.prototype.abort = function () {\n        // Do not set flag if the transition is already complete\n        if (isUndefined(this.success)) {\n            this._aborted = true;\n        }\n    };\n    /**\n     * The Transition error reason.\n     *\n     * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n     * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n     *\n     * @returns a transition rejection explaining why the transition is invalid, or the reason the transition failed.\n     */\n    Transition.prototype.error = function () {\n        var state = this.$to();\n        if (state.self.abstract) {\n            return Rejection.invalid(\"Cannot transition to abstract state '\" + state.name + \"'\");\n        }\n        var paramDefs = state.parameters();\n        var values = this.params();\n        var invalidParams = paramDefs.filter(function (param) { return !param.validates(values[param.id]); });\n        if (invalidParams.length) {\n            var invalidValues = invalidParams.map(function (param) { return \"[\" + param.id + \":\" + stringify(values[param.id]) + \"]\"; }).join(', ');\n            var detail = \"The following parameter values are not valid for state '\" + state.name + \"': \" + invalidValues;\n            return Rejection.invalid(detail);\n        }\n        if (this.success === false)\n            return this._error;\n    };\n    /**\n     * A string representation of the Transition\n     *\n     * @returns A string representation of the Transition\n     */\n    Transition.prototype.toString = function () {\n        var fromStateOrName = this.from();\n        var toStateOrName = this.to();\n        var avoidEmptyHash = function (params) {\n            return params['#'] !== null && params['#'] !== undefined ? params : omit(params, ['#']);\n        };\n        // (X) means the to state is invalid.\n        var id = this.$id, from = isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName, fromParams = stringify(avoidEmptyHash(this._treeChanges.from.map(prop('paramValues')).reduce(mergeR, {}))), toValid = this.valid() ? '' : '(X) ', to = isObject(toStateOrName) ? toStateOrName.name : toStateOrName, toParams = stringify(avoidEmptyHash(this.params()));\n        return \"Transition#\" + id + \"( '\" + from + \"'\" + fromParams + \" -> \" + toValid + \"'\" + to + \"'\" + toParams + \" )\";\n    };\n    /** @hidden */\n    Transition.diToken = Transition;\n    return Transition;\n}());\nexport { Transition };\n//# sourceMappingURL=transition.js.map","/** @publicapi @module url */ /** */\nimport { map, inherit, identity, unnest, tail, find, allTrueR, unnestR, arrayTuples } from '../common/common';\nimport { prop, propEq } from '../common/hof';\nimport { isArray, isString, isDefined } from '../common/predicates';\nimport { Param, DefType } from '../params/param';\nimport { joinNeighborsR, splitOnDelim } from '../common/strings';\nimport { defaults } from '../common';\n/** @hidden */\nfunction quoteRegExp(str, param) {\n    var surroundPattern = ['', ''], result = str.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, '\\\\$&');\n    if (!param)\n        return result;\n    switch (param.squash) {\n        case false:\n            surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')];\n            break;\n        case true:\n            result = result.replace(/\\/$/, '');\n            surroundPattern = ['(?:/(', ')|/)?'];\n            break;\n        default:\n            surroundPattern = [\"(\" + param.squash + \"|\", ')?'];\n            break;\n    }\n    return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n}\n/** @hidden */\nvar memoizeTo = function (obj, _prop, fn) { return (obj[_prop] = obj[_prop] || fn()); };\n/** @hidden */\nvar splitOnSlash = splitOnDelim('/');\n/** @hidden */\nvar defaultConfig = {\n    state: { params: {} },\n    strict: true,\n    caseInsensitive: true,\n};\n/**\n * Matches URLs against patterns.\n *\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL.\n *\n * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n * parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by [[UrlMatcher.exec]].\n *\n * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n * or colon placeholders (`/somePath/:param`).\n *\n * - *A parameter RegExp* may be defined for a param after a colon\n * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n * The regexp must match for the url to be matched.\n * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Note: a RegExp parameter will encode its value using either [[ParamTypes.path]] or [[ParamTypes.query]].\n *\n * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`) in curly brace parameters.\n *   See [[UrlMatcherFactory.type]] for more information.\n *\n * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).\n *   A catch-all * parameter value will contain the remainder of the URL.\n *\n * ---\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters).\n * A path parameter matches any number of characters other than '/'. For catch-all\n * placeholders the path parameter matches any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n */\nvar UrlMatcher = /** @class */ (function () {\n    /**\n     * @param pattern The pattern to compile into a matcher.\n     * @param paramTypes The [[ParamTypes]] registry\n     * @param paramFactory A [[ParamFactory]] object\n     * @param config  A [[UrlMatcherCompileConfig]] configuration object\n     */\n    function UrlMatcher(pattern, paramTypes, paramFactory, config) {\n        var _this = this;\n        /** @hidden */\n        this._cache = { path: [this] };\n        /** @hidden */\n        this._children = [];\n        /** @hidden */\n        this._params = [];\n        /** @hidden */\n        this._segments = [];\n        /** @hidden */\n        this._compiled = [];\n        this.config = config = defaults(config, defaultConfig);\n        this.pattern = pattern;\n        // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n        //   '*' name\n        //   ':' name\n        //   '{' name '}'\n        //   '{' name ':' regexp '}'\n        // The regular expression is somewhat complicated due to the need to allow curly braces\n        // inside the regular expression. The placeholder regexp breaks down as follows:\n        //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n        //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n        //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n        //    [^{}\\\\]+                       - anything other than curly braces or backslash\n        //    \\\\.                            - a backslash escape\n        //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n        var placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g;\n        var searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g;\n        var patterns = [];\n        var last = 0;\n        var matchArray;\n        var checkParamErrors = function (id) {\n            if (!UrlMatcher.nameValidator.test(id))\n                throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n            if (find(_this._params, propEq('id', id)))\n                throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n        };\n        // Split into static segments separated by path parameter placeholders.\n        // The number of segments is always 1 more than the number of parameters.\n        var matchDetails = function (m, isSearch) {\n            // IE[78] returns '' for unmatched groups instead of null\n            var id = m[2] || m[3];\n            var regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '[\\\\s\\\\S]*' : null);\n            var makeRegexpType = function (str) {\n                return inherit(paramTypes.type(isSearch ? 'query' : 'path'), {\n                    pattern: new RegExp(str, _this.config.caseInsensitive ? 'i' : undefined),\n                });\n            };\n            return {\n                id: id,\n                regexp: regexp,\n                segment: pattern.substring(last, m.index),\n                type: !regexp ? null : paramTypes.type(regexp) || makeRegexpType(regexp),\n            };\n        };\n        var details;\n        var segment;\n        // tslint:disable-next-line:no-conditional-assignment\n        while ((matchArray = placeholder.exec(pattern))) {\n            details = matchDetails(matchArray, false);\n            if (details.segment.indexOf('?') >= 0)\n                break; // we're into the search part\n            checkParamErrors(details.id);\n            this._params.push(paramFactory.fromPath(details.id, details.type, config.state));\n            this._segments.push(details.segment);\n            patterns.push([details.segment, tail(this._params)]);\n            last = placeholder.lastIndex;\n        }\n        segment = pattern.substring(last);\n        // Find any search parameter names and remove them from the last segment\n        var i = segment.indexOf('?');\n        if (i >= 0) {\n            var search = segment.substring(i);\n            segment = segment.substring(0, i);\n            if (search.length > 0) {\n                last = 0;\n                // tslint:disable-next-line:no-conditional-assignment\n                while ((matchArray = searchPlaceholder.exec(search))) {\n                    details = matchDetails(matchArray, true);\n                    checkParamErrors(details.id);\n                    this._params.push(paramFactory.fromSearch(details.id, details.type, config.state));\n                    last = placeholder.lastIndex;\n                    // check if ?&\n                }\n            }\n        }\n        this._segments.push(segment);\n        this._compiled = patterns.map(function (_pattern) { return quoteRegExp.apply(null, _pattern); }).concat(quoteRegExp(segment));\n    }\n    /** @hidden */\n    UrlMatcher.encodeDashes = function (str) {\n        // Replace dashes with encoded \"\\-\"\n        return encodeURIComponent(str).replace(/-/g, function (c) {\n            return \"%5C%\" + c\n                .charCodeAt(0)\n                .toString(16)\n                .toUpperCase();\n        });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n    UrlMatcher.pathSegmentsAndParams = function (matcher) {\n        var staticSegments = matcher._segments;\n        var pathParams = matcher._params.filter(function (p) { return p.location === DefType.PATH; });\n        return arrayTuples(staticSegments, pathParams.concat(undefined))\n            .reduce(unnestR, [])\n            .filter(function (x) { return x !== '' && isDefined(x); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's query params */\n    UrlMatcher.queryParams = function (matcher) {\n        return matcher._params.filter(function (p) { return p.location === DefType.SEARCH; });\n    };\n    /**\n     * Compare two UrlMatchers\n     *\n     * This comparison function converts a UrlMatcher into static and dynamic path segments.\n     * Each static path segment is a static string between a path separator (slash character).\n     * Each dynamic segment is a path parameter.\n     *\n     * The comparison function sorts static segments before dynamic ones.\n     */\n    UrlMatcher.compare = function (a, b) {\n        /**\n         * Turn a UrlMatcher and all its parent matchers into an array\n         * of slash literals '/', string literals, and Param objects\n         *\n         * This example matcher matches strings like \"/foo/:param/tail\":\n         * var matcher = $umf.compile(\"/foo\").append($umf.compile(\"/:param\")).append($umf.compile(\"/\")).append($umf.compile(\"tail\"));\n         * var result = segments(matcher); // [ '/', 'foo', '/', Param, '/', 'tail' ]\n         *\n         * Caches the result as `matcher._cache.segments`\n         */\n        var segments = function (matcher) {\n            return (matcher._cache.segments =\n                matcher._cache.segments ||\n                    matcher._cache.path\n                        .map(UrlMatcher.pathSegmentsAndParams)\n                        .reduce(unnestR, [])\n                        .reduce(joinNeighborsR, [])\n                        .map(function (x) { return (isString(x) ? splitOnSlash(x) : x); })\n                        .reduce(unnestR, []));\n        };\n        /**\n         * Gets the sort weight for each segment of a UrlMatcher\n         *\n         * Caches the result as `matcher._cache.weights`\n         */\n        var weights = function (matcher) {\n            return (matcher._cache.weights =\n                matcher._cache.weights ||\n                    segments(matcher).map(function (segment) {\n                        // Sort slashes first, then static strings, the Params\n                        if (segment === '/')\n                            return 1;\n                        if (isString(segment))\n                            return 2;\n                        if (segment instanceof Param)\n                            return 3;\n                    }));\n        };\n        /**\n         * Pads shorter array in-place (mutates)\n         */\n        var padArrays = function (l, r, padVal) {\n            var len = Math.max(l.length, r.length);\n            while (l.length < len)\n                l.push(padVal);\n            while (r.length < len)\n                r.push(padVal);\n        };\n        var weightsA = weights(a), weightsB = weights(b);\n        padArrays(weightsA, weightsB, 0);\n        var _pairs = arrayTuples(weightsA, weightsB);\n        var cmp, i;\n        for (i = 0; i < _pairs.length; i++) {\n            cmp = _pairs[i][0] - _pairs[i][1];\n            if (cmp !== 0)\n                return cmp;\n        }\n        return 0;\n    };\n    /**\n     * Creates a new concatenated UrlMatcher\n     *\n     * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n     *\n     * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n     */\n    UrlMatcher.prototype.append = function (url) {\n        this._children.push(url);\n        url._cache = {\n            path: this._cache.path.concat(url),\n            parent: this,\n            pattern: null,\n        };\n        return url;\n    };\n    /** @hidden */\n    UrlMatcher.prototype.isRoot = function () {\n        return this._cache.path[0] === this;\n    };\n    /** Returns the input pattern string */\n    UrlMatcher.prototype.toString = function () {\n        return this.pattern;\n    };\n    /**\n     * Tests the specified url/path against this matcher.\n     *\n     * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n     * parameter values.  Returns null if the path does not match.\n     *\n     * The returned object contains the values\n     * of any search parameters that are mentioned in the pattern, but their value may be null if\n     * they are not present in `search`. This means that search parameters are always treated\n     * as optional.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n     *   x: '1', q: 'hello'\n     * });\n     * // returns { id: 'bob', q: 'hello', r: null }\n     * ```\n     *\n     * @param path    The URL path to match, e.g. `$location.path()`.\n     * @param search  URL search parameters, e.g. `$location.search()`.\n     * @param hash    URL hash e.g. `$location.hash()`.\n     * @param options\n     *\n     * @returns The captured parameter values.\n     */\n    UrlMatcher.prototype.exec = function (path, search, hash, options) {\n        var _this = this;\n        if (search === void 0) { search = {}; }\n        if (options === void 0) { options = {}; }\n        var match = memoizeTo(this._cache, 'pattern', function () {\n            return new RegExp([\n                '^',\n                unnest(_this._cache.path.map(prop('_compiled'))).join(''),\n                _this.config.strict === false ? '/?' : '',\n                '$',\n            ].join(''), _this.config.caseInsensitive ? 'i' : undefined);\n        }).exec(path);\n        if (!match)\n            return null;\n        // options = defaults(options, { isolate: false });\n        var allParams = this.parameters(), pathParams = allParams.filter(function (param) { return !param.isSearch(); }), searchParams = allParams.filter(function (param) { return param.isSearch(); }), nPathSegments = this._cache.path.map(function (urlm) { return urlm._segments.length - 1; }).reduce(function (a, x) { return a + x; }), values = {};\n        if (nPathSegments !== match.length - 1)\n            throw new Error(\"Unbalanced capture group in route '\" + this.pattern + \"'\");\n        function decodePathArray(paramVal) {\n            var reverseString = function (str) {\n                return str\n                    .split('')\n                    .reverse()\n                    .join('');\n            };\n            var unquoteDashes = function (str) { return str.replace(/\\\\-/g, '-'); };\n            var split = reverseString(paramVal).split(/-(?!\\\\)/);\n            var allReversed = map(split, reverseString);\n            return map(allReversed, unquoteDashes).reverse();\n        }\n        for (var i = 0; i < nPathSegments; i++) {\n            var param = pathParams[i];\n            var value = match[i + 1];\n            // if the param value matches a pre-replace pair, replace the value before decoding.\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (value && param.array === true)\n                value = decodePathArray(value);\n            if (isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        }\n        searchParams.forEach(function (param) {\n            var value = search[param.id];\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        });\n        if (hash)\n            values['#'] = hash;\n        return values;\n    };\n    /**\n     * @hidden\n     * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n     *\n     * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n     *    pattern has no parameters, an empty array is returned.\n     */\n    UrlMatcher.prototype.parameters = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        if (opts.inherit === false)\n            return this._params;\n        return unnest(this._cache.path.map(function (matcher) { return matcher._params; }));\n    };\n    /**\n     * @hidden\n     * Returns a single parameter from this UrlMatcher by id\n     *\n     * @param id\n     * @param opts\n     * @returns {T|Param|any|boolean|UrlMatcher|null}\n     */\n    UrlMatcher.prototype.parameter = function (id, opts) {\n        var _this = this;\n        if (opts === void 0) { opts = {}; }\n        var findParam = function () {\n            for (var _i = 0, _a = _this._params; _i < _a.length; _i++) {\n                var param = _a[_i];\n                if (param.id === id)\n                    return param;\n            }\n        };\n        var parent = this._cache.parent;\n        return findParam() || (opts.inherit !== false && parent && parent.parameter(id, opts)) || null;\n    };\n    /**\n     * Validates the input parameter values against this UrlMatcher\n     *\n     * Checks an object hash of parameters to validate their correctness according to the parameter\n     * types of this `UrlMatcher`.\n     *\n     * @param params The object hash of parameters to validate.\n     * @returns Returns `true` if `params` validates, otherwise `false`.\n     */\n    UrlMatcher.prototype.validates = function (params) {\n        var validParamVal = function (param, val) { return !param || param.validates(val); };\n        params = params || {};\n        // I'm not sure why this checks only the param keys passed in, and not all the params known to the matcher\n        var paramSchema = this.parameters().filter(function (paramDef) { return params.hasOwnProperty(paramDef.id); });\n        return paramSchema.map(function (paramDef) { return validParamVal(paramDef, params[paramDef.id]); }).reduce(allTrueR, true);\n    };\n    /**\n     * Given a set of parameter values, creates a URL from this UrlMatcher.\n     *\n     * Creates a URL that matches this pattern by substituting the specified values\n     * for the path and search parameters.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n     * // returns '/user/bob?q=yes'\n     * ```\n     *\n     * @param values  the values to substitute for the parameters in this pattern.\n     * @returns the formatted URL (path and optionally search part).\n     */\n    UrlMatcher.prototype.format = function (values) {\n        if (values === void 0) { values = {}; }\n        // Build the full path of UrlMatchers (including all parent UrlMatchers)\n        var urlMatchers = this._cache.path;\n        // Extract all the static segments and Params (processed as ParamDetails)\n        // into an ordered array\n        var pathSegmentsAndParams = urlMatchers\n            .map(UrlMatcher.pathSegmentsAndParams)\n            .reduce(unnestR, [])\n            .map(function (x) { return (isString(x) ? x : getDetails(x)); });\n        // Extract the query params into a separate array\n        var queryParams = urlMatchers\n            .map(UrlMatcher.queryParams)\n            .reduce(unnestR, [])\n            .map(getDetails);\n        var isInvalid = function (param) { return param.isValid === false; };\n        if (pathSegmentsAndParams.concat(queryParams).filter(isInvalid).length) {\n            return null;\n        }\n        /**\n         * Given a Param, applies the parameter value, then returns detailed information about it\n         */\n        function getDetails(param) {\n            // Normalize to typed value\n            var value = param.value(values[param.id]);\n            var isValid = param.validates(value);\n            var isDefaultValue = param.isDefaultValue(value);\n            // Check if we're in squash mode for the parameter\n            var squash = isDefaultValue ? param.squash : false;\n            // Allow the Parameter's Type to encode the value\n            var encoded = param.type.encode(value);\n            return { param: param, value: value, isValid: isValid, isDefaultValue: isDefaultValue, squash: squash, encoded: encoded };\n        }\n        // Build up the path-portion from the list of static segments and parameters\n        var pathString = pathSegmentsAndParams.reduce(function (acc, x) {\n            // The element is a static segment (a raw string); just append it\n            if (isString(x))\n                return acc + x;\n            // Otherwise, it's a ParamDetails.\n            var squash = x.squash, encoded = x.encoded, param = x.param;\n            // If squash is === true, try to remove a slash from the path\n            if (squash === true)\n                return acc.match(/\\/$/) ? acc.slice(0, -1) : acc;\n            // If squash is a string, use the string for the param value\n            if (isString(squash))\n                return acc + squash;\n            if (squash !== false)\n                return acc; // ?\n            if (encoded == null)\n                return acc;\n            // If this parameter value is an array, encode the value using encodeDashes\n            if (isArray(encoded))\n                return acc + map(encoded, UrlMatcher.encodeDashes).join('-');\n            // If the parameter type is \"raw\", then do not encodeURIComponent\n            if (param.raw)\n                return acc + encoded;\n            // Encode the value\n            return acc + encodeURIComponent(encoded);\n        }, '');\n        // Build the query string by applying parameter values (array or regular)\n        // then mapping to key=value, then flattening and joining using \"&\"\n        var queryString = queryParams\n            .map(function (paramDetails) {\n            var param = paramDetails.param, squash = paramDetails.squash, encoded = paramDetails.encoded, isDefaultValue = paramDetails.isDefaultValue;\n            if (encoded == null || (isDefaultValue && squash !== false))\n                return;\n            if (!isArray(encoded))\n                encoded = [encoded];\n            if (encoded.length === 0)\n                return;\n            if (!param.raw)\n                encoded = map(encoded, encodeURIComponent);\n            return encoded.map(function (val) { return param.id + \"=\" + val; });\n        })\n            .filter(identity)\n            .reduce(unnestR, [])\n            .join('&');\n        // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n        return pathString + (queryString ? \"?\" + queryString : '') + (values['#'] ? '#' + values['#'] : '');\n    };\n    /** @hidden */\n    UrlMatcher.nameValidator = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n    return UrlMatcher;\n}());\nexport { UrlMatcher };\n//# sourceMappingURL=urlMatcher.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/** @publicapi @module url */ /** */\nimport { extend, forEach, isDefined, isFunction, isObject } from '../common';\nimport { UrlMatcher } from './urlMatcher';\nimport { DefType, Param } from '../params';\n/** @internalapi */\nvar ParamFactory = /** @class */ (function () {\n    function ParamFactory(router) {\n        this.router = router;\n    }\n    ParamFactory.prototype.fromConfig = function (id, type, state) {\n        return new Param(id, type, DefType.CONFIG, this.router.urlService.config, state);\n    };\n    ParamFactory.prototype.fromPath = function (id, type, state) {\n        return new Param(id, type, DefType.PATH, this.router.urlService.config, state);\n    };\n    ParamFactory.prototype.fromSearch = function (id, type, state) {\n        return new Param(id, type, DefType.SEARCH, this.router.urlService.config, state);\n    };\n    return ParamFactory;\n}());\nexport { ParamFactory };\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactory` or ng1 providers as `$urlMatcherFactoryProvider`.\n *\n * @internalapi\n */\nvar UrlMatcherFactory = /** @class */ (function () {\n    // TODO: move implementations to UrlConfig (urlService.config)\n    function UrlMatcherFactory(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @internalapi Creates a new [[Param]] for a given location (DefType) */\n        this.paramFactory = new ParamFactory(this.router);\n        /** @deprecated use [[UrlConfig.caseInsensitive]] */\n        this.caseInsensitive = function (value) { return _this.router.urlService.config.caseInsensitive(value); };\n        /** @deprecated use [[UrlConfig.defaultSquashPolicy]] */\n        this.defaultSquashPolicy = function (value) { return _this.router.urlService.config.defaultSquashPolicy(value); };\n        /** @deprecated use [[UrlConfig.strictMode]] */\n        this.strictMode = function (value) { return _this.router.urlService.config.strictMode(value); };\n        /** @deprecated use [[UrlConfig.type]] */\n        this.type = function (name, definition, definitionFn) {\n            return _this.router.urlService.config.type(name, definition, definitionFn) || _this;\n        };\n        extend(this, { UrlMatcher: UrlMatcher, Param: Param });\n    }\n    /**\n     * Creates a [[UrlMatcher]] for the specified pattern.\n     *\n     * @param pattern  The URL pattern.\n     * @param config  The config object hash.\n     * @returns The UrlMatcher.\n     */\n    UrlMatcherFactory.prototype.compile = function (pattern, config) {\n        var urlConfig = this.router.urlService.config;\n        // backward-compatible support for config.params -> config.state.params\n        var params = config && !config.state && config.params;\n        config = params ? __assign({ state: { params: params } }, config) : config;\n        var globalConfig = { strict: urlConfig._isStrictMode, caseInsensitive: urlConfig._isCaseInsensitive };\n        return new UrlMatcher(pattern, urlConfig.paramTypes, this.paramFactory, extend(globalConfig, config));\n    };\n    /**\n     * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n     *\n     * @param object  The object to perform the type check against.\n     * @returns `true` if the object matches the `UrlMatcher` interface, by\n     *          implementing all the same methods.\n     */\n    UrlMatcherFactory.prototype.isMatcher = function (object) {\n        // TODO: typeof?\n        if (!isObject(object))\n            return false;\n        var result = true;\n        forEach(UrlMatcher.prototype, function (val, name) {\n            if (isFunction(val))\n                result = result && (isDefined(object[name]) && isFunction(object[name]));\n        });\n        return result;\n    };\n    /** @hidden */\n    UrlMatcherFactory.prototype.$get = function () {\n        var urlConfig = this.router.urlService.config;\n        urlConfig.paramTypes.enqueue = false;\n        urlConfig.paramTypes._flushTypeQueue();\n        return this;\n    };\n    return UrlMatcherFactory;\n}());\nexport { UrlMatcherFactory };\n//# sourceMappingURL=urlMatcherFactory.js.map","/** @publicapi @module url */ /** */\nimport { UrlMatcher } from './urlMatcher';\nimport { isString, isDefined, isFunction } from '../common/predicates';\nimport { identity, extend } from '../common/common';\nimport { is, pattern } from '../common/hof';\nimport { StateObject } from '../state/stateObject';\n/**\n * Creates a [[UrlRule]]\n *\n * Creates a [[UrlRule]] from a:\n *\n * - `string`\n * - [[UrlMatcher]]\n * - `RegExp`\n * - [[StateObject]]\n * @internalapi\n */\nvar UrlRuleFactory = /** @class */ (function () {\n    function UrlRuleFactory(router) {\n        this.router = router;\n    }\n    UrlRuleFactory.prototype.compile = function (str) {\n        return this.router.urlMatcherFactory.compile(str);\n    };\n    UrlRuleFactory.prototype.create = function (what, handler) {\n        var _this = this;\n        var isState = StateObject.isState;\n        var makeRule = pattern([\n            [isString, function (_what) { return makeRule(_this.compile(_what)); }],\n            [is(UrlMatcher), function (_what) { return _this.fromUrlMatcher(_what, handler); }],\n            [isState, function (_what) { return _this.fromState(_what, _this.router); }],\n            [is(RegExp), function (_what) { return _this.fromRegExp(_what, handler); }],\n            [isFunction, function (_what) { return new BaseUrlRule(_what, handler); }],\n        ]);\n        var rule = makeRule(what);\n        if (!rule)\n            throw new Error(\"invalid 'what' in when()\");\n        return rule;\n    };\n    /**\n     * A UrlRule which matches based on a UrlMatcher\n     *\n     * The `handler` may be either a `string`, a [[UrlRuleHandlerFn]] or another [[UrlMatcher]]\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - matched parameter values ([[RawParams]] from [[UrlMatcher.exec]])\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, match => \"/home/\" + match.fooId + \"/\" + match.barId);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     *\n     * ## Handler as UrlMatcher\n     *\n     * If `handler` is a UrlMatcher, the handler matcher is used to create the new url.\n     * The `handler` UrlMatcher is formatted using the matched param from the first matcher.\n     * The url is replaced with the result.\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var handler = $umf.compile(\"/home/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, handler);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromUrlMatcher = function (urlMatcher, handler) {\n        var _handler = handler;\n        if (isString(handler))\n            handler = this.router.urlMatcherFactory.compile(handler);\n        if (is(UrlMatcher)(handler))\n            _handler = function (match) { return handler.format(match); };\n        function matchUrlParamters(url) {\n            var params = urlMatcher.exec(url.path, url.search, url.hash);\n            return urlMatcher.validates(params) && params;\n        }\n        // Prioritize URLs, lowest to highest:\n        // - Some optional URL parameters, but none matched\n        // - No optional parameters in URL\n        // - Some optional parameters, some matched\n        // - Some optional parameters, all matched\n        function matchPriority(params) {\n            var optional = urlMatcher.parameters().filter(function (param) { return param.isOptional; });\n            if (!optional.length)\n                return 0.000001;\n            var matched = optional.filter(function (param) { return params[param.id]; });\n            return matched.length / optional.length;\n        }\n        var details = { urlMatcher: urlMatcher, matchPriority: matchPriority, type: 'URLMATCHER' };\n        return extend(new BaseUrlRule(matchUrlParamters, _handler), details);\n    };\n    /**\n     * A UrlRule which matches a state by its url\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromState($state.get('foo'), router);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match);\n     * // Starts a transition to 'foo' with params: { fooId: '123', barId: '456' }\n     * ```\n     */\n    UrlRuleFactory.prototype.fromState = function (state, router) {\n        /**\n         * Handles match by transitioning to matched state\n         *\n         * First checks if the router should start a new transition.\n         * A new transition is not required if the current state's URL\n         * and the new URL are already identical\n         */\n        var handler = function (match) {\n            var $state = router.stateService;\n            var globals = router.globals;\n            if ($state.href(state, match) !== $state.href(globals.current, globals.params)) {\n                $state.transitionTo(state, match, { inherit: true, source: 'url' });\n            }\n        };\n        var details = { state: state, type: 'STATE' };\n        return extend(this.fromUrlMatcher(state.url, handler), details);\n    };\n    /**\n     * A UrlRule which matches based on a regular expression\n     *\n     * The `handler` may be either a [[UrlRuleHandlerFn]] or a string.\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - regexp match array (from `regexp`)\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, match => \"/home/\" + match[1])\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     *\n     * ## Handler as string\n     *\n     * If `handler` is a string, the url is *replaced by the string* when the Rule is invoked.\n     * The string is first interpolated using `string.replace()` style pattern.\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, \"/home/$1\")\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromRegExp = function (regexp, handler) {\n        if (regexp.global || regexp.sticky)\n            throw new Error('Rule RegExp must not be global or sticky');\n        /**\n         * If handler is a string, the url will be replaced by the string.\n         * If the string has any String.replace() style variables in it (like `$2`),\n         * they will be replaced by the captures from [[match]]\n         */\n        var redirectUrlTo = function (match) {\n            // Interpolates matched values into $1 $2, etc using a String.replace()-style pattern\n            return handler.replace(/\\$(\\$|\\d{1,2})/, function (m, what) { return match[what === '$' ? 0 : Number(what)]; });\n        };\n        var _handler = isString(handler) ? redirectUrlTo : handler;\n        var matchParamsFromRegexp = function (url) { return regexp.exec(url.path); };\n        var details = { regexp: regexp, type: 'REGEXP' };\n        return extend(new BaseUrlRule(matchParamsFromRegexp, _handler), details);\n    };\n    UrlRuleFactory.isUrlRule = function (obj) { return obj && ['type', 'match', 'handler'].every(function (key) { return isDefined(obj[key]); }); };\n    return UrlRuleFactory;\n}());\nexport { UrlRuleFactory };\n/**\n * A base rule which calls `match`\n *\n * The value from the `match` function is passed through to the `handler`.\n * @internalapi\n */\nvar BaseUrlRule = /** @class */ (function () {\n    function BaseUrlRule(match, handler) {\n        var _this = this;\n        this.match = match;\n        this.type = 'RAW';\n        this.matchPriority = function (match) { return 0 - _this.$id; };\n        this.handler = handler || identity;\n    }\n    return BaseUrlRule;\n}());\nexport { BaseUrlRule };\n//# sourceMappingURL=urlRule.js.map","/** @publicapi @module url */ /** */\nimport { stripLastPathElement } from '../common';\nimport { UrlRuleFactory } from './urlRule';\n/** @hidden */\nfunction appendBasePath(url, isHtml5, absolute, baseHref) {\n    if (baseHref === '/')\n        return url;\n    if (isHtml5)\n        return stripLastPathElement(baseHref) + url;\n    if (absolute)\n        return baseHref.slice(1) + url;\n    return url;\n}\n/**\n * Updates URL and responds to URL changes\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRules]] which can be found as [[UrlService.rules]].\n *\n * @internalapi\n */\nvar UrlRouter = /** @class */ (function () {\n    /** @hidden */\n    function UrlRouter(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        // Delegate these calls to [[UrlService]]\n        /** @deprecated use [[UrlService.sync]]*/\n        this.sync = function (evt) { return _this.router.urlService.sync(evt); };\n        /** @deprecated use [[UrlService.listen]]*/\n        this.listen = function (enabled) { return _this.router.urlService.listen(enabled); };\n        /** @deprecated use [[UrlService.deferIntercept]]*/\n        this.deferIntercept = function (defer) { return _this.router.urlService.deferIntercept(defer); };\n        /** @deprecated use [[UrlService.match]]*/\n        this.match = function (urlParts) { return _this.router.urlService.match(urlParts); };\n        // Delegate these calls to [[UrlRules]]\n        /** @deprecated use [[UrlRules.initial]]*/\n        this.initial = function (handler) {\n            return _this.router.urlService.rules.initial(handler);\n        };\n        /** @deprecated use [[UrlRules.otherwise]]*/\n        this.otherwise = function (handler) {\n            return _this.router.urlService.rules.otherwise(handler);\n        };\n        /** @deprecated use [[UrlRules.removeRule]]*/\n        this.removeRule = function (rule) { return _this.router.urlService.rules.removeRule(rule); };\n        /** @deprecated use [[UrlRules.rule]]*/\n        this.rule = function (rule) { return _this.router.urlService.rules.rule(rule); };\n        /** @deprecated use [[UrlRules.rules]]*/\n        this.rules = function () { return _this.router.urlService.rules.rules(); };\n        /** @deprecated use [[UrlRules.sort]]*/\n        this.sort = function (compareFn) { return _this.router.urlService.rules.sort(compareFn); };\n        /** @deprecated use [[UrlRules.when]]*/\n        this.when = function (matcher, handler, options) { return _this.router.urlService.rules.when(matcher, handler, options); };\n        this.urlRuleFactory = new UrlRuleFactory(router);\n    }\n    /**\n     * Internal API.\n     * @internalapi\n     */\n    UrlRouter.prototype.update = function (read) {\n        var $url = this.router.locationService;\n        if (read) {\n            this.location = $url.url();\n            return;\n        }\n        if ($url.url() === this.location)\n            return;\n        $url.url(this.location, true);\n    };\n    /**\n     * Internal API.\n     *\n     * Pushes a new location to the browser history.\n     *\n     * @internalapi\n     * @param urlMatcher\n     * @param params\n     * @param options\n     */\n    UrlRouter.prototype.push = function (urlMatcher, params, options) {\n        var replace = options && !!options.replace;\n        this.router.urlService.url(urlMatcher.format(params || {}), replace);\n    };\n    /**\n     * Builds and returns a URL with interpolated parameters\n     *\n     * #### Example:\n     * ```js\n     * matcher = $umf.compile(\"/about/:person\");\n     * params = { person: \"bob\" };\n     * $bob = $urlRouter.href(matcher, params);\n     * // $bob == \"/about/bob\";\n     * ```\n     *\n     * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n     * @param params An object of parameter values to fill the matcher's required parameters.\n     * @param options Options object. The options are:\n     *\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     *\n     * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n     */\n    UrlRouter.prototype.href = function (urlMatcher, params, options) {\n        var url = urlMatcher.format(params);\n        if (url == null)\n            return null;\n        options = options || { absolute: false };\n        var cfg = this.router.urlService.config;\n        var isHtml5 = cfg.html5Mode();\n        if (!isHtml5 && url !== null) {\n            url = '#' + cfg.hashPrefix() + url;\n        }\n        url = appendBasePath(url, isHtml5, options.absolute, cfg.baseHref());\n        if (!options.absolute || !url) {\n            return url;\n        }\n        var slash = !isHtml5 && url ? '/' : '';\n        var cfgPort = cfg.port();\n        var port = (cfgPort === 80 || cfgPort === 443 ? '' : ':' + cfgPort);\n        return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n    };\n    Object.defineProperty(UrlRouter.prototype, \"interceptDeferred\", {\n        /** @deprecated use [[UrlService.interceptDeferred]]*/\n        get: function () {\n            return this.router.urlService.interceptDeferred;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return UrlRouter;\n}());\nexport { UrlRouter };\n//# sourceMappingURL=urlRouter.js.map","import { TargetState } from '../state';\nimport { UrlMatcher } from './urlMatcher';\nimport { is, isDefined, isFunction, isString, removeFrom, val } from '../common';\nimport { UrlRuleFactory } from './urlRule';\n/** @hidden */\nvar prioritySort = function (a, b) { return (b.priority || 0) - (a.priority || 0); };\n/** @hidden */\nvar typeSort = function (a, b) {\n    var weights = { STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1 };\n    return (weights[a.type] || 0) - (weights[b.type] || 0);\n};\n/** @hidden */\nvar urlMatcherSort = function (a, b) {\n    return !a.urlMatcher || !b.urlMatcher ? 0 : UrlMatcher.compare(a.urlMatcher, b.urlMatcher);\n};\n/** @hidden */\nvar idSort = function (a, b) {\n    // Identically sorted STATE and URLMATCHER best rule will be chosen by `matchPriority` after each rule matches the URL\n    var useMatchPriority = { STATE: true, URLMATCHER: true };\n    var equal = useMatchPriority[a.type] && useMatchPriority[b.type];\n    return equal ? 0 : (a.$id || 0) - (b.$id || 0);\n};\n/**\n * Default rule priority sorting function.\n *\n * Sorts rules by:\n *\n * - Explicit priority (set rule priority using [[UrlRules.when]])\n * - Rule type (STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1)\n * - `UrlMatcher` specificity ([[UrlMatcher.compare]]): works for STATE and URLMATCHER types to pick the most specific rule.\n * - Rule registration order (for rule types other than STATE and URLMATCHER)\n *   - Equally sorted State and UrlMatcher rules will each match the URL.\n *     Then, the *best* match is chosen based on how many parameter values were matched.\n *\n * @publicapi\n */\nvar defaultRuleSortFn;\ndefaultRuleSortFn = function (a, b) {\n    var cmp = prioritySort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    cmp = typeSort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    cmp = urlMatcherSort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    return idSort(a, b);\n};\n/** @hidden */\nfunction getHandlerFn(handler) {\n    if (!isFunction(handler) && !isString(handler) && !is(TargetState)(handler) && !TargetState.isDef(handler)) {\n        throw new Error(\"'handler' must be a string, function, TargetState, or have a state: 'newtarget' property\");\n    }\n    return isFunction(handler) ? handler : val(handler);\n}\n/**\n * API for managing URL rules\n *\n * This API is used to create and manage URL rules.\n * URL rules are a mechanism to respond to specific URL patterns.\n *\n * The most commonly used methods are [[otherwise]] and [[when]].\n *\n * This API is a property of [[UrlService]] as [[UrlService.rules]]\n *\n * @publicapi\n */\nvar UrlRules = /** @class */ (function () {\n    /** @hidden */\n    function UrlRules(/** @hidden */ router) {\n        this.router = router;\n        /** @hidden */ this._sortFn = defaultRuleSortFn;\n        /** @hidden */ this._rules = [];\n        /** @hidden */ this._id = 0;\n        this.urlRuleFactory = new UrlRuleFactory(router);\n    }\n    /** @hidden */\n    UrlRules.prototype.dispose = function (router) {\n        this._rules = [];\n        delete this._otherwiseFn;\n    };\n    /**\n     * Defines the initial state, path, or behavior to use when the app starts.\n     *\n     * This rule defines the initial/starting state for the application.\n     *\n     * This rule is triggered the first time the URL is checked (when the app initially loads).\n     * The rule is triggered only when the url matches either `\"\"` or `\"/\"`.\n     *\n     * Note: The rule is intended to be used when the root of the application is directly linked to.\n     * When the URL is *not* `\"\"` or `\"/\"` and doesn't match other rules, the [[otherwise]] rule is triggered.\n     * This allows 404-like behavior when an unknown URL is deep-linked.\n     *\n     * #### Example:\n     * Start app at `home` state.\n     * ```js\n     * .initial({ state: 'home' });\n     * ```\n     *\n     * #### Example:\n     * Start app at `/home` (by url)\n     * ```js\n     * .initial('/home');\n     * ```\n     *\n     * #### Example:\n     * When no other url rule matches, go to `home` state\n     * ```js\n     * .initial((matchValue, url, router) => {\n     *   console.log('initial state');\n     *   return { state: 'home' };\n     * })\n     * ```\n     *\n     * @param handler The initial state or url path, or a function which returns the state or url path (or performs custom logic).\n     */\n    UrlRules.prototype.initial = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        var matchFn = function (urlParts, router) {\n            return router.globals.transitionHistory.size() === 0 && !!/^\\/?$/.exec(urlParts.path);\n        };\n        this.rule(this.urlRuleFactory.create(matchFn, handlerFn));\n    };\n    /**\n     * Defines the state, url, or behavior to use when no other rule matches the URL.\n     *\n     * This rule is matched when *no other rule* matches.\n     * It is generally used to handle unknown URLs (similar to \"404\" behavior, but on the client side).\n     *\n     * - If `handler` a string, it is treated as a url redirect\n     *\n     * #### Example:\n     * When no other url rule matches, redirect to `/index`\n     * ```js\n     * .otherwise('/index');\n     * ```\n     *\n     * - If `handler` is an object with a `state` property, the state is activated.\n     *\n     * #### Example:\n     * When no other url rule matches, redirect to `home` and provide a `dashboard` parameter value.\n     * ```js\n     * .otherwise({ state: 'home', params: { dashboard: 'default' } });\n     * ```\n     *\n     * - If `handler` is a function, the function receives the current url ([[UrlParts]]) and the [[UIRouter]] object.\n     *   The function can perform actions, and/or return a value.\n     *\n     * #### Example:\n     * When no other url rule matches, manually trigger a transition to the `home` state\n     * ```js\n     * .otherwise((matchValue, urlParts, router) => {\n     *   router.stateService.go('home');\n     * });\n     * ```\n     *\n     * #### Example:\n     * When no other url rule matches, go to `home` state\n     * ```js\n     * .otherwise((matchValue, urlParts, router) => {\n     *   return { state: 'home' };\n     * });\n     * ```\n     *\n     * @param handler The url path to redirect to, or a function which returns the url path (or performs custom logic).\n     */\n    UrlRules.prototype.otherwise = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        this._otherwiseFn = this.urlRuleFactory.create(val(true), handlerFn);\n        this._sorted = false;\n    };\n    /**\n     * Remove a rule previously registered\n     *\n     * @param rule the matcher rule that was previously registered using [[rule]]\n     */\n    UrlRules.prototype.removeRule = function (rule) {\n        removeFrom(this._rules, rule);\n    };\n    /**\n     * Manually adds a URL Rule.\n     *\n     * Usually, a url rule is added using [[StateDeclaration.url]] or [[when]].\n     * This api can be used directly for more control (to register a [[BaseUrlRule]], for example).\n     * Rules can be created using [[urlRuleFactory]], or created manually as simple objects.\n     *\n     * A rule should have a `match` function which returns truthy if the rule matched.\n     * It should also have a `handler` function which is invoked if the rule is the best match.\n     *\n     * @return a function that deregisters the rule\n     */\n    UrlRules.prototype.rule = function (rule) {\n        var _this = this;\n        if (!UrlRuleFactory.isUrlRule(rule))\n            throw new Error('invalid rule');\n        rule.$id = this._id++;\n        rule.priority = rule.priority || 0;\n        this._rules.push(rule);\n        this._sorted = false;\n        return function () { return _this.removeRule(rule); };\n    };\n    /**\n     * Gets all registered rules\n     *\n     * @returns an array of all the registered rules\n     */\n    UrlRules.prototype.rules = function () {\n        this.ensureSorted();\n        return this._rules.concat(this._otherwiseFn ? [this._otherwiseFn] : []);\n    };\n    /**\n     * Defines URL Rule priorities\n     *\n     * More than one rule ([[UrlRule]]) might match a given URL.\n     * This `compareFn` is used to sort the rules by priority.\n     * Higher priority rules should sort earlier.\n     *\n     * The [[defaultRuleSortFn]] is used by default.\n     *\n     * You only need to call this function once.\n     * The `compareFn` will be used to sort the rules as each is registered.\n     *\n     * If called without any parameter, it will re-sort the rules.\n     *\n     * ---\n     *\n     * Url rules may come from multiple sources: states's urls ([[StateDeclaration.url]]), [[when]], and [[rule]].\n     * Each rule has a (user-provided) [[UrlRule.priority]], a [[UrlRule.type]], and a [[UrlRule.$id]]\n     * The `$id` is is the order in which the rule was registered.\n     *\n     * The sort function should use these data, or data found on a specific type\n     * of [[UrlRule]] (such as [[StateRule.state]]), to order the rules as desired.\n     *\n     * #### Example:\n     * This compare function prioritizes rules by the order in which the rules were registered.\n     * A rule registered earlier has higher priority.\n     *\n     * ```js\n     * function compareFn(a, b) {\n     *   return a.$id - b.$id;\n     * }\n     * ```\n     *\n     * @param compareFn a function that compares to [[UrlRule]] objects.\n     *    The `compareFn` should abide by the `Array.sort` compare function rules.\n     *    Given two rules, `a` and `b`, return a negative number if `a` should be higher priority.\n     *    Return a positive number if `b` should be higher priority.\n     *    Return `0` if the rules are identical.\n     *\n     *    See the [mozilla reference](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Description)\n     *    for details.\n     */\n    UrlRules.prototype.sort = function (compareFn) {\n        var sorted = this.stableSort(this._rules, (this._sortFn = compareFn || this._sortFn));\n        // precompute _sortGroup values and apply to each rule\n        var group = 0;\n        for (var i = 0; i < sorted.length; i++) {\n            sorted[i]._group = group;\n            if (i < sorted.length - 1 && this._sortFn(sorted[i], sorted[i + 1]) !== 0) {\n                group++;\n            }\n        }\n        this._rules = sorted;\n        this._sorted = true;\n    };\n    /** @hidden */\n    UrlRules.prototype.ensureSorted = function () {\n        this._sorted || this.sort();\n    };\n    /** @hidden */\n    UrlRules.prototype.stableSort = function (arr, compareFn) {\n        var arrOfWrapper = arr.map(function (elem, idx) { return ({ elem: elem, idx: idx }); });\n        arrOfWrapper.sort(function (wrapperA, wrapperB) {\n            var cmpDiff = compareFn(wrapperA.elem, wrapperB.elem);\n            return cmpDiff === 0 ? wrapperA.idx - wrapperB.idx : cmpDiff;\n        });\n        return arrOfWrapper.map(function (wrapper) { return wrapper.elem; });\n    };\n    /**\n     * Registers a `matcher` and `handler` for custom URLs handling.\n     *\n     * The `matcher` can be:\n     *\n     * - a [[UrlMatcher]]: See: [[UrlMatcherFactory.compile]]\n     * - a `string`: The string is compiled to a [[UrlMatcher]]\n     * - a `RegExp`: The regexp is used to match the url.\n     *\n     * The `handler` can be:\n     *\n     * - a string: The url is redirected to the value of the string.\n     * - a function: The url is redirected to the return value of the function.\n     *\n     * ---\n     *\n     * When the `handler` is a `string` and the `matcher` is a `UrlMatcher` (or string), the redirect\n     * string is interpolated with parameter values.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(\"/foo/:param1\", \"/bar/:param1\")\n     * ```\n     *\n     * ---\n     *\n     * When the `handler` is a string and the `matcher` is a `RegExp`, the redirect string is\n     * interpolated with capture groups from the RegExp.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(new RegExp(\"^/foo/(.*)$\"), \"/bar/$1\");\n     * ```\n     *\n     * ---\n     *\n     * When the handler is a function, it receives the matched value, the current URL, and the `UIRouter` object (See [[UrlRuleHandlerFn]]).\n     * The \"matched value\" differs based on the `matcher`.\n     * For [[UrlMatcher]]s, it will be the matched state params.\n     * For `RegExp`, it will be the match array from `regexp.exec()`.\n     *\n     * If the handler returns a string, the URL is redirected to the string.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(new RegExp(\"^/foo/(.*)$\"), match => \"/bar/\" + match[1]);\n     * ```\n     *\n     * Note: the `handler` may also invoke arbitrary code, such as `$state.go()`\n     *\n     * @param matcher A pattern `string` to match, compiled as a [[UrlMatcher]], or a `RegExp`.\n     * @param handler The path to redirect to, or a function that returns the path.\n     * @param options `{ priority: number }`\n     *\n     * @return the registered [[UrlRule]]\n     */\n    UrlRules.prototype.when = function (matcher, handler, options) {\n        var rule = this.urlRuleFactory.create(matcher, handler);\n        if (isDefined(options && options.priority))\n            rule.priority = options.priority;\n        this.rule(rule);\n        return rule;\n    };\n    return UrlRules;\n}());\nexport { UrlRules };\n//# sourceMappingURL=urlRules.js.map","/** @publicapi @module view */ /** */\nimport { equals, applyPairs, removeFrom, inArray, find } from '../common/common';\nimport { curry, prop } from '../common/hof';\nimport { isString, isArray } from '../common/predicates';\nimport { trace } from '../common/trace';\n/**\n * The View service\n *\n * This service pairs existing `ui-view` components (which live in the DOM)\n * with view configs (from the state declaration objects: [[StateDeclaration.views]]).\n *\n * - After a successful Transition, the views from the newly entered states are activated via [[activateViewConfig]].\n *   The views from exited states are deactivated via [[deactivateViewConfig]].\n *   (See: the [[registerActivateViews]] Transition Hook)\n *\n * - As `ui-view` components pop in and out of existence, they register themselves using [[registerUIView]].\n *\n * - When the [[sync]] function is called, the registered `ui-view`(s) ([[ActiveUIView]])\n * are configured with the matching [[ViewConfig]](s)\n *\n */\nvar ViewService = /** @class */ (function () {\n    /** @hidden */\n    function ViewService(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this._uiViews = [];\n        /** @hidden */ this._viewConfigs = [];\n        /** @hidden */ this._viewConfigFactories = {};\n        /** @hidden */ this._listeners = [];\n        /** @internalapi */\n        this._pluginapi = {\n            _rootViewContext: this._rootViewContext.bind(this),\n            _viewConfigFactory: this._viewConfigFactory.bind(this),\n            _registeredUIView: function (id) { return find(_this._uiViews, function (view) { return _this.router.$id + \".\" + view.id === id; }); },\n            _registeredUIViews: function () { return _this._uiViews; },\n            _activeViewConfigs: function () { return _this._viewConfigs; },\n            _onSync: function (listener) {\n                _this._listeners.push(listener);\n                return function () { return removeFrom(_this._listeners, listener); };\n            },\n        };\n    }\n    /**\n     * Normalizes a view's name from a state.views configuration block.\n     *\n     * This should be used by a framework implementation to calculate the values for\n     * [[_ViewDeclaration.$uiViewName]] and [[_ViewDeclaration.$uiViewContextAnchor]].\n     *\n     * @param context the context object (state declaration) that the view belongs to\n     * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n     *\n     * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n     */\n    ViewService.normalizeUIViewTarget = function (context, rawViewName) {\n        if (rawViewName === void 0) { rawViewName = ''; }\n        // TODO: Validate incoming view name with a regexp to allow:\n        // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n        // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n        var viewAtContext = rawViewName.split('@');\n        var uiViewName = viewAtContext[0] || '$default'; // default to unnamed view\n        var uiViewContextAnchor = isString(viewAtContext[1]) ? viewAtContext[1] : '^'; // default to parent context\n        // Handle relative view-name sugar syntax.\n        // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n        var relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n        if (relativeViewNameSugar) {\n            // Clobbers existing contextAnchor (rawViewName validation will fix this)\n            uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n            uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n        }\n        if (uiViewName.charAt(0) === '!') {\n            uiViewName = uiViewName.substr(1);\n            uiViewContextAnchor = ''; // target absolutely from root\n        }\n        // handle parent relative targeting \"^.^.^\"\n        var relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n        if (relativeMatch.exec(uiViewContextAnchor)) {\n            var anchorState = uiViewContextAnchor.split('.').reduce(function (anchor, x) { return anchor.parent; }, context);\n            uiViewContextAnchor = anchorState.name;\n        }\n        else if (uiViewContextAnchor === '.') {\n            uiViewContextAnchor = context.name;\n        }\n        return { uiViewName: uiViewName, uiViewContextAnchor: uiViewContextAnchor };\n    };\n    /** @hidden */\n    ViewService.prototype._rootViewContext = function (context) {\n        return (this._rootContext = context || this._rootContext);\n    };\n    /** @hidden */\n    ViewService.prototype._viewConfigFactory = function (viewType, factory) {\n        this._viewConfigFactories[viewType] = factory;\n    };\n    ViewService.prototype.createViewConfig = function (path, decl) {\n        var cfgFactory = this._viewConfigFactories[decl.$type];\n        if (!cfgFactory)\n            throw new Error('ViewService: No view config factory registered for type ' + decl.$type);\n        var cfgs = cfgFactory(path, decl);\n        return isArray(cfgs) ? cfgs : [cfgs];\n    };\n    /**\n     * Deactivates a ViewConfig.\n     *\n     * This function deactivates a `ViewConfig`.\n     * After calling [[sync]], it will un-pair from any `ui-view` with which it is currently paired.\n     *\n     * @param viewConfig The ViewConfig view to deregister.\n     */\n    ViewService.prototype.deactivateViewConfig = function (viewConfig) {\n        trace.traceViewServiceEvent('<- Removing', viewConfig);\n        removeFrom(this._viewConfigs, viewConfig);\n    };\n    ViewService.prototype.activateViewConfig = function (viewConfig) {\n        trace.traceViewServiceEvent('-> Registering', viewConfig);\n        this._viewConfigs.push(viewConfig);\n    };\n    ViewService.prototype.sync = function () {\n        var _this = this;\n        var uiViewsByFqn = this._uiViews.map(function (uiv) { return [uiv.fqn, uiv]; }).reduce(applyPairs, {});\n        // Return a weighted depth value for a uiView.\n        // The depth is the nesting depth of ui-views (based on FQN; times 10,000)\n        // plus the depth of the state that is populating the uiView\n        function uiViewDepth(uiView) {\n            var stateDepth = function (context) { return (context && context.parent ? stateDepth(context.parent) + 1 : 1); };\n            return uiView.fqn.split('.').length * 10000 + stateDepth(uiView.creationContext);\n        }\n        // Return the ViewConfig's context's depth in the context tree.\n        function viewConfigDepth(config) {\n            var context = config.viewDecl.$context, count = 0;\n            while (++count && context.parent)\n                context = context.parent;\n            return count;\n        }\n        // Given a depth function, returns a compare function which can return either ascending or descending order\n        var depthCompare = curry(function (depthFn, posNeg, left, right) { return posNeg * (depthFn(left) - depthFn(right)); });\n        var matchingConfigPair = function (uiView) {\n            var matchingConfigs = _this._viewConfigs.filter(ViewService.matches(uiViewsByFqn, uiView));\n            if (matchingConfigs.length > 1) {\n                // This is OK.  Child states can target a ui-view that the parent state also targets (the child wins)\n                // Sort by depth and return the match from the deepest child\n                // console.log(`Multiple matching view configs for ${uiView.fqn}`, matchingConfigs);\n                matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n            }\n            return { uiView: uiView, viewConfig: matchingConfigs[0] };\n        };\n        var configureUIView = function (tuple) {\n            // If a parent ui-view is reconfigured, it could destroy child ui-views.\n            // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n            if (_this._uiViews.indexOf(tuple.uiView) !== -1)\n                tuple.uiView.configUpdated(tuple.viewConfig);\n        };\n        // Sort views by FQN and state depth. Process uiviews nearest the root first.\n        var uiViewTuples = this._uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair);\n        var matchedViewConfigs = uiViewTuples.map(function (tuple) { return tuple.viewConfig; });\n        var unmatchedConfigTuples = this._viewConfigs\n            .filter(function (config) { return !inArray(matchedViewConfigs, config); })\n            .map(function (viewConfig) { return ({ uiView: undefined, viewConfig: viewConfig }); });\n        uiViewTuples.forEach(configureUIView);\n        var allTuples = uiViewTuples.concat(unmatchedConfigTuples);\n        this._listeners.forEach(function (cb) { return cb(allTuples); });\n        trace.traceViewSync(allTuples);\n    };\n    /**\n     * Registers a `ui-view` component\n     *\n     * When a `ui-view` component is created, it uses this method to register itself.\n     * After registration the [[sync]] method is used to ensure all `ui-view` are configured with the proper [[ViewConfig]].\n     *\n     * Note: the `ui-view` component uses the `ViewConfig` to determine what view should be loaded inside the `ui-view`,\n     * and what the view's state context is.\n     *\n     * Note: There is no corresponding `deregisterUIView`.\n     *       A `ui-view` should hang on to the return value of `registerUIView` and invoke it to deregister itself.\n     *\n     * @param uiView The metadata for a UIView\n     * @return a de-registration function used when the view is destroyed.\n     */\n    ViewService.prototype.registerUIView = function (uiView) {\n        trace.traceViewServiceUIViewEvent('-> Registering', uiView);\n        var uiViews = this._uiViews;\n        var fqnAndTypeMatches = function (uiv) { return uiv.fqn === uiView.fqn && uiv.$type === uiView.$type; };\n        if (uiViews.filter(fqnAndTypeMatches).length)\n            trace.traceViewServiceUIViewEvent('!!!! duplicate uiView named:', uiView);\n        uiViews.push(uiView);\n        this.sync();\n        return function () {\n            var idx = uiViews.indexOf(uiView);\n            if (idx === -1) {\n                trace.traceViewServiceUIViewEvent('Tried removing non-registered uiView', uiView);\n                return;\n            }\n            trace.traceViewServiceUIViewEvent('<- Deregistering', uiView);\n            removeFrom(uiViews)(uiView);\n        };\n    };\n    /**\n     * Returns the list of views currently available on the page, by fully-qualified name.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.available = function () {\n        return this._uiViews.map(prop('fqn'));\n    };\n    /**\n     * Returns the list of views on the page containing loaded content.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.active = function () {\n        return this._uiViews.filter(prop('$config')).map(prop('name'));\n    };\n    /**\n     * Given a ui-view and a ViewConfig, determines if they \"match\".\n     *\n     * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n     * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n     *\n     * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n     * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n     *\n     * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n     *\n     * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n     * - the ui-view's name matches the ViewConfig's target name\n     * - the ui-view's context matches the ViewConfig's anchor\n     *\n     * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n     * - There exists a parent ui-view where:\n     *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n     *    - the parent ui-view's context matches the ViewConfig's anchor\n     * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n     *\n     * Example:\n     *\n     * DOM:\n     * <ui-view>                        <!-- created in the root context (name: \"\") -->\n     *   <ui-view name=\"foo\">                <!-- created in the context named: \"A\"      -->\n     *     <ui-view>                    <!-- created in the context named: \"A.B\"    -->\n     *       <ui-view name=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n     *       </ui-view>\n     *     </ui-view>\n     *   </ui-view>\n     * </ui-view>\n     *\n     * uiViews: [\n     *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n     *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n     *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n     *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n     * ]\n     *\n     * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n     *\n     * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n     * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n     * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n     * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n     *\n     * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n     * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n     * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n     *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n     *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n     * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n     *   the tail of the ui-view's fqn \"default.bar\"\n     *\n     * @internalapi\n     */\n    ViewService.matches = function (uiViewsByFqn, uiView) { return function (viewConfig) {\n        // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n        if (uiView.$type !== viewConfig.viewDecl.$type)\n            return false;\n        // Split names apart from both viewConfig and uiView into segments\n        var vc = viewConfig.viewDecl;\n        var vcSegments = vc.$uiViewName.split('.');\n        var uivSegments = uiView.fqn.split('.');\n        // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n        // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n        if (!equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n            return false;\n        // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n        // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n        var negOffset = 1 - vcSegments.length || undefined;\n        var fqnToFirstSegment = uivSegments.slice(0, negOffset).join('.');\n        var uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n        return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n    }; };\n    return ViewService;\n}());\nexport { ViewService };\n//# sourceMappingURL=view.js.map","/** @publicapi @module core */ /** */\nimport { StateParams } from './params/stateParams';\nimport { Queue } from './common/queue';\n/**\n * Global router state\n *\n * This is where we hold the global mutable state such as current state, current\n * params, current transition, etc.\n */\nvar UIRouterGlobals = /** @class */ (function () {\n    function UIRouterGlobals() {\n        /**\n         * Current parameter values\n         *\n         * The parameter values from the latest successful transition\n         */\n        this.params = new StateParams();\n        /** @internalapi */\n        this.lastStartedTransitionId = -1;\n        /** @internalapi */\n        this.transitionHistory = new Queue([], 1);\n        /** @internalapi */\n        this.successfulTransitions = new Queue([], 1);\n    }\n    UIRouterGlobals.prototype.dispose = function () {\n        this.transitionHistory.clear();\n        this.successfulTransitions.clear();\n        this.transition = null;\n    };\n    return UIRouterGlobals;\n}());\nexport { UIRouterGlobals };\n//# sourceMappingURL=globals.js.map","import { ParamTypes } from '../params';\nimport { isDefined, isString } from '../common';\n/**\n * An API to customize the URL behavior and retrieve URL configuration\n *\n * This API is used to customize the behavior of the URL.\n * This includes optional trailing slashes ([[strictMode]]), case sensitivity ([[caseInsensitive]]),\n * and custom parameter encoding (custom [[type]]).\n *\n * It also has information about the location (url) configuration such as [[port]] and [[baseHref]].\n * This information can be used to build absolute URLs, such as\n * `https://example.com:443/basepath/state/substate?param1=a#hashvalue`;\n *\n * This API is a property of [[UrlService]] as [[UrlService.config]].\n */\nvar UrlConfig = /** @class */ (function () {\n    /** @hidden */ function UrlConfig(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this.paramTypes = new ParamTypes();\n        /** @hidden */ this._isCaseInsensitive = false;\n        /** @hidden */ this._isStrictMode = true;\n        /** @hidden */ this._defaultSquashPolicy = false;\n        /** @internalapi */ this.dispose = function () { return _this.paramTypes.dispose(); };\n        // Delegate these calls to the current LocationConfig implementation\n        /**\n         * Gets the base Href, e.g., `http://localhost/approot/`\n         *\n         * @return the application's base href\n         */\n        this.baseHref = function () { return _this.router.locationConfig.baseHref(); };\n        /**\n         * Gets or sets the hashPrefix\n         *\n         * This only applies when not running in [[html5Mode]] (pushstate mode)\n         *\n         * If the current url is `http://localhost/app#!/uirouter/path/#anchor`, it returns `!` which is the prefix for the \"hashbang\" portion.\n         *\n         * @return the hash prefix\n         */\n        this.hashPrefix = function (newprefix) { return _this.router.locationConfig.hashPrefix(newprefix); };\n        /**\n         * Gets the host, e.g., `localhost`\n         *\n         * @return the protocol\n         */\n        this.host = function () { return _this.router.locationConfig.host(); };\n        /**\n         * Returns true when running in pushstate mode\n         *\n         * @return true when running in html5 mode (pushstate mode).\n         */\n        this.html5Mode = function () { return _this.router.locationConfig.html5Mode(); };\n        /**\n         * Gets the port, e.g., `80`\n         *\n         * @return the port number\n         */\n        this.port = function () { return _this.router.locationConfig.port(); };\n        /**\n         * Gets the protocol, e.g., `http`\n         *\n         * @return the protocol\n         */\n        this.protocol = function () { return _this.router.locationConfig.protocol(); };\n    }\n    /**\n     * Defines whether URL matching should be case sensitive (the default behavior), or not.\n     *\n     * #### Example:\n     * ```js\n     * // Allow case insensitive url matches\n     * urlService.config.caseInsensitive(true);\n     * ```\n     *\n     * @param value `false` to match URL in a case sensitive manner; otherwise `true`;\n     * @returns the current value of caseInsensitive\n     */\n    UrlConfig.prototype.caseInsensitive = function (value) {\n        return (this._isCaseInsensitive = isDefined(value) ? value : this._isCaseInsensitive);\n    };\n    /**\n     * Sets the default behavior when generating or matching URLs with default parameter values.\n     *\n     * #### Example:\n     * ```js\n     * // Remove default parameter values from the url\n     * urlService.config.defaultSquashPolicy(true);\n     * ```\n     *\n     * @param value A string that defines the default parameter URL squashing behavior.\n     *    - `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n     *    - `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n     *      parameter is surrounded by slashes, squash (remove) one slash from the URL\n     *    - any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n     *      the parameter value from the URL and replace it with this string.\n     * @returns the current value of defaultSquashPolicy\n     */\n    UrlConfig.prototype.defaultSquashPolicy = function (value) {\n        if (isDefined(value) && value !== true && value !== false && !isString(value))\n            throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n        return (this._defaultSquashPolicy = isDefined(value) ? value : this._defaultSquashPolicy);\n    };\n    /**\n     * Defines whether URLs should match trailing slashes, or not (the default behavior).\n     *\n     * #### Example:\n     * ```js\n     * // Allow optional trailing slashes\n     * urlService.config.strictMode(false);\n     * ```\n     *\n     * @param value `false` to match trailing slashes in URLs, otherwise `true`.\n     * @returns the current value of strictMode\n     */\n    UrlConfig.prototype.strictMode = function (value) {\n        return (this._isStrictMode = isDefined(value) ? value : this._isStrictMode);\n    };\n    /**\n     * Creates and registers a custom [[ParamType]] object\n     *\n     * A custom parameter type can be used to generate URLs with typed parameters or custom encoding/decoding.\n     *\n     * #### Note: Register custom types *before using them* in a state definition.\n     *\n     * #### Example:\n     * ```js\n     * // Encode object parameter as JSON string\n     * urlService.config.type('myjson', {\n     *   encode: (obj) => JSON.stringify(obj),\n     *   decode: (str) => JSON.parse(str),\n     *   is: (val) => typeof(val) === 'object',\n     *   pattern: /[^/]+/,\n     *   equals: (a, b) => _.isEqual(a, b),\n     * });\n     * ```\n     *\n     * See [[ParamTypeDefinition]] for more examples\n     *\n     * @param name The type name.\n     * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n     * @param definitionFn A function that is injected before the app runtime starts.\n     *        The result of this function should be a [[ParamTypeDefinition]].\n     *        The result is merged into the existing `definition`.\n     *        See [[ParamType]] for information on the values accepted.\n     *\n     * @returns if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n     */\n    UrlConfig.prototype.type = function (name, definition, definitionFn) {\n        var type = this.paramTypes.type(name, definition, definitionFn);\n        return !isDefined(definition) ? type : this;\n    };\n    return UrlConfig;\n}());\nexport { UrlConfig };\n//# sourceMappingURL=urlConfig.js.map","import { extend, is, isString, pattern } from '../common';\nimport { UrlRules } from './urlRules';\nimport { UrlConfig } from './urlConfig';\nimport { TargetState } from '../state';\n/** API for URL management */\nvar UrlService = /** @class */ (function () {\n    /** @hidden */\n    function UrlService(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this.interceptDeferred = false;\n        /**\n         * The nested [[UrlRules]] API for managing URL rules and rewrites\n         *\n         * See: [[UrlRules]] for details\n         */\n        this.rules = new UrlRules(this.router);\n        /**\n         * The nested [[UrlConfig]] API to configure the URL and retrieve URL information\n         *\n         * See: [[UrlConfig]] for details\n         */\n        this.config = new UrlConfig(this.router);\n        // Delegate these calls to the current LocationServices implementation\n        /**\n         * Gets the current url, or updates the url\n         *\n         * ### Getting the current URL\n         *\n         * When no arguments are passed, returns the current URL.\n         * The URL is normalized using the internal [[path]]/[[search]]/[[hash]] values.\n         *\n         * For example, the URL may be stored in the hash ([[HashLocationServices]]) or\n         * have a base HREF prepended ([[PushStateLocationServices]]).\n         *\n         * The raw URL in the browser might be:\n         *\n         * ```\n         * http://mysite.com/somepath/index.html#/internal/path/123?param1=foo#anchor\n         * ```\n         *\n         * or\n         *\n         * ```\n         * http://mysite.com/basepath/internal/path/123?param1=foo#anchor\n         * ```\n         *\n         * then this method returns:\n         *\n         * ```\n         * /internal/path/123?param1=foo#anchor\n         * ```\n         *\n         *\n         * #### Example:\n         * ```js\n         * locationServices.url(); // \"/some/path?query=value#anchor\"\n         * ```\n         *\n         * ### Updating the URL\n         *\n         * When `newurl` arguments is provided, changes the URL to reflect `newurl`\n         *\n         * #### Example:\n         * ```js\n         * locationServices.url(\"/some/path?query=value#anchor\", true);\n         * ```\n         *\n         * @param newurl The new value for the URL.\n         *               This url should reflect only the new internal [[path]], [[search]], and [[hash]] values.\n         *               It should not include the protocol, site, port, or base path of an absolute HREF.\n         * @param replace When true, replaces the current history entry (instead of appending it) with this new url\n         * @param state The history's state object, i.e., pushState (if the LocationServices implementation supports it)\n         *\n         * @return the url (after potentially being processed)\n         */\n        this.url = function (newurl, replace, state) {\n            return _this.router.locationService.url(newurl, replace, state);\n        };\n        /**\n         * Gets the path part of the current url\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `/some/path`\n         *\n         * @return the path portion of the url\n         */\n        this.path = function () { return _this.router.locationService.path(); };\n        /**\n         * Gets the search part of the current url as an object\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `{ query: 'value' }`\n         *\n         * @return the search (query) portion of the url, as an object\n         */\n        this.search = function () { return _this.router.locationService.search(); };\n        /**\n         * Gets the hash part of the current url\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `anchor`\n         *\n         * @return the hash (anchor) portion of the url\n         */\n        this.hash = function () { return _this.router.locationService.hash(); };\n        /**\n         * @internalapi\n         *\n         * Registers a low level url change handler\n         *\n         * Note: Because this is a low level handler, it's not recommended for general use.\n         *\n         * #### Example:\n         * ```js\n         * let deregisterFn = locationServices.onChange((evt) => console.log(\"url change\", evt));\n         * ```\n         *\n         * @param callback a function that will be called when the url is changing\n         * @return a function that de-registers the callback\n         */\n        this.onChange = function (callback) { return _this.router.locationService.onChange(callback); };\n    }\n    /** @hidden */\n    UrlService.prototype.dispose = function () {\n        this.listen(false);\n        this.rules.dispose();\n    };\n    /**\n     * Gets the current URL parts\n     *\n     * This method returns the different parts of the current URL (the [[path]], [[search]], and [[hash]]) as a [[UrlParts]] object.\n     */\n    UrlService.prototype.parts = function () {\n        return { path: this.path(), search: this.search(), hash: this.hash() };\n    };\n    /**\n     * Activates the best rule for the current URL\n     *\n     * Checks the current URL for a matching [[UrlRule]], then invokes that rule's handler.\n     * This method is called internally any time the URL has changed.\n     *\n     * This effectively activates the state (or redirect, etc) which matches the current URL.\n     *\n     * #### Example:\n     * ```js\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   urlService.listen();\n     *   // Find the matching URL and invoke the handler.\n     *   urlService.sync();\n     * });\n     * ```\n     */\n    UrlService.prototype.sync = function (evt) {\n        if (evt && evt.defaultPrevented)\n            return;\n        var _a = this.router, urlService = _a.urlService, stateService = _a.stateService;\n        var url = { path: urlService.path(), search: urlService.search(), hash: urlService.hash() };\n        var best = this.match(url);\n        var applyResult = pattern([\n            [isString, function (newurl) { return urlService.url(newurl, true); }],\n            [TargetState.isDef, function (def) { return stateService.go(def.state, def.params, def.options); }],\n            [is(TargetState), function (target) { return stateService.go(target.state(), target.params(), target.options()); }],\n        ]);\n        applyResult(best && best.rule.handler(best.match, url, this.router));\n    };\n    /**\n     * Starts or stops listening for URL changes\n     *\n     * Call this sometime after calling [[deferIntercept]] to start monitoring the url.\n     * This causes UI-Router to start listening for changes to the URL, if it wasn't already listening.\n     *\n     * If called with `false`, UI-Router will stop listening (call listen(true) to start listening again).\n     *\n     * #### Example:\n     * ```js\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   // Start responding to URL changes\n     *   urlService.listen();\n     *   urlService.sync();\n     * });\n     * ```\n     *\n     * @param enabled `true` or `false` to start or stop listening to URL changes\n     */\n    UrlService.prototype.listen = function (enabled) {\n        var _this = this;\n        if (enabled === false) {\n            this._stopListeningFn && this._stopListeningFn();\n            delete this._stopListeningFn;\n        }\n        else {\n            return (this._stopListeningFn = this._stopListeningFn || this.router.urlService.onChange(function (evt) { return _this.sync(evt); }));\n        }\n    };\n    /**\n     * Disables monitoring of the URL.\n     *\n     * Call this method before UI-Router has bootstrapped.\n     * It will stop UI-Router from performing the initial url sync.\n     *\n     * This can be useful to perform some asynchronous initialization before the router starts.\n     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n     *\n     * #### Example:\n     * ```js\n     * // Prevent UI-Router from automatically intercepting URL changes when it starts;\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   urlService.listen();\n     *   urlService.sync();\n     * });\n     * ```\n     *\n     * @param defer Indicates whether to defer location change interception.\n     *        Passing no parameter is equivalent to `true`.\n     */\n    UrlService.prototype.deferIntercept = function (defer) {\n        if (defer === undefined)\n            defer = true;\n        this.interceptDeferred = defer;\n    };\n    /**\n     * Matches a URL\n     *\n     * Given a URL (as a [[UrlParts]] object), check all rules and determine the best matching rule.\n     * Return the result as a [[MatchResult]].\n     */\n    UrlService.prototype.match = function (url) {\n        var _this = this;\n        url = extend({ path: '', search: {}, hash: '' }, url);\n        var rules = this.rules.rules();\n        // Checks a single rule. Returns { rule: rule, match: match, weight: weight } if it matched, or undefined\n        var checkRule = function (rule) {\n            var match = rule.match(url, _this.router);\n            return match && { match: match, rule: rule, weight: rule.matchPriority(match) };\n        };\n        // The rules are pre-sorted.\n        // - Find the first matching rule.\n        // - Find any other matching rule that sorted *exactly the same*, according to `.sort()`.\n        // - Choose the rule with the highest match weight.\n        var best;\n        for (var i = 0; i < rules.length; i++) {\n            // Stop when there is a 'best' rule and the next rule sorts differently than it.\n            if (best && best.rule._group !== rules[i]._group)\n                break;\n            var current = checkRule(rules[i]);\n            // Pick the best MatchResult\n            best = !best || (current && current.weight > best.weight) ? current : best;\n        }\n        return best;\n    };\n    return UrlService;\n}());\nexport { UrlService };\n//# sourceMappingURL=urlService.js.map","/** @publicapi @module core */ /** */\nimport { UrlMatcherFactory } from './url/urlMatcherFactory';\nimport { UrlRouter } from './url/urlRouter';\nimport { TransitionService } from './transition/transitionService';\nimport { ViewService } from './view/view';\nimport { StateRegistry } from './state/stateRegistry';\nimport { StateService } from './state/stateService';\nimport { UIRouterGlobals } from './globals';\nimport { values, removeFrom } from './common/common';\nimport { isFunction } from './common/predicates';\nimport { UrlService } from './url/urlService';\nimport { trace } from './common/trace';\nimport { makeStub } from './common';\n/** @hidden */\nvar _routerInstance = 0;\n/** @hidden */\nvar locSvcFns = ['url', 'path', 'search', 'hash', 'onChange'];\n/** @hidden */\nvar locCfgFns = ['port', 'protocol', 'host', 'baseHref', 'html5Mode', 'hashPrefix'];\n/** @hidden */\nvar locationServiceStub = makeStub('LocationServices', locSvcFns);\n/** @hidden */\nvar locationConfigStub = makeStub('LocationConfig', locCfgFns);\n/**\n * The master class used to instantiate an instance of UI-Router.\n *\n * UI-Router (for each specific framework) will create an instance of this class during bootstrap.\n * This class instantiates and wires the UI-Router services together.\n *\n * After a new instance of the UIRouter class is created, it should be configured for your app.\n * For instance, app states should be registered with the [[UIRouter.stateRegistry]].\n *\n * ---\n *\n * Normally the framework code will bootstrap UI-Router.\n * If you are bootstrapping UIRouter manually, tell it to monitor the URL by calling\n * [[UrlService.listen]] then [[UrlService.sync]].\n */\nvar UIRouter = /** @class */ (function () {\n    /**\n     * Creates a new `UIRouter` object\n     *\n     * @param locationService a [[LocationServices]] implementation\n     * @param locationConfig a [[LocationConfig]] implementation\n     * @internalapi\n     */\n    function UIRouter(locationService, locationConfig) {\n        if (locationService === void 0) { locationService = locationServiceStub; }\n        if (locationConfig === void 0) { locationConfig = locationConfigStub; }\n        this.locationService = locationService;\n        this.locationConfig = locationConfig;\n        /** @hidden */ this.$id = _routerInstance++;\n        /** @hidden */ this._disposed = false;\n        /** @hidden */ this._disposables = [];\n        /** Provides trace information to the console */\n        this.trace = trace;\n        /** Provides services related to ui-view synchronization */\n        this.viewService = new ViewService(this);\n        /** Global router state */\n        this.globals = new UIRouterGlobals();\n        /** Provides services related to Transitions */\n        this.transitionService = new TransitionService(this);\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlMatcherFactory = new UrlMatcherFactory(this);\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlRouter = new UrlRouter(this);\n        /** Provides services related to the URL */\n        this.urlService = new UrlService(this);\n        /** Provides a registry for states, and related registration services */\n        this.stateRegistry = new StateRegistry(this);\n        /** Provides services related to states */\n        this.stateService = new StateService(this);\n        /** @hidden plugin instances are registered here */\n        this._plugins = {};\n        this.viewService._pluginapi._rootViewContext(this.stateRegistry.root());\n        this.globals.$current = this.stateRegistry.root();\n        this.globals.current = this.globals.$current.self;\n        this.disposable(this.globals);\n        this.disposable(this.stateService);\n        this.disposable(this.stateRegistry);\n        this.disposable(this.transitionService);\n        this.disposable(this.urlService);\n        this.disposable(locationService);\n        this.disposable(locationConfig);\n    }\n    /** Registers an object to be notified when the router is disposed */\n    UIRouter.prototype.disposable = function (disposable) {\n        this._disposables.push(disposable);\n    };\n    /**\n     * Disposes this router instance\n     *\n     * When called, clears resources retained by the router by calling `dispose(this)` on all\n     * registered [[disposable]] objects.\n     *\n     * Or, if a `disposable` object is provided, calls `dispose(this)` on that object only.\n     *\n     * @param disposable (optional) the disposable to dispose\n     */\n    UIRouter.prototype.dispose = function (disposable) {\n        var _this = this;\n        if (disposable && isFunction(disposable.dispose)) {\n            disposable.dispose(this);\n            return undefined;\n        }\n        this._disposed = true;\n        this._disposables.slice().forEach(function (d) {\n            try {\n                typeof d.dispose === 'function' && d.dispose(_this);\n                removeFrom(_this._disposables, d);\n            }\n            catch (ignored) { }\n        });\n    };\n    /**\n     * Adds a plugin to UI-Router\n     *\n     * This method adds a UI-Router Plugin.\n     * A plugin can enhance or change UI-Router behavior using any public API.\n     *\n     * #### Example:\n     * ```js\n     * import { MyCoolPlugin } from \"ui-router-cool-plugin\";\n     *\n     * var plugin = router.addPlugin(MyCoolPlugin);\n     * ```\n     *\n     * ### Plugin authoring\n     *\n     * A plugin is simply a class (or constructor function) which accepts a [[UIRouter]] instance and (optionally) an options object.\n     *\n     * The plugin can implement its functionality using any of the public APIs of [[UIRouter]].\n     * For example, it may configure router options or add a Transition Hook.\n     *\n     * The plugin can then be published as a separate module.\n     *\n     * #### Example:\n     * ```js\n     * export class MyAuthPlugin implements UIRouterPlugin {\n     *   constructor(router: UIRouter, options: any) {\n     *     this.name = \"MyAuthPlugin\";\n     *     let $transitions = router.transitionService;\n     *     let $state = router.stateService;\n     *\n     *     let authCriteria = {\n     *       to: (state) => state.data && state.data.requiresAuth\n     *     };\n     *\n     *     function authHook(transition: Transition) {\n     *       let authService = transition.injector().get('AuthService');\n     *       if (!authService.isAuthenticated()) {\n     *         return $state.target('login');\n     *       }\n     *     }\n     *\n     *     $transitions.onStart(authCriteria, authHook);\n     *   }\n     * }\n     * ```\n     *\n     * @param plugin one of:\n     *        - a plugin class which implements [[UIRouterPlugin]]\n     *        - a constructor function for a [[UIRouterPlugin]] which accepts a [[UIRouter]] instance\n     *        - a factory function which accepts a [[UIRouter]] instance and returns a [[UIRouterPlugin]] instance\n     * @param options options to pass to the plugin class/factory\n     * @returns the registered plugin instance\n     */\n    UIRouter.prototype.plugin = function (plugin, options) {\n        if (options === void 0) { options = {}; }\n        var pluginInstance = new plugin(this, options);\n        if (!pluginInstance.name)\n            throw new Error('Required property `name` missing on plugin: ' + pluginInstance);\n        this._disposables.push(pluginInstance);\n        return (this._plugins[pluginInstance.name] = pluginInstance);\n    };\n    UIRouter.prototype.getPlugin = function (pluginName) {\n        return pluginName ? this._plugins[pluginName] : values(this._plugins);\n    };\n    return UIRouter;\n}());\nexport { UIRouter };\n//# sourceMappingURL=router.js.map","/** @internalapi @module hooks */ /** */\nimport { Transition } from '../transition/transition';\nimport { UIRouter } from '../router';\nimport { Resolvable } from '../resolve';\nimport { inArray, uniqR, unnestR, values } from '../common';\nfunction addCoreResolvables(trans) {\n    trans.addResolvable(Resolvable.fromData(UIRouter, trans.router), '');\n    trans.addResolvable(Resolvable.fromData(Transition, trans), '');\n    trans.addResolvable(Resolvable.fromData('$transition$', trans), '');\n    trans.addResolvable(Resolvable.fromData('$stateParams', trans.params()), '');\n    trans.entering().forEach(function (state) {\n        trans.addResolvable(Resolvable.fromData('$state$', state), state);\n    });\n}\nexport var registerAddCoreResolvables = function (transitionService) {\n    return transitionService.onCreate({}, addCoreResolvables);\n};\nvar TRANSITION_TOKENS = ['$transition$', Transition];\nvar isTransition = inArray(TRANSITION_TOKENS);\n// References to Transition in the treeChanges pathnodes makes all\n// previous Transitions reachable in memory, causing a memory leak\n// This function removes resolves for '$transition$' and `Transition` from the treeChanges.\n// Do not use this on current transitions, only on old ones.\nexport var treeChangesCleanup = function (trans) {\n    var nodes = values(trans.treeChanges())\n        .reduce(unnestR, [])\n        .reduce(uniqR, []);\n    // If the resolvable is a Transition, return a new resolvable with null data\n    var replaceTransitionWithNull = function (r) {\n        return isTransition(r.token) ? Resolvable.fromData(r.token, null) : r;\n    };\n    nodes.forEach(function (node) {\n        node.resolvables = node.resolvables.map(replaceTransitionWithNull);\n    });\n};\n//# sourceMappingURL=coreResolvables.js.map","/** @internalapi @module hooks */ /** */\nimport { isString, isFunction } from '../common/predicates';\nimport { services } from '../common/coreservices';\nimport { TargetState } from '../state/targetState';\n/**\n * A [[TransitionHookFn]] that redirects to a different state or params\n *\n * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n *\n * See [[StateDeclaration.redirectTo]]\n */\nvar redirectToHook = function (trans) {\n    var redirect = trans.to().redirectTo;\n    if (!redirect)\n        return;\n    var $state = trans.router.stateService;\n    function handleResult(result) {\n        if (!result)\n            return;\n        if (result instanceof TargetState)\n            return result;\n        if (isString(result))\n            return $state.target(result, trans.params(), trans.options());\n        if (result['state'] || result['params'])\n            return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n    }\n    if (isFunction(redirect)) {\n        return services.$q.when(redirect(trans)).then(handleResult);\n    }\n    return handleResult(redirect);\n};\nexport var registerRedirectToHook = function (transitionService) {\n    return transitionService.onStart({ to: function (state) { return !!state.redirectTo; } }, redirectToHook);\n};\n//# sourceMappingURL=redirectTo.js.map","/**\n * A factory which creates an onEnter, onExit or onRetain transition hook function\n *\n * The returned function invokes the (for instance) state.onEnter hook when the\n * state is being entered.\n *\n * @hidden\n */\nfunction makeEnterExitRetainHook(hookName) {\n    return function (transition, state) {\n        var _state = state.$$state();\n        var hookFn = _state[hookName];\n        return hookFn(transition, state);\n    };\n}\n/**\n * The [[TransitionStateHookFn]] for onExit\n *\n * When the state is being exited, the state's .onExit function is invoked.\n *\n * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n *\n * See: [[IHookRegistry.onExit]]\n */\nvar onExitHook = makeEnterExitRetainHook('onExit');\nexport var registerOnExitHook = function (transitionService) {\n    return transitionService.onExit({ exiting: function (state) { return !!state.onExit; } }, onExitHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onRetain\n *\n * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n *\n * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n *\n * See: [[IHookRegistry.onRetain]]\n */\nvar onRetainHook = makeEnterExitRetainHook('onRetain');\nexport var registerOnRetainHook = function (transitionService) {\n    return transitionService.onRetain({ retained: function (state) { return !!state.onRetain; } }, onRetainHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onEnter\n *\n * When the state is being entered, the state's .onEnter function is invoked.\n *\n * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n *\n * See: [[IHookRegistry.onEnter]]\n */\nvar onEnterHook = makeEnterExitRetainHook('onEnter');\nexport var registerOnEnterHook = function (transitionService) {\n    return transitionService.onEnter({ entering: function (state) { return !!state.onEnter; } }, onEnterHook);\n};\n//# sourceMappingURL=onEnterExitRetain.js.map","/** @internalapi @module hooks */ /** */\nimport { noop } from '../common/common';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { val } from '../common/hof';\nexport var RESOLVE_HOOK_PRIORITY = 1000;\n/**\n * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n *\n * Registered using `transitionService.onStart({}, eagerResolvePath, { priority: 1000 });`\n *\n * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar eagerResolvePath = function (trans) {\n    return new ResolveContext(trans.treeChanges().to).resolvePath('EAGER', trans).then(noop);\n};\nexport var registerEagerResolvePath = function (transitionService) {\n    return transitionService.onStart({}, eagerResolvePath, { priority: RESOLVE_HOOK_PRIORITY });\n};\n/**\n * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n *\n * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState, { priority: 1000 });`\n *\n * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar lazyResolveState = function (trans, state) {\n    return new ResolveContext(trans.treeChanges().to)\n        .subContext(state.$$state())\n        .resolvePath('LAZY', trans)\n        .then(noop);\n};\nexport var registerLazyResolveState = function (transitionService) {\n    return transitionService.onEnter({ entering: val(true) }, lazyResolveState, { priority: RESOLVE_HOOK_PRIORITY });\n};\n/**\n * A [[TransitionHookFn]] which resolves any dynamically added (LAZY or EAGER) Resolvables.\n *\n * Registered using `transitionService.onFinish({}, eagerResolvePath, { priority: 1000 });`\n *\n * After all entering states have been entered, this hook resolves any remaining Resolvables.\n * These are typically dynamic resolves which were added by some Transition Hook using [[Transition.addResolvable]].\n *\n * See [[StateDeclaration.resolve]]\n */\nvar resolveRemaining = function (trans) {\n    return new ResolveContext(trans.treeChanges().to).resolvePath('LAZY', trans).then(noop);\n};\nexport var registerResolveRemaining = function (transitionService) {\n    return transitionService.onFinish({}, resolveRemaining, { priority: RESOLVE_HOOK_PRIORITY });\n};\n//# sourceMappingURL=resolve.js.map","/** @internalapi @module hooks */ /** */\nimport { noop } from '../common/common';\nimport { services } from '../common/coreservices';\n/**\n * A [[TransitionHookFn]] which waits for the views to load\n *\n * Registered using `transitionService.onStart({}, loadEnteringViews);`\n *\n * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n * In angular 1, this includes loading the templates.\n */\nvar loadEnteringViews = function (transition) {\n    var $q = services.$q;\n    var enteringViews = transition.views('entering');\n    if (!enteringViews.length)\n        return;\n    return $q.all(enteringViews.map(function (view) { return $q.when(view.load()); })).then(noop);\n};\nexport var registerLoadEnteringViews = function (transitionService) {\n    return transitionService.onFinish({}, loadEnteringViews);\n};\n/**\n * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n *\n * Registered using `transitionService.onSuccess({}, activateViews);`\n *\n * After a transition is complete, this hook deactivates the old views from the previous state,\n * and activates the new views from the destination state.\n *\n * See [[ViewService]]\n */\nvar activateViews = function (transition) {\n    var enteringViews = transition.views('entering');\n    var exitingViews = transition.views('exiting');\n    if (!enteringViews.length && !exitingViews.length)\n        return;\n    var $view = transition.router.viewService;\n    exitingViews.forEach(function (vc) { return $view.deactivateViewConfig(vc); });\n    enteringViews.forEach(function (vc) { return $view.activateViewConfig(vc); });\n    $view.sync();\n};\nexport var registerActivateViews = function (transitionService) {\n    return transitionService.onSuccess({}, activateViews);\n};\n//# sourceMappingURL=views.js.map","import { copy } from '../common/common';\n/**\n * A [[TransitionHookFn]] which updates global UI-Router state\n *\n * Registered using `transitionService.onBefore({}, updateGlobalState);`\n *\n * Before a [[Transition]] starts, updates the global value of \"the current transition\" ([[Globals.transition]]).\n * After a successful [[Transition]], updates the global values of \"the current state\"\n * ([[Globals.current]] and [[Globals.$current]]) and \"the current param values\" ([[Globals.params]]).\n *\n * See also the deprecated properties:\n * [[StateService.transition]], [[StateService.current]], [[StateService.params]]\n */\nvar updateGlobalState = function (trans) {\n    var globals = trans.router.globals;\n    var transitionSuccessful = function () {\n        globals.successfulTransitions.enqueue(trans);\n        globals.$current = trans.$to();\n        globals.current = globals.$current.self;\n        copy(trans.params(), globals.params);\n    };\n    var clearCurrentTransition = function () {\n        // Do not clear globals.transition if a different transition has started in the meantime\n        if (globals.transition === trans)\n            globals.transition = null;\n    };\n    trans.onSuccess({}, transitionSuccessful, { priority: 10000 });\n    trans.promise.then(clearCurrentTransition, clearCurrentTransition);\n};\nexport var registerUpdateGlobalState = function (transitionService) {\n    return transitionService.onCreate({}, updateGlobalState);\n};\n//# sourceMappingURL=updateGlobals.js.map","/**\n * A [[TransitionHookFn]] which updates the URL after a successful transition\n *\n * Registered using `transitionService.onSuccess({}, updateUrl);`\n */\nvar updateUrl = function (transition) {\n    var options = transition.options();\n    var $state = transition.router.stateService;\n    var $urlRouter = transition.router.urlRouter;\n    // Dont update the url in these situations:\n    // The transition was triggered by a URL sync (options.source === 'url')\n    // The user doesn't want the url to update (options.location === false)\n    // The destination state, and all parents have no navigable url\n    if (options.source !== 'url' && options.location && $state.$current.navigable) {\n        var urlOptions = { replace: options.location === 'replace' };\n        $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n    }\n    $urlRouter.update(true);\n};\nexport var registerUpdateUrl = function (transitionService) {\n    return transitionService.onSuccess({}, updateUrl, { priority: 9999 });\n};\n//# sourceMappingURL=url.js.map","import { services } from '../common/coreservices';\n/**\n * A [[TransitionHookFn]] that performs lazy loading\n *\n * When entering a state \"abc\" which has a `lazyLoad` function defined:\n * - Invoke the `lazyLoad` function (unless it is already in process)\n *   - Flag the hook function as \"in process\"\n *   - The function should return a promise (that resolves when lazy loading is complete)\n * - Wait for the promise to settle\n *   - If the promise resolves to a [[LazyLoadResult]], then register those states\n *   - Flag the hook function as \"not in process\"\n * - If the hook was successful\n *   - Remove the `lazyLoad` function from the state declaration\n * - If all the hooks were successful\n *   - Retry the transition (by returning a TargetState)\n *\n * ```\n * .state('abc', {\n *   component: 'fooComponent',\n *   lazyLoad: () => System.import('./fooComponent')\n *   });\n * ```\n *\n * See [[StateDeclaration.lazyLoad]]\n */\nvar lazyLoadHook = function (transition) {\n    var router = transition.router;\n    function retryTransition() {\n        if (transition.originalTransition().options().source !== 'url') {\n            // The original transition was not triggered via url sync\n            // The lazy state should be loaded now, so re-try the original transition\n            var orig = transition.targetState();\n            return router.stateService.target(orig.identifier(), orig.params(), orig.options());\n        }\n        // The original transition was triggered via url sync\n        // Run the URL rules and find the best match\n        var $url = router.urlService;\n        var result = $url.match($url.parts());\n        var rule = result && result.rule;\n        // If the best match is a state, redirect the transition (instead\n        // of calling sync() which supersedes the current transition)\n        if (rule && rule.type === 'STATE') {\n            var state = rule.state;\n            var params = result.match;\n            return router.stateService.target(state, params, transition.options());\n        }\n        // No matching state found, so let .sync() choose the best non-state match/otherwise\n        router.urlService.sync();\n    }\n    var promises = transition\n        .entering()\n        .filter(function (state) { return !!state.$$state().lazyLoad; })\n        .map(function (state) { return lazyLoadState(transition, state); });\n    return services.$q.all(promises).then(retryTransition);\n};\nexport var registerLazyLoadHook = function (transitionService) {\n    return transitionService.onBefore({ entering: function (state) { return !!state.lazyLoad; } }, lazyLoadHook);\n};\n/**\n * Invokes a state's lazy load function\n *\n * @param transition a Transition context\n * @param state the state to lazy load\n * @returns A promise for the lazy load result\n */\nexport function lazyLoadState(transition, state) {\n    var lazyLoadFn = state.$$state().lazyLoad;\n    // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n    var promise = lazyLoadFn['_promise'];\n    if (!promise) {\n        var success = function (result) {\n            delete state.lazyLoad;\n            delete state.$$state().lazyLoad;\n            delete lazyLoadFn['_promise'];\n            return result;\n        };\n        var error = function (err) {\n            delete lazyLoadFn['_promise'];\n            return services.$q.reject(err);\n        };\n        promise = lazyLoadFn['_promise'] = services.$q\n            .when(lazyLoadFn(transition, state))\n            .then(updateStateRegistry)\n            .then(success, error);\n    }\n    /** Register any lazy loaded state definitions */\n    function updateStateRegistry(result) {\n        if (result && Array.isArray(result.states)) {\n            result.states.forEach(function (_state) { return transition.router.stateRegistry.register(_state); });\n        }\n        return result;\n    }\n    return promise;\n}\n//# sourceMappingURL=lazyLoad.js.map","import { TransitionHook } from './transitionHook';\n/**\n * This class defines a type of hook, such as `onBefore` or `onEnter`.\n * Plugins can define custom hook types, such as sticky states does for `onInactive`.\n *\n * @interalapi\n */\nvar TransitionEventType = /** @class */ (function () {\n    /* tslint:disable:no-inferrable-types */\n    function TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        this.name = name;\n        this.hookPhase = hookPhase;\n        this.hookOrder = hookOrder;\n        this.criteriaMatchPath = criteriaMatchPath;\n        this.reverseSort = reverseSort;\n        this.getResultHandler = getResultHandler;\n        this.getErrorHandler = getErrorHandler;\n        this.synchronous = synchronous;\n    }\n    return TransitionEventType;\n}());\nexport { TransitionEventType };\n//# sourceMappingURL=transitionEventType.js.map","/** @internalapi @module hooks */ /** */\nimport { trace } from '../common/trace';\nimport { Rejection } from '../transition/rejectFactory';\n/**\n * A [[TransitionHookFn]] that skips a transition if it should be ignored\n *\n * This hook is invoked at the end of the onBefore phase.\n *\n * If the transition should be ignored (because no parameter or states changed)\n * then the transition is ignored and not processed.\n */\nfunction ignoredHook(trans) {\n    var ignoredReason = trans._ignoredReason();\n    if (!ignoredReason)\n        return;\n    trace.traceTransitionIgnored(trans);\n    var pending = trans.router.globals.transition;\n    // The user clicked a link going back to the *current state* ('A')\n    // However, there is also a pending transition in flight (to 'B')\n    // Abort the transition to 'B' because the user now wants to be back at 'A'.\n    if (ignoredReason === 'SameAsCurrent' && pending) {\n        pending.abort();\n    }\n    return Rejection.ignored().toPromise();\n}\nexport var registerIgnoredTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, ignoredHook, { priority: -9999 });\n};\n//# sourceMappingURL=ignoredTransition.js.map","/** @internalapi @module hooks */ /** */\n/**\n * A [[TransitionHookFn]] that rejects the Transition if it is invalid\n *\n * This hook is invoked at the end of the onBefore phase.\n * If the transition is invalid (for example, param values do not validate)\n * then the transition is rejected.\n */\nfunction invalidTransitionHook(trans) {\n    if (!trans.valid()) {\n        throw new Error(trans.error().toString());\n    }\n}\nexport var registerInvalidTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, invalidTransitionHook, { priority: -10000 });\n};\n//# sourceMappingURL=invalidTransition.js.map","/** @publicapi @module transition */ /** */\nimport { TransitionHookScope, TransitionHookPhase, } from './interface';\nimport { Transition } from './transition';\nimport { makeEvent } from './hookRegistry';\nimport { registerAddCoreResolvables, treeChangesCleanup } from '../hooks/coreResolvables';\nimport { registerRedirectToHook } from '../hooks/redirectTo';\nimport { registerOnExitHook, registerOnRetainHook, registerOnEnterHook } from '../hooks/onEnterExitRetain';\nimport { registerEagerResolvePath, registerLazyResolveState, registerResolveRemaining } from '../hooks/resolve';\nimport { registerLoadEnteringViews, registerActivateViews } from '../hooks/views';\nimport { registerUpdateGlobalState } from '../hooks/updateGlobals';\nimport { registerUpdateUrl } from '../hooks/url';\nimport { registerLazyLoadHook } from '../hooks/lazyLoad';\nimport { TransitionEventType } from './transitionEventType';\nimport { TransitionHook } from './transitionHook';\nimport { isDefined } from '../common/predicates';\nimport { removeFrom, values, createProxyFunctions } from '../common/common';\nimport { val } from '../common/hof';\nimport { registerIgnoredTransitionHook } from '../hooks/ignoredTransition';\nimport { registerInvalidTransitionHook } from '../hooks/invalidTransition';\n/**\n * The default [[Transition]] options.\n *\n * Include this object when applying custom defaults:\n * let reloadOpts = { reload: true, notify: true }\n * let options = defaults(theirOpts, customDefaults, defaultOptions);\n */\nexport var defaultTransOpts = {\n    location: true,\n    relative: null,\n    inherit: false,\n    notify: true,\n    reload: false,\n    custom: {},\n    current: function () { return null; },\n    source: 'unknown',\n};\n/**\n * This class provides services related to Transitions.\n *\n * - Most importantly, it allows global Transition Hooks to be registered.\n * - It allows the default transition error handler to be set.\n * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n *\n * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n */\nvar TransitionService = /** @class */ (function () {\n    /** @hidden */\n    function TransitionService(_router) {\n        /** @hidden */\n        this._transitionCount = 0;\n        /** @hidden The transition hook types, such as `onEnter`, `onStart`, etc */\n        this._eventTypes = [];\n        /** @hidden The registered transition hooks */\n        this._registeredHooks = {};\n        /** @hidden The  paths on a criteria object */\n        this._criteriaPaths = {};\n        this._router = _router;\n        this.$view = _router.viewService;\n        this._deregisterHookFns = {};\n        this._pluginapi = (createProxyFunctions(val(this), {}, val(this), [\n            '_definePathType',\n            '_defineEvent',\n            '_getPathTypes',\n            '_getEvents',\n            'getHooks',\n        ]));\n        this._defineCorePaths();\n        this._defineCoreEvents();\n        this._registerCoreTransitionHooks();\n        _router.globals.successfulTransitions.onEvict(treeChangesCleanup);\n    }\n    /**\n     * Registers a [[TransitionHookFn]], called *while a transition is being constructed*.\n     *\n     * Registers a transition lifecycle hook, which is invoked during transition construction.\n     *\n     * This low level hook should only be used by plugins.\n     * This can be a useful time for plugins to add resolves or mutate the transition as needed.\n     * The Sticky States plugin uses this hook to modify the treechanges.\n     *\n     * ### Lifecycle\n     *\n     * `onCreate` hooks are invoked *while a transition is being constructed*.\n     *\n     * ### Return value\n     *\n     * The hook's return value is ignored\n     *\n     * @internalapi\n     * @param criteria defines which Transitions the Hook should be invoked for.\n     * @param callback the hook function which will be invoked.\n     * @param options the registration options\n     * @returns a function which deregisters the hook.\n     */\n    TransitionService.prototype.onCreate = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onBefore = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onStart = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onExit = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onRetain = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onEnter = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onFinish = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onSuccess = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onError = function (criteria, callback, options) {\n        return;\n    };\n    /**\n     * dispose\n     * @internalapi\n     */\n    TransitionService.prototype.dispose = function (router) {\n        values(this._registeredHooks).forEach(function (hooksArray) {\n            return hooksArray.forEach(function (hook) {\n                hook._deregistered = true;\n                removeFrom(hooksArray, hook);\n            });\n        });\n    };\n    /**\n     * Creates a new [[Transition]] object\n     *\n     * This is a factory function for creating new Transition objects.\n     * It is used internally by the [[StateService]] and should generally not be called by application code.\n     *\n     * @param fromPath the path to the current state (the from state)\n     * @param targetState the target state (destination)\n     * @returns a Transition\n     */\n    TransitionService.prototype.create = function (fromPath, targetState) {\n        return new Transition(fromPath, targetState, this._router);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCoreEvents = function () {\n        var Phase = TransitionHookPhase;\n        var TH = TransitionHook;\n        var paths = this._criteriaPaths;\n        var NORMAL_SORT = false, REVERSE_SORT = true;\n        var SYNCHRONOUS = true;\n        this._defineEvent('onCreate', Phase.CREATE, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.THROW_ERROR, SYNCHRONOUS);\n        this._defineEvent('onBefore', Phase.BEFORE, 0, paths.to);\n        this._defineEvent('onStart', Phase.RUN, 0, paths.to);\n        this._defineEvent('onExit', Phase.RUN, 100, paths.exiting, REVERSE_SORT);\n        this._defineEvent('onRetain', Phase.RUN, 200, paths.retained);\n        this._defineEvent('onEnter', Phase.RUN, 300, paths.entering);\n        this._defineEvent('onFinish', Phase.RUN, 400, paths.to);\n        this._defineEvent('onSuccess', Phase.SUCCESS, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n        this._defineEvent('onError', Phase.ERROR, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCorePaths = function () {\n        var STATE = TransitionHookScope.STATE, TRANSITION = TransitionHookScope.TRANSITION;\n        this._definePathType('to', TRANSITION);\n        this._definePathType('from', TRANSITION);\n        this._definePathType('exiting', STATE);\n        this._definePathType('retained', STATE);\n        this._definePathType('entering', STATE);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineEvent = function (name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        var eventType = new TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous);\n        this._eventTypes.push(eventType);\n        makeEvent(this, this, eventType);\n    };\n    /** @hidden */\n    // tslint:disable-next-line\n    TransitionService.prototype._getEvents = function (phase) {\n        var transitionHookTypes = isDefined(phase)\n            ? this._eventTypes.filter(function (type) { return type.hookPhase === phase; })\n            : this._eventTypes.slice();\n        return transitionHookTypes.sort(function (l, r) {\n            var cmpByPhase = l.hookPhase - r.hookPhase;\n            return cmpByPhase === 0 ? l.hookOrder - r.hookOrder : cmpByPhase;\n        });\n    };\n    /**\n     * Adds a Path to be used as a criterion against a TreeChanges path\n     *\n     * For example: the `exiting` path in [[HookMatchCriteria]] is a STATE scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('exiting', TransitionHookScope.STATE)`\n     * Each state in the exiting path is checked against the criteria and returned as part of the match.\n     *\n     * Another example: the `to` path in [[HookMatchCriteria]] is a TRANSITION scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('to', TransitionHookScope.TRANSITION)`\n     * Only the tail of the `to` path is checked against the criteria and returned as part of the match.\n     *\n     * @hidden\n     */\n    TransitionService.prototype._definePathType = function (name, hookScope) {\n        this._criteriaPaths[name] = { name: name, scope: hookScope };\n    };\n    /** * @hidden */\n    // tslint:disable-next-line\n    TransitionService.prototype._getPathTypes = function () {\n        return this._criteriaPaths;\n    };\n    /** @hidden */\n    TransitionService.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    /** @hidden */\n    TransitionService.prototype._registerCoreTransitionHooks = function () {\n        var fns = this._deregisterHookFns;\n        fns.addCoreResolves = registerAddCoreResolvables(this);\n        fns.ignored = registerIgnoredTransitionHook(this);\n        fns.invalid = registerInvalidTransitionHook(this);\n        // Wire up redirectTo hook\n        fns.redirectTo = registerRedirectToHook(this);\n        // Wire up onExit/Retain/Enter state hooks\n        fns.onExit = registerOnExitHook(this);\n        fns.onRetain = registerOnRetainHook(this);\n        fns.onEnter = registerOnEnterHook(this);\n        // Wire up Resolve hooks\n        fns.eagerResolve = registerEagerResolvePath(this);\n        fns.lazyResolve = registerLazyResolveState(this);\n        fns.resolveAll = registerResolveRemaining(this);\n        // Wire up the View management hooks\n        fns.loadViews = registerLoadEnteringViews(this);\n        fns.activateViews = registerActivateViews(this);\n        // Updates global state after a transition\n        fns.updateGlobals = registerUpdateGlobalState(this);\n        // After globals.current is updated at priority: 10000\n        fns.updateUrl = registerUpdateUrl(this);\n        // Lazy load state trees\n        fns.lazyLoad = registerLazyLoadHook(this);\n    };\n    return TransitionService;\n}());\nexport { TransitionService };\n//# sourceMappingURL=transitionService.js.map","/** @publicapi @module state */ /** */\nimport { createProxyFunctions, defaults, extend, inArray, noop, removeFrom, silenceUncaughtInPromise, silentRejection, } from '../common/common';\nimport { isDefined, isObject, isString } from '../common/predicates';\nimport { Queue } from '../common/queue';\nimport { services } from '../common/coreservices';\nimport { PathUtils } from '../path/pathUtils';\nimport { PathNode } from '../path/pathNode';\nimport { defaultTransOpts } from '../transition/transitionService';\nimport { Rejection, RejectType } from '../transition/rejectFactory';\nimport { TargetState } from './targetState';\nimport { Param } from '../params/param';\nimport { Glob } from '../common/glob';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { lazyLoadState } from '../hooks/lazyLoad';\nimport { not, val } from '../common/hof';\n/**\n * Provides state related service functions\n *\n * This class provides services related to ui-router states.\n * An instance of this class is located on the global [[UIRouter]] object.\n */\nvar StateService = /** @class */ (function () {\n    /** @internalapi */\n    function StateService(/** @hidden */ router) {\n        this.router = router;\n        /** @internalapi */\n        this.invalidCallbacks = [];\n        /** @hidden */\n        this._defaultErrorHandler = function $defaultErrorHandler($error$) {\n            if ($error$ instanceof Error && $error$.stack) {\n                console.error($error$);\n                console.error($error$.stack);\n            }\n            else if ($error$ instanceof Rejection) {\n                console.error($error$.toString());\n                if ($error$.detail && $error$.detail.stack)\n                    console.error($error$.detail.stack);\n            }\n            else {\n                console.error($error$);\n            }\n        };\n        var getters = ['current', '$current', 'params', 'transition'];\n        var boundFns = Object.keys(StateService.prototype).filter(not(inArray(getters)));\n        createProxyFunctions(val(StateService.prototype), this, val(this), boundFns);\n    }\n    Object.defineProperty(StateService.prototype, \"transition\", {\n        /**\n         * The [[Transition]] currently in progress (or null)\n         *\n         * This is a passthrough through to [[UIRouterGlobals.transition]]\n         */\n        get: function () {\n            return this.router.globals.transition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"params\", {\n        /**\n         * The latest successful state parameters\n         *\n         * This is a passthrough through to [[UIRouterGlobals.params]]\n         */\n        get: function () {\n            return this.router.globals.params;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"current\", {\n        /**\n         * The current [[StateDeclaration]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.current]]\n         */\n        get: function () {\n            return this.router.globals.current;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"$current\", {\n        /**\n         * The current [[StateObject]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.$current]]\n         */\n        get: function () {\n            return this.router.globals.$current;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internalapi */\n    StateService.prototype.dispose = function () {\n        this.defaultErrorHandler(noop);\n        this.invalidCallbacks = [];\n    };\n    /**\n     * Handler for when [[transitionTo]] is called with an invalid state.\n     *\n     * Invokes the [[onInvalid]] callbacks, in natural order.\n     * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n     * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n     *\n     * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n     *\n     * @internalapi\n     */\n    StateService.prototype._handleInvalidTargetState = function (fromPath, toState) {\n        var _this = this;\n        var fromState = PathUtils.makeTargetState(this.router.stateRegistry, fromPath);\n        var globals = this.router.globals;\n        var latestThing = function () { return globals.transitionHistory.peekTail(); };\n        var latest = latestThing();\n        var callbackQueue = new Queue(this.invalidCallbacks.slice());\n        var injector = new ResolveContext(fromPath).injector();\n        var checkForRedirect = function (result) {\n            if (!(result instanceof TargetState)) {\n                return;\n            }\n            var target = result;\n            // Recreate the TargetState, in case the state is now defined.\n            target = _this.target(target.identifier(), target.params(), target.options());\n            if (!target.valid()) {\n                return Rejection.invalid(target.error()).toPromise();\n            }\n            if (latestThing() !== latest) {\n                return Rejection.superseded().toPromise();\n            }\n            return _this.transitionTo(target.identifier(), target.params(), target.options());\n        };\n        function invokeNextCallback() {\n            var nextCallback = callbackQueue.dequeue();\n            if (nextCallback === undefined)\n                return Rejection.invalid(toState.error()).toPromise();\n            var callbackResult = services.$q.when(nextCallback(toState, fromState, injector));\n            return callbackResult.then(checkForRedirect).then(function (result) { return result || invokeNextCallback(); });\n        }\n        return invokeNextCallback();\n    };\n    /**\n     * Registers an Invalid State handler\n     *\n     * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n     * has been called with an invalid state reference parameter\n     *\n     * Example:\n     * ```js\n     * stateService.onInvalid(function(to, from, injector) {\n     *   if (to.name() === 'foo') {\n     *     let lazyLoader = injector.get('LazyLoadService');\n     *     return lazyLoader.load('foo')\n     *         .then(() => stateService.target('foo'));\n     *   }\n     * });\n     * ```\n     *\n     * @param {function} callback invoked when the toState is invalid\n     *   This function receives the (invalid) toState, the fromState, and an injector.\n     *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n     *   If one is returned, it is treated as a redirect.\n     *\n     * @returns a function which deregisters the callback\n     */\n    StateService.prototype.onInvalid = function (callback) {\n        this.invalidCallbacks.push(callback);\n        return function deregisterListener() {\n            removeFrom(this.invalidCallbacks)(callback);\n        }.bind(this);\n    };\n    /**\n     * Reloads the current state\n     *\n     * A method that force reloads the current state, or a partial state hierarchy.\n     * All resolves are re-resolved, and components reinstantiated.\n     *\n     * #### Example:\n     * ```js\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * ```\n     *\n     * Note: `reload()` is just an alias for:\n     *\n     * ```js\n     * $state.transitionTo($state.current, $state.params, {\n     *   reload: true, inherit: false\n     * });\n     * ```\n     *\n     * @param reloadState A state name or a state object.\n     *    If present, this state and all its children will be reloaded, but ancestors will not reload.\n     *\n     * #### Example:\n     * ```js\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n     * //and current state is 'contacts.detail.item'\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * ```\n     *\n     * @returns A promise representing the state of the new transition. See [[StateService.go]]\n     */\n    StateService.prototype.reload = function (reloadState) {\n        return this.transitionTo(this.current, this.params, {\n            reload: isDefined(reloadState) ? reloadState : true,\n            inherit: false,\n            notify: false,\n        });\n    };\n    /**\n     * Transition to a different state and/or parameters\n     *\n     * Convenience method for transitioning to a new state.\n     *\n     * `$state.go` calls `$state.transitionTo` internally but automatically sets options to\n     * `{ location: true, inherit: true, relative: router.globals.$current, notify: true }`.\n     * This allows you to use either an absolute or relative `to` argument (because of `relative: router.globals.$current`).\n     * It also allows you to specify * only the parameters you'd like to update, while letting unspecified parameters\n     * inherit from the current parameter values (because of `inherit: true`).\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to Absolute state name, state object, or relative state path (relative to current state).\n     *\n     * Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to the parent state\n     * - `$state.go('^.sibling')` - if current state is `home.child`, will go to the `home.sibling` state\n     * - `$state.go('.child.grandchild')` - if current state is home, will go to the `home.child.grandchild` state\n     *\n     * @param params A map of the parameters that will be sent to the state, will populate $stateParams.\n     *\n     *    Any parameters that are not specified will be inherited from current parameter values (because of `inherit: true`).\n     *    This allows, for example, going to a sibling state that shares parameters defined by a parent state.\n     *\n     * @param options Transition options\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     */\n    StateService.prototype.go = function (to, params, options) {\n        var defautGoOpts = { relative: this.$current, inherit: true };\n        var transOpts = defaults(options, defautGoOpts, defaultTransOpts);\n        return this.transitionTo(to, params, transOpts);\n    };\n    /**\n     * Creates a [[TargetState]]\n     *\n     * This is a factory method for creating a TargetState\n     *\n     * This may be returned from a Transition Hook to redirect a transition, for example.\n     */\n    StateService.prototype.target = function (identifier, params, options) {\n        if (options === void 0) { options = {}; }\n        // If we're reloading, find the state object to reload from\n        if (isObject(options.reload) && !options.reload.name)\n            throw new Error('Invalid reload state object');\n        var reg = this.router.stateRegistry;\n        options.reloadState =\n            options.reload === true ? reg.root() : reg.matcher.find(options.reload, options.relative);\n        if (options.reload && !options.reloadState)\n            throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        return new TargetState(this.router.stateRegistry, identifier, params, options);\n    };\n    StateService.prototype.getCurrentPath = function () {\n        var _this = this;\n        var globals = this.router.globals;\n        var latestSuccess = globals.successfulTransitions.peekTail();\n        var rootPath = function () { return [new PathNode(_this.router.stateRegistry.root())]; };\n        return latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n    };\n    /**\n     * Low-level method for transitioning to a new state.\n     *\n     * The [[go]] method (which uses `transitionTo` internally) is recommended in most situations.\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to State name or state object.\n     * @param toParams A map of the parameters that will be sent to the state,\n     *      will populate $stateParams.\n     * @param options Transition options\n     *\n     * @returns A promise representing the state of the new transition. See [[go]]\n     */\n    StateService.prototype.transitionTo = function (to, toParams, options) {\n        var _this = this;\n        if (toParams === void 0) { toParams = {}; }\n        if (options === void 0) { options = {}; }\n        var router = this.router;\n        var globals = router.globals;\n        options = defaults(options, defaultTransOpts);\n        var getCurrent = function () { return globals.transition; };\n        options = extend(options, { current: getCurrent });\n        var ref = this.target(to, toParams, options);\n        var currentPath = this.getCurrentPath();\n        if (!ref.exists())\n            return this._handleInvalidTargetState(currentPath, ref);\n        if (!ref.valid())\n            return silentRejection(ref.error());\n        /**\n         * Special handling for Ignored, Aborted, and Redirected transitions\n         *\n         * The semantics for the transition.run() promise and the StateService.transitionTo()\n         * promise differ. For instance, the run() promise may be rejected because it was\n         * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n         * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n         * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n         */\n        var rejectedTransitionHandler = function (trans) { return function (error) {\n            if (error instanceof Rejection) {\n                var isLatest = router.globals.lastStartedTransitionId <= trans.$id;\n                if (error.type === RejectType.IGNORED) {\n                    isLatest && router.urlRouter.update();\n                    // Consider ignored `Transition.run()` as a successful `transitionTo`\n                    return services.$q.when(globals.current);\n                }\n                var detail = error.detail;\n                if (error.type === RejectType.SUPERSEDED && error.redirected && detail instanceof TargetState) {\n                    // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n                    // by returning the promise for the new (redirect) `Transition.run()`.\n                    var redirect = trans.redirect(detail);\n                    return redirect.run().catch(rejectedTransitionHandler(redirect));\n                }\n                if (error.type === RejectType.ABORTED) {\n                    isLatest && router.urlRouter.update();\n                    return services.$q.reject(error);\n                }\n            }\n            var errorHandler = _this.defaultErrorHandler();\n            errorHandler(error);\n            return services.$q.reject(error);\n        }; };\n        var transition = this.router.transitionService.create(currentPath, ref);\n        var transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n        silenceUncaughtInPromise(transitionToPromise); // issue #2676\n        // Return a promise for the transition, which also has the transition object on it.\n        return extend(transitionToPromise, { transition: transition });\n    };\n    /**\n     * Checks if the current state *is* the provided state\n     *\n     * Similar to [[includes]] but only checks for the full state name.\n     * If params is supplied then it will be tested for strict equality against the current\n     * active params object, so all params must match with none missing and no extras.\n     *\n     * #### Example:\n     * ```js\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     * ```\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * ```html\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * ```\n     *\n     * @param stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns Returns true if it is the state.\n     */\n    StateService.prototype.is = function (stateOrName, params, options) {\n        options = defaults(options, { relative: this.$current });\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!isDefined(state))\n            return undefined;\n        if (this.$current !== state)\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return Param.equals(schema, Param.values(schema, params), this.params);\n    };\n    /**\n     * Checks if the current state *includes* the provided state\n     *\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * #### Example when `$state.$current.name === 'contacts.details.item'`\n     * ```js\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     * ```\n     *\n     * #### Glob Examples when `* $state.$current.name === 'contacts.details.item.url'`:\n     * ```js\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * ```\n     *\n     * @param stateOrName A partial name, relative name, glob pattern,\n     *   or state object to be searched for within the current state name.\n     * @param params A param object, e.g. `{sectionId: section.id}`,\n     *   that you'd like to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    StateService.prototype.includes = function (stateOrName, params, options) {\n        options = defaults(options, { relative: this.$current });\n        var glob = isString(stateOrName) && Glob.fromString(stateOrName);\n        if (glob) {\n            if (!glob.matches(this.$current.name))\n                return false;\n            stateOrName = this.$current.name;\n        }\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n        if (!isDefined(state))\n            return undefined;\n        if (!isDefined(include[state.name]))\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return Param.equals(schema, Param.values(schema, params), this.params);\n    };\n    /**\n     * Generates a URL for a state and parameters\n     *\n     * Returns the url for the given state populated with the given params.\n     *\n     * #### Example:\n     * ```js\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * ```\n     *\n     * @param stateOrName The state name or state object you'd like to generate a url from.\n     * @param params An object of parameter values to fill the state's required parameters.\n     * @param options Options object. The options are:\n     *\n     * @returns {string} compiled state url\n     */\n    StateService.prototype.href = function (stateOrName, params, options) {\n        var defaultHrefOpts = {\n            lossy: true,\n            inherit: true,\n            absolute: false,\n            relative: this.$current,\n        };\n        options = defaults(options, defaultHrefOpts);\n        params = params || {};\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!isDefined(state))\n            return null;\n        if (options.inherit)\n            params = this.params.$inherit(params, this.$current, state);\n        var nav = state && options.lossy ? state.navigable : state;\n        if (!nav || nav.url === undefined || nav.url === null) {\n            return null;\n        }\n        return this.router.urlRouter.href(nav.url, params, { absolute: options.absolute });\n    };\n    /**\n     * Sets or gets the default [[transitionTo]] error handler.\n     *\n     * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n     * This includes errors caused by resolves and transition hooks.\n     *\n     * Note:\n     * This handler does not receive certain Transition rejections.\n     * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n     *\n     * The built-in default error handler logs the error to the console.\n     *\n     * You can provide your own custom handler.\n     *\n     * #### Example:\n     * ```js\n     * stateService.defaultErrorHandler(function() {\n     *   // Do not log transitionTo errors\n     * });\n     * ```\n     *\n     * @param handler a global error handler function\n     * @returns the current global error handler\n     */\n    StateService.prototype.defaultErrorHandler = function (handler) {\n        return (this._defaultErrorHandler = handler || this._defaultErrorHandler);\n    };\n    StateService.prototype.get = function (stateOrName, base) {\n        var reg = this.router.stateRegistry;\n        if (arguments.length === 0)\n            return reg.get();\n        return reg.get(stateOrName, base || this.$current);\n    };\n    /**\n     * Lazy loads a state\n     *\n     * Explicitly runs a state's [[StateDeclaration.lazyLoad]] function.\n     *\n     * @param stateOrName the state that should be lazy loaded\n     * @param transition the optional Transition context to use (if the lazyLoad function requires an injector, etc)\n     * Note: If no transition is provided, a noop transition is created using the from the current state to the current state.\n     * This noop transition is not actually run.\n     *\n     * @returns a promise to lazy load\n     */\n    StateService.prototype.lazyLoad = function (stateOrName, transition) {\n        var state = this.get(stateOrName);\n        if (!state || !state.lazyLoad)\n            throw new Error('Can not lazy load ' + stateOrName);\n        var currentPath = this.getCurrentPath();\n        var target = PathUtils.makeTargetState(this.router.stateRegistry, currentPath);\n        transition = transition || this.router.transitionService.create(currentPath, target);\n        return lazyLoadState(transition, state);\n    };\n    return StateService;\n}());\nexport { StateService };\n//# sourceMappingURL=stateService.js.map","/** @internalapi @module vanilla */ /** */\nimport { isArray, isObject } from '../common/index';\n/**\n * An angular1-like promise api\n *\n * This object implements four methods similar to the\n * [angular 1 promise api](https://docs.angularjs.org/api/ng/service/$q)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This API provides native ES6 promise support wrapped as a $q-like API.\n * Internally, UI-Router uses this $q object to perform promise operations.\n * The `angular-ui-router` (ui-router for angular 1) uses the $q API provided by angular.\n *\n * $q-like promise api\n */\nexport var $q = {\n    /** Normalizes a value as a promise */\n    when: function (val) { return new Promise(function (resolve, reject) { return resolve(val); }); },\n    /** Normalizes a value as a promise rejection */\n    reject: function (val) {\n        return new Promise(function (resolve, reject) {\n            reject(val);\n        });\n    },\n    /** @returns a deferred object, which has `resolve` and `reject` functions */\n    defer: function () {\n        var deferred = {};\n        deferred.promise = new Promise(function (resolve, reject) {\n            deferred.resolve = resolve;\n            deferred.reject = reject;\n        });\n        return deferred;\n    },\n    /** Like Promise.all(), but also supports object key/promise notation like $q */\n    all: function (promises) {\n        if (isArray(promises)) {\n            return Promise.all(promises);\n        }\n        if (isObject(promises)) {\n            // Convert promises map to promises array.\n            // When each promise resolves, map it to a tuple { key: key, val: val }\n            var chain = Object.keys(promises).map(function (key) { return promises[key].then(function (val) { return ({ key: key, val: val }); }); });\n            // Then wait for all promises to resolve, and convert them back to an object\n            return $q.all(chain).then(function (values) {\n                return values.reduce(function (acc, tuple) {\n                    acc[tuple.key] = tuple.val;\n                    return acc;\n                }, {});\n            });\n        }\n    },\n};\n//# sourceMappingURL=q.js.map","/** @internalapi @module vanilla */ /** */\nimport { extend, assertPredicate, isFunction, isArray, isInjectable, } from '../common/index';\n// globally available injectables\nvar globals = {};\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\n/**\n * A basic angular1-like injector api\n *\n * This object implements four methods similar to the\n * [angular 1 dependency injector](https://docs.angularjs.org/api/auto/service/$injector)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This object provides a naive implementation of a globally scoped dependency injection system.\n * It supports the following DI approaches:\n *\n * ### Function parameter names\n *\n * A function's `.toString()` is called, and the parameter names are parsed.\n * This only works when the parameter names aren't \"mangled\" by a minifier such as UglifyJS.\n *\n * ```js\n * function injectedFunction(FooService, BarService) {\n *   // FooService and BarService are injected\n * }\n * ```\n *\n * ### Function annotation\n *\n * A function may be annotated with an array of dependency names as the `$inject` property.\n *\n * ```js\n * injectedFunction.$inject = [ 'FooService', 'BarService' ];\n * function injectedFunction(fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }\n * ```\n *\n * ### Array notation\n *\n * An array provides the names of the dependencies to inject (as strings).\n * The function is the last element of the array.\n *\n * ```js\n * [ 'FooService', 'BarService', function (fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }]\n * ```\n *\n * @type {$InjectorLike}\n */\nexport var $injector = {\n    /** Gets an object from DI based on a string token */\n    get: function (name) { return globals[name]; },\n    /** Returns true if an object named `name` exists in global DI */\n    has: function (name) { return $injector.get(name) != null; },\n    /**\n     * Injects a function\n     *\n     * @param fn the function to inject\n     * @param context the function's `this` binding\n     * @param locals An object with additional DI tokens and values, such as `{ someToken: { foo: 1 } }`\n     */\n    invoke: function (fn, context, locals) {\n        var all = extend({}, globals, locals || {});\n        var params = $injector.annotate(fn);\n        var ensureExist = assertPredicate(function (key) { return all.hasOwnProperty(key); }, function (key) { return \"DI can't find injectable: '\" + key + \"'\"; });\n        var args = params.filter(ensureExist).map(function (x) { return all[x]; });\n        if (isFunction(fn))\n            return fn.apply(context, args);\n        else\n            return fn.slice(-1)[0].apply(context, args);\n    },\n    /**\n     * Returns a function's dependencies\n     *\n     * Analyzes a function (or array) and returns an array of DI tokens that the function requires.\n     * @return an array of `string`s\n     */\n    annotate: function (fn) {\n        if (!isInjectable(fn))\n            throw new Error(\"Not an injectable function: \" + fn);\n        if (fn && fn.$inject)\n            return fn.$inject;\n        if (isArray(fn))\n            return fn.slice(0, -1);\n        var fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n        var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n        return result || [];\n    },\n};\n//# sourceMappingURL=injector.js.map","/** @internalapi @module vanilla */ /** */\nimport { identity, unnestR, isArray, splitEqual, splitHash, splitQuery, } from '../common';\nexport var keyValsToObjectR = function (accum, _a) {\n    var key = _a[0], val = _a[1];\n    if (!accum.hasOwnProperty(key)) {\n        accum[key] = val;\n    }\n    else if (isArray(accum[key])) {\n        accum[key].push(val);\n    }\n    else {\n        accum[key] = [accum[key], val];\n    }\n    return accum;\n};\nexport var getParams = function (queryString) {\n    return queryString\n        .split('&')\n        .filter(identity)\n        .map(splitEqual)\n        .reduce(keyValsToObjectR, {});\n};\nexport function parseUrl(url) {\n    var orEmptyString = function (x) { return x || ''; };\n    var _a = splitHash(url).map(orEmptyString), beforehash = _a[0], hash = _a[1];\n    var _b = splitQuery(beforehash).map(orEmptyString), path = _b[0], search = _b[1];\n    return { path: path, search: search, hash: hash, url: url };\n}\nexport var buildUrl = function (loc) {\n    var path = loc.path();\n    var searchObject = loc.search();\n    var hash = loc.hash();\n    var search = Object.keys(searchObject)\n        .map(function (key) {\n        var param = searchObject[key];\n        var vals = isArray(param) ? param : [param];\n        return vals.map(function (val) { return key + '=' + val; });\n    })\n        .reduce(unnestR, [])\n        .join('&');\n    return path + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n};\nexport function locationPluginFactory(name, isHtml5, serviceClass, configurationClass) {\n    return function (uiRouter) {\n        var service = (uiRouter.locationService = new serviceClass(uiRouter));\n        var configuration = (uiRouter.locationConfig = new configurationClass(uiRouter, isHtml5));\n        function dispose(router) {\n            router.dispose(service);\n            router.dispose(configuration);\n        }\n        return { name: name, service: service, configuration: configuration, dispose: dispose };\n    };\n}\n//# sourceMappingURL=utils.js.map","/** @internalapi @module vanilla */ /** */\nimport { deregAll, isDefined, removeFrom, root } from '../common';\nimport { buildUrl, getParams, parseUrl } from './utils';\n/** A base `LocationServices` */\nvar BaseLocationServices = /** @class */ (function () {\n    function BaseLocationServices(router, fireAfterUpdate) {\n        var _this = this;\n        this.fireAfterUpdate = fireAfterUpdate;\n        this._listeners = [];\n        this._listener = function (evt) { return _this._listeners.forEach(function (cb) { return cb(evt); }); };\n        this.hash = function () { return parseUrl(_this._get()).hash; };\n        this.path = function () { return parseUrl(_this._get()).path; };\n        this.search = function () { return getParams(parseUrl(_this._get()).search); };\n        this._location = root.location;\n        this._history = root.history;\n    }\n    BaseLocationServices.prototype.url = function (url, replace) {\n        if (replace === void 0) { replace = true; }\n        if (isDefined(url) && url !== this._get()) {\n            this._set(null, null, url, replace);\n            if (this.fireAfterUpdate) {\n                this._listeners.forEach(function (cb) { return cb({ url: url }); });\n            }\n        }\n        return buildUrl(this);\n    };\n    BaseLocationServices.prototype.onChange = function (cb) {\n        var _this = this;\n        this._listeners.push(cb);\n        return function () { return removeFrom(_this._listeners, cb); };\n    };\n    BaseLocationServices.prototype.dispose = function (router) {\n        deregAll(this._listeners);\n    };\n    return BaseLocationServices;\n}());\nexport { BaseLocationServices };\n//# sourceMappingURL=baseLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/** @internalapi @module vanilla */ /** */\nimport { root, trimHashVal } from '../common';\nimport { BaseLocationServices } from './baseLocationService';\n/** A `LocationServices` that uses the browser hash \"#\" to get/set the current location */\nvar HashLocationService = /** @class */ (function (_super) {\n    __extends(HashLocationService, _super);\n    function HashLocationService(router) {\n        var _this = _super.call(this, router, false) || this;\n        root.addEventListener('hashchange', _this._listener, false);\n        return _this;\n    }\n    HashLocationService.prototype._get = function () {\n        return trimHashVal(this._location.hash);\n    };\n    HashLocationService.prototype._set = function (state, title, url, replace) {\n        this._location.hash = url;\n    };\n    HashLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        root.removeEventListener('hashchange', this._listener);\n    };\n    return HashLocationService;\n}(BaseLocationServices));\nexport { HashLocationService };\n//# sourceMappingURL=hashLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/** @internalapi @module vanilla */ /** */\nimport { BaseLocationServices } from './baseLocationService';\n/** A `LocationServices` that gets/sets the current location from an in-memory object */\nvar MemoryLocationService = /** @class */ (function (_super) {\n    __extends(MemoryLocationService, _super);\n    function MemoryLocationService(router) {\n        return _super.call(this, router, true) || this;\n    }\n    MemoryLocationService.prototype._get = function () {\n        return this._url;\n    };\n    MemoryLocationService.prototype._set = function (state, title, url, replace) {\n        this._url = url;\n    };\n    return MemoryLocationService;\n}(BaseLocationServices));\nexport { MemoryLocationService };\n//# sourceMappingURL=memoryLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BaseLocationServices } from './baseLocationService';\nimport { root, splitHash, splitQuery, stripLastPathElement } from '../common';\n/**\n * A `LocationServices` that gets/sets the current location using the browser's `location` and `history` apis\n *\n * Uses `history.pushState` and `history.replaceState`\n */\nvar PushStateLocationService = /** @class */ (function (_super) {\n    __extends(PushStateLocationService, _super);\n    function PushStateLocationService(router) {\n        var _this = _super.call(this, router, true) || this;\n        _this._config = router.urlService.config;\n        root.addEventListener('popstate', _this._listener, false);\n        return _this;\n    }\n    /**\n     * Gets the base prefix without:\n     * - trailing slash\n     * - trailing filename\n     * - protocol and hostname\n     *\n     * If <base href='/base/'>, this returns '/base'.\n     * If <base href='/foo/base/'>, this returns '/foo/base'.\n     * If <base href='/base/index.html'>, this returns '/base'.\n     * If <base href='http://localhost:8080/base/index.html'>, this returns '/base'.\n     * If <base href='/base'>, this returns ''.\n     * If <base href='http://localhost:8080'>, this returns ''.\n     * If <base href='http://localhost:8080/'>, this returns ''.\n     *\n     * See: https://html.spec.whatwg.org/dev/semantics.html#the-base-element\n     */\n    PushStateLocationService.prototype._getBasePrefix = function () {\n        return stripLastPathElement(this._config.baseHref());\n    };\n    PushStateLocationService.prototype._get = function () {\n        var _a = this._location, pathname = _a.pathname, hash = _a.hash, search = _a.search;\n        search = splitQuery(search)[1]; // strip ? if found\n        hash = splitHash(hash)[1]; // strip # if found\n        var basePrefix = this._getBasePrefix();\n        var exactBaseHrefMatch = pathname === this._config.baseHref();\n        var startsWithBase = pathname.substr(0, basePrefix.length) === basePrefix;\n        pathname = exactBaseHrefMatch ? '/' : startsWithBase ? pathname.substring(basePrefix.length) : pathname;\n        return pathname + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n    };\n    PushStateLocationService.prototype._set = function (state, title, url, replace) {\n        var basePrefix = this._getBasePrefix();\n        var slash = url && url[0] !== '/' ? '/' : '';\n        var fullUrl = url === '' || url === '/' ? this._config.baseHref() : basePrefix + slash + url;\n        if (replace) {\n            this._history.replaceState(state, title, fullUrl);\n        }\n        else {\n            this._history.pushState(state, title, fullUrl);\n        }\n    };\n    PushStateLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        root.removeEventListener('popstate', this._listener);\n    };\n    return PushStateLocationService;\n}(BaseLocationServices));\nexport { PushStateLocationService };\n//# sourceMappingURL=pushStateLocationService.js.map","/** @internalapi @module vanilla */\n/** */\nimport { isDefined, isUndefined } from '../common/predicates';\n/** A `LocationConfig` that delegates to the browser's `location` object */\nvar BrowserLocationConfig = /** @class */ (function () {\n    function BrowserLocationConfig(router, _isHtml5) {\n        if (_isHtml5 === void 0) { _isHtml5 = false; }\n        this._isHtml5 = _isHtml5;\n        this._baseHref = undefined;\n        this._hashPrefix = '';\n    }\n    BrowserLocationConfig.prototype.port = function () {\n        if (location.port) {\n            return Number(location.port);\n        }\n        return this.protocol() === 'https' ? 443 : 80;\n    };\n    BrowserLocationConfig.prototype.protocol = function () {\n        return location.protocol.replace(/:/g, '');\n    };\n    BrowserLocationConfig.prototype.host = function () {\n        return location.hostname;\n    };\n    BrowserLocationConfig.prototype.html5Mode = function () {\n        return this._isHtml5;\n    };\n    BrowserLocationConfig.prototype.hashPrefix = function (newprefix) {\n        return isDefined(newprefix) ? (this._hashPrefix = newprefix) : this._hashPrefix;\n    };\n    BrowserLocationConfig.prototype.baseHref = function (href) {\n        if (isDefined(href))\n            this._baseHref = href;\n        if (isUndefined(this._baseHref))\n            this._baseHref = this.getBaseHref();\n        return this._baseHref;\n    };\n    BrowserLocationConfig.prototype.getBaseHref = function () {\n        var baseTag = document.getElementsByTagName('base')[0];\n        if (baseTag && baseTag.href) {\n            return baseTag.href.replace(/^([^/:]*:)?\\/\\/[^/]*/, '');\n        }\n        return this._isHtml5 ? '/' : location.pathname || '/';\n    };\n    BrowserLocationConfig.prototype.dispose = function () { };\n    return BrowserLocationConfig;\n}());\nexport { BrowserLocationConfig };\n//# sourceMappingURL=browserLocationConfig.js.map","/** @internalapi @module vanilla */ /** */\nimport { BrowserLocationConfig } from './browserLocationConfig';\nimport { HashLocationService } from './hashLocationService';\nimport { locationPluginFactory } from './utils';\nimport { PushStateLocationService } from './pushStateLocationService';\nimport { MemoryLocationService } from './memoryLocationService';\nimport { MemoryLocationConfig } from './memoryLocationConfig';\nimport { $injector } from './injector';\nimport { $q } from './q';\nimport { services } from '../common/coreservices';\nexport function servicesPlugin(router) {\n    services.$injector = $injector;\n    services.$q = $q;\n    return { name: 'vanilla.services', $q: $q, $injector: $injector, dispose: function () { return null; } };\n}\n/** A `UIRouterPlugin` uses the browser hash to get/set the current location */\nexport var hashLocationPlugin = locationPluginFactory('vanilla.hashBangLocation', false, HashLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location using the browser's `location` and `history` apis */\nexport var pushStateLocationPlugin = locationPluginFactory('vanilla.pushStateLocation', true, PushStateLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location from an in-memory object */\nexport var memoryLocationPlugin = locationPluginFactory('vanilla.memoryLocation', false, MemoryLocationService, MemoryLocationConfig);\n//# sourceMappingURL=plugins.js.map","import { pushStateLocationPlugin, servicesPlugin, UIRouter } from '@uirouter/core';\n\nconst DEFAULT_ROUTE = 'entry';\n\nexport class SiteRouter {\n\n  constructor() {\n    this.router = new UIRouter();\n    this.router.plugin(pushStateLocationPlugin);\n    this.router.plugin(servicesPlugin);\n    this.routes = {};\n  }\n\n  start() {\n    this.router.urlService.rules.initial({ state: DEFAULT_ROUTE });\n    this.router.urlService.rules.otherwise({ state: DEFAULT_ROUTE });\n    // this.router.trace.enable(1);\n    this.router.urlService.listen();\n    this.router.urlService.sync();\n  }\n\n  addRoute(config) {\n    if (config && config.name) {\n      this.routes[config.name] = config;\n      this.router.stateRegistry.register(config);\n    }\n  }\n\n  /**\n   * clear selection\n   */\n  clearRoute() {\n    this.setRoute();\n  }\n\n  setRoute(name, params) {\n    if (arguments.length > 0 && this.routes[name]) {\n      this.router.stateService.go(name, params);\n    } else {\n      this.router.stateService.go(DEFAULT_ROUTE);\n    }\n  }\n\n  link(name, params) {\n    let result = '';\n    if (params) {\n      result = this.router.stateService.href(name, params);\n    } else {\n      result = this.router.stateService.href(name);\n    }\n    return result;\n  }\n\n  onEnterAll(options, func) {\n    this.router.transitionService.onEnter(options, func);\n  }\n  onExitAll(options, func) {\n    this.router.transitionService.onExit(options, func);\n  }\n}"],"names":["curry","fn","initial_args","slice","apply","arguments","func_args_length","length","curried","args","concat","pipe","funcs","_i","start","i","result","this","call","reverse","prop","name","obj","propEq","_val","parse","split","map","not","all","fn1","arr","reduce","b","x","any","is","ctor","constructor","val","v","pattern","struct","fn2","toStr","Object","prototype","toString","tis","t","isUndefined","isDefined","isNull","o","isNullOrUndefined","isFunction","isNumber","isString","isObject","isArray","Array","isDate","isRegExp","isInjectable","head","tail","filter","isPromise","and","makeStub","service","methods","acc","key","fnname","Error","services","$q","undefined","$injector","root","self","global","angular","fromJson","JSON","bind","toJson","stringify","forEach","cb","_this","keys","extend","assign","toObj","j","equals","_equals","identity","noop","createProxyFunctions","source","target","fnNames","latebind","bindFunction","fnName","inherit","parent","extra","create","inArray","array","indexOf","removeFrom","idx","splice","pushTo","push","defaults","opts","defaultsList","defaultVals","pick","mergeR","memo","item","propNames","objCopy","_prop","omit","collection","callback","accept","find","mapObj","values","allTrueR","elem","anyTrueR","unnestR","flattenR","pushR","uniqR","token","unnest","assertPredicate","predicateOrMap","errMsg","arrayTuples","maxArrayLen","min","Math","_loop_1","applyPairs","keyValTuple","value","copy","src","dest","o1","o2","t1","a1","a2","tup","getTime","RejectType","silenceUncaughtInPromise","promise","catch","e","silentRejection","error","reject","Glob","text","glob","regexpString","seg","join","regexp","RegExp","exec","fromString","matches","test","Queue","_items","_limit","_evictListeners","onEvict","enqueue","items","evict","shift","dequeue","size","clear","current","remove","peekTail","peekHead","id","Rejection","type","message","detail","$id","isRejectionPromise","then","_transitionRejection","superseded","options","rejection","SUPERSEDED","redirected","invalid","INVALID","ignored","IGNORED","aborted","ABORTED","errored","ERROR","normalize","d","toPromise","maxLength","max","str","substr","functionToString","fnStr","fnToString","namedFunctionMatch","match","_fn","isRejection","stringifyPattern","seen","format","replace","beforeAfterSubstr","char","stripLastPathElement","splitHash","splitQuery","splitEqual","joinNeighborsR","uiViewString","uiview","state","creationContext","$type","fqn","normalizedCat","input","Category","consoleLog","Function","console","log","consoletable","table","_tid","_rid","transLbl","trans","trace","Trace","_enabled","approximateDigests","_set","enabled","categories","k","parseInt","isNaN","category","enable","disable","traceTransitionStart","TRANSITION","traceTransitionIgnored","traceHookInvocation","step","HOOK","event","context","registeredHook","traceHookResult","hookResult","transitionOptions","traceResolvePath","path","when","RESOLVE","traceResolvableResolved","resolvable","data","traceError","reason","traceSuccess","finalState","traceUIViewEvent","viewData","UIVIEW","padString","traceUIViewConfigUpdated","traceUIViewFill","html","traceViewSync","pairs","VIEWCONFIG","uivheader","mapping","_a","_b","uiView","viewConfig","uiv","cfg","viewDecl","$context","$name","sort","a","localeCompare","traceViewServiceEvent","view","$uiViewName","$uiViewContextAnchor","viewConfigString","traceViewServiceUIViewEvent","ParamType","def","encode","decode","$subPattern","sub","$normalize","$asArray","mode","isSearch","arrayWrap","arrayHandler","allTruthyMode","arrayUnwrap","arrayEqualsHandler","val1","val2","left","right","paramTypeFn","wrapperFn","dynamic","raw","$arrayMode","DefType","hasOwn","hasOwnProperty","isShorthand","getParamDeclaration","paramName","location","noReloadOnSearch","reloadOnSearch","SEARCH","defaultConfig","paramConfig","getStaticDefaultValue","$$fn","unwrapShorthand","params","makeDefaultType","Param","urlConfig","config","urlType","paramTypes","CONFIG","PATH","getType","arrayDefaults","arrayParamNomenclature","arrayMode","isOptional","squash","defaultPolicy","getSquashPolicy","defaultSquashPolicy","from","to","configuredKeys","getReplace","paramValues","params_1","param","changed","values1","values2","validates","isDefaultValue","tuple","replaceSpecialValues","_defaultValueCache","defaultValue","invoke","getDefaultValue","normalized","encoded","ParamTypes","typeQueue","defaultTypes","types","definition","dispose","definitionFn","_flushTypeQueue","valToString","defaultTypeBase","String","string","query","hash","int","bool","Boolean","date","getFullYear","getMonth","getDate","capture","Date","valueOf","l","r","json","StateParams","$inherit","newParams","$current","$to","parentParams","parents","first","second","n","ancestors","inherited","inheritList","PathNode","stateOrNode","node","paramSchema","resolvables","views","parameters","res","clone","applyRawParams","pDef","paramDef","parameter","paramsFn","diff","TargetState","_stateRegistry","_identifier","_params","_options","_definition","matcher","relative","identifier","$state","exists","valid","base","stateName","withState","withParams","withOptions","newOpts","isDef","PathUtils","makeTargetState","registry","buildPath","targetState","toParams","buildToPath","fromPath","toPath","inheritParams","applyViewConfigs","$view","states","viewDecls","subPath","viewConfigs","createViewConfig","toKeys","noInherit","toNode","toParamVals","incomingParamVals","fromParamVals","ownParamVals","treeChanges","reloadState","node1","node2","retained","exiting","entering","keep","nonDynamicParams","retainedWithToParams","retainedNode","cloned","matching","pathA","pathB","done","nodeA","nodeB","predicate","elementIdx","resolvePolicies","LAZY","EAGER","defaultResolvePolicy","Resolvable","arg1","resolveFn","deps","policy","resolved","literal","getPolicy","thisPolicy","statePolicy","resolvePolicy","async","resolve","resolveContext","findNode","maybeWaitForRx","observable$","cached","cache","take","getDependencies","get","resolvedDeps","resolvedValue","fromData","whens","ALL_WHENS","EAGER_WHENS","NATIVE_INJECTOR_TOKEN","ResolveContext","_path","getTokens","getResolvable","subContext","addResolvables","newResolvables","resolvePath","matchedWhens","matchesPolicy","acceptedVals","whenOrAsync","promises","nodeResolvables","nowait","wait","getResult","injector","_injector","UIInjectorImpl","availableResolvables","_node","fromInjector","getNative","native","getAsync","nameBuilder","selfBuilder","$$state","dataBuilder","getUrlBuilder","$urlMatcherFactoryProvider","stateObject","stateDec","url","newStateDec","parsed","charAt","substring","parseUrl","compile","isMatcher","navigable","append","getNavigableBuilder","isRoot","getParamsBuilder","paramFactory","urlParams","nonUrlParams","fromConfig","p","pathBuilder","includesBuilder","includes","resolvablesBuilder","resolveObj","getToken","provide","literal2Resolvable","useFactory","dependencies","useClass","useValue","useExisting","tuple2Resolvable","annotate","strictDi","item2Resolvable","decl","TransitionHookPhase","TransitionHookScope","StateBuilder","urlMatcherFactory","builders","parentName","builder","build","chain","parentFn","_state","segments","pop","StateObject","stateDecl","isStateClass","__stateObjectCache","nameGlob","ref","matchingKeys","isState","StateMatcher","_states","isRelative","stateOrName","matchGlob","isStr","baseState","splitName","pathLength","relName","StateQueueManager","router","listeners","queue","register","flush","registered","orphans","previousQueueLength","getState","notifyListeners","listener","s","name_1","orphanIdx","existingState","existingFutureState","stateRegistry","deregister","attachRoute","prev","abstract","rulesApi","urlService","rules","rule","urlRuleFactory","StateRegistry","stateQueue","_registerRoot","_root","#","onStatesChanged","stateDefinition","_deregisterTree","getChildren","_children","children","deregistered","removeRule","deregisteredStates","found","decorator","func","defaultOptions","transition","traceData","TransitionHook","stateContext","isSuperseded","hookPhase","RUN","isActive","eventType","hooks","waitFor","nextHook","invokeHook","invokeHooks","doneCallback","remainingHooks","runAllHooks","hook","logError","err","stateService","defaultErrorHandler","_deregistered","notCurrent","getNotCurrentRejection","handleError","getErrorHandler","handleResult","getResultHandler","synchronous","invokeLimit","invokeCount","handleHookResult","isTargetState","_disposed","_aborted","HANDLE_RESULT","LOG_REJECTED_RESULT","LOG_ERROR","REJECT_ERROR","THROW_ERROR","matchState","criterion","toMatch","globStrings","RegisteredHook","tranSvc","matchCriteria","removeHookFromRegistry","priority","_matchingNodes","nodes","_getDefaultMatchCriteria","_pluginapi","_getPathTypes","_getMatchingNodes","criteria","mn","pathtype","isStateHook","scope","STATE","every","makeEvent","transitionService","_registeredHooks","removeHookFn","hookRegistrationFn","matchObject","HookBuilder","buildHooksForPhase","phase","_getEvents","buildHooks","hookType","matchingHooks","getMatchingHooks","baseHookOptions","criteriaMatchPath","transitionHook","reverseDepthSort","factor","depthDelta","tupleSort","reverseSort","isCreate","CREATE","$transitions","reg","getHooks","stateSelf","Transition","_deferred","defer","_hookBuilder","globals","_targetState","_transitionCount","_treeChanges","createTransitionHookRegFns","onCreateHooks","onBefore","onStart","onExit","onRetain","onEnter","onFinish","onSuccess","onError","hookName","enteringStates","$from","compare","pathname","freeze","paramsChanged","fromParams","allParamDescriptors","pathNode","changedValues","descriptor","pathName","getResolveTokens","addResolvable","topath","targetNode","redirectedFrom","originalTransition","rf","redirect","redirects","redirectOpts","newOptions","newTransition","originalEnteringNodes","redirectEnteringNodes","_changedParams","tc","reload","nodeSchemas","schema","toVals","fromVals","changes","_ignoredReason","pending","same","newTC","pendTC","run","getHooksFor","allBeforeHooks","BEFORE","lastStartedTransitionId","transitionHistory","allRunHooks","success","SUCCESS","_error","abort","paramDefs","invalidParams","invalidValues","fromStateOrName","toStateOrName","avoidEmptyHash","diToken","quoteRegExp","surroundPattern","re","splitOnSlash","strict","caseInsensitive","UrlMatcher","_cache","_segments","_compiled","matchArray","details","segment","placeholder","searchPlaceholder","patterns","last","checkParamErrors","nameValidator","matchDetails","m","index","lastIndex","search","fromSearch","_pattern","encodeDashes","encodeURIComponent","c","charCodeAt","toUpperCase","pathSegmentsAndParams","queryParams","weights","weightsA","weightsB","padVal","len","padArrays","cmp","_pairs","reverseString","allParams","pathParams","searchParams","nPathSegments","urlm","findParam","urlMatchers","getDetails","isValid","pathString","queryString","paramDetails","__assign","ParamFactory","UrlMatcherFactory","strictMode","globalConfig","_isStrictMode","_isCaseInsensitive","object","$get","UrlRuleFactory","what","handler","makeRule","_what","fromUrlMatcher","fromState","fromRegExp","BaseUrlRule","urlMatcher","_handler","matchPriority","optional","href","transitionTo","sticky","Number","isUrlRule","defaultRuleSortFn","UrlRouter","sync","evt","listen","deferIntercept","urlParts","initial","otherwise","compareFn","update","read","$url","locationService","absolute","isHtml5","html5Mode","hashPrefix","baseHref","appendBasePath","slash","cfgPort","port","protocol","host","defineProperty","interceptDeferred","enumerable","configurable","ViewService","_uiViews","_viewConfigs","_viewConfigFactories","_listeners","_rootViewContext","_viewConfigFactory","_registeredUIView","_registeredUIViews","_activeViewConfigs","_onSync","normalizeUIViewTarget","rawViewName","viewAtContext","uiViewName","uiViewContextAnchor","relativeViewNameSugar","anchor","_rootContext","viewType","factory","cfgFactory","cfgs","deactivateViewConfig","activateViewConfig","uiViewsByFqn","viewConfigDepth","count","depthCompare","depthFn","posNeg","uiViewTuples","stateDepth","matchingConfigs","matchedViewConfigs","unmatchedConfigTuples","configUpdated","allTuples","registerUIView","uiViews","available","active","vc","vcSegments","uivSegments","negOffset","fqnToFirstSegment","uiViewContext","UIRouterGlobals","successfulTransitions","getHandlerFn","prioritySort","URLMATCHER","REGEXP","RAW","OTHER","typeSort","urlMatcherSort","useMatchPriority","idSort","UrlRules","_sortFn","_rules","_id","_otherwiseFn","handlerFn","_sorted","ensureSorted","sorted","stableSort","group","_group","arrOfWrapper","wrapperA","wrapperB","cmpDiff","wrapper","UrlConfig","_defaultSquashPolicy","locationConfig","newprefix","UrlService","newurl","onChange","parts","defaultPrevented","best","go","applyResult","_stopListeningFn","weight","_routerInstance","locationServiceStub","locationConfigStub","UIRouter","_disposables","viewService","TransitionService","urlRouter","StateService","_plugins","disposable","plugin","pluginInstance","getPlugin","pluginName","addCoreResolvables","isTransition","treeChangesCleanup","replaceTransitionWithNull","redirectToHook","redirectTo","makeEnterExitRetainHook","hookFn","onExitHook","onRetainHook","onEnterHook","eagerResolvePath","lazyResolveState","resolveRemaining","loadEnteringViews","enteringViews","load","activateViews","exitingViews","updateGlobalState","clearCurrentTransition","updateUrl","$urlRouter","urlOptions","lazyLoadHook","lazyLoad","lazyLoadState","orig","lazyLoadFn","TransitionEventType","hookOrder","ignoredHook","ignoredReason","invalidTransitionHook","defaultTransOpts","notify","custom","_router","_eventTypes","_criteriaPaths","_deregisterHookFns","_defineCorePaths","_defineCoreEvents","_registerCoreTransitionHooks","onCreate","hooksArray","Phase","TH","paths","_defineEvent","_definePathType","cmpByPhase","hookScope","fns","addCoreResolves","registerIgnoredTransitionHook","registerInvalidTransitionHook","registerRedirectToHook","registerOnExitHook","registerOnRetainHook","registerOnEnterHook","eagerResolve","registerEagerResolvePath","lazyResolve","registerLazyResolveState","resolveAll","registerResolveRemaining","loadViews","registerLoadEnteringViews","registerActivateViews","updateGlobals","registerUpdateGlobalState","registerUpdateUrl","registerLazyLoadHook","invalidCallbacks","_defaultErrorHandler","$error$","stack","boundFns","_handleInvalidTargetState","toState","latestThing","latest","callbackQueue","checkForRedirect","invokeNextCallback","nextCallback","onInvalid","transOpts","getCurrentPath","latestSuccess","currentPath","rejectedTransitionHandler","isLatest","errorHandler","transitionToPromise","include","lossy","nav","Promise","deferred","STRIP_COMMENTS","ARGUMENT_NAMES","has","locals","ensureExist","$inject","keyValsToObjectR","accum","getParams","orEmptyString","beforehash","extendStatics","BaseLocationServices","fireAfterUpdate","_listener","_get","_location","_history","history","loc","searchObject","functions","__extends","setPrototypeOf","__proto__","__","_super","HashLocationService","addEventListener","title","removeEventListener","MemoryLocationService","_url","PushStateLocationService","_config","_getBasePrefix","basePrefix","exactBaseHrefMatch","startsWithBase","fullUrl","replaceState","pushState","BrowserLocationConfig","_isHtml5","_baseHref","_hashPrefix","hostname","getBaseHref","baseTag","document","getElementsByTagName","servicesPlugin","serviceClass","configurationClass","pushStateLocationPlugin","uiRouter","configuration","DEFAULT_ROUTE","[object Object]","routes","setRoute"],"mappings":"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"}